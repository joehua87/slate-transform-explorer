!function(t){function e(r){if(n[r])return n[r].exports;var o=n[r]={exports:{},id:r,loaded:!1};return t[r].call(o.exports,o,o.exports,e),o.loaded=!0,o.exports}var n={};return e.m=t,e.c=n,e.p="/",e(0)}(function(t){for(var e in t)if(Object.prototype.hasOwnProperty.call(t,e))switch(typeof t[e]){case"function":break;case"object":t[e]=function(e){var n=e.slice(1),r=t[e[0]];return function(t,e,o){r.apply(this,[t,e,o].concat(n))}}(t[e]);break;default:t[e]=t[t[e]]}return t}([function(t,e,n){n(287),t.exports=n(291)},function(t,e,n){"use strict";function r(t,e,n,r,o,s,i,a){if(!t){var c;if(void 0===e)c=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,o,s,i,a],l=0;c=new Error(e.replace(/%s/g,function(){return u[l++]})),c.name="Invariant Violation"}throw c.framesToPop=1,c}}t.exports=r},function(t,e){"use strict";function n(t){for(var e=arguments.length-1,n="Minified React error #"+t+"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant="+t,r=0;r<e;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);n+=" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";var o=new Error(n);throw o.name="Invariant Violation",o.framesToPop=1,o}t.exports=n},function(t,e,n){"use strict";var r=n(10),o=r;t.exports=o},function(t,e){"use strict";function n(t){if(null===t||void 0===t)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(t)}function r(){try{if(!Object.assign)return!1;var t=new String("abc");if(t[5]="de","5"===Object.getOwnPropertyNames(t)[0])return!1;for(var e={},n=0;n<10;n++)e["_"+String.fromCharCode(n)]=n;var r=Object.getOwnPropertyNames(e).map(function(t){return e[t]});if("0123456789"!==r.join(""))return!1;var o={};return"abcdefghijklmnopqrst".split("").forEach(function(t){o[t]=t}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},o)).join("")}catch(s){return!1}}var o=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable;t.exports=r()?Object.assign:function(t,e){for(var r,i,a=n(t),c=1;c<arguments.length;c++){r=Object(arguments[c]);for(var u in r)o.call(r,u)&&(a[u]=r[u]);if(Object.getOwnPropertySymbols){i=Object.getOwnPropertySymbols(r);for(var l=0;l<i.length;l++)s.call(r,i[l])&&(a[i[l]]=r[i[l]])}}return a}},function(t,e,n){"use strict";function r(t){for(var e;e=t._renderedComponent;)t=e;return t}function o(t,e){var n=r(t);n._hostNode=e,e[g]=n}function s(t){var e=t._hostNode;e&&(delete e[g],t._hostNode=null)}function i(t,e){if(!(t._flags&h.hasCachedChildNodes)){var n=t._renderedChildren,s=e.firstChild;t:for(var i in n)if(n.hasOwnProperty(i)){var a=n[i],c=r(a)._domID;if(null!=c){for(;null!==s;s=s.nextSibling)if(1===s.nodeType&&s.getAttribute(p)===String(c)||8===s.nodeType&&s.nodeValue===" react-text: "+c+" "||8===s.nodeType&&s.nodeValue===" react-empty: "+c+" "){o(a,s);continue t}l("32",c)}}t._flags|=h.hasCachedChildNodes}}function a(t){if(t[g])return t[g];for(var e=[];!t[g];){if(e.push(t),!t.parentNode)return null;t=t.parentNode}for(var n,r;t&&(r=t[g]);t=e.pop())n=r,e.length&&i(r,t);return n}function c(t){var e=a(t);return null!=e&&e._hostNode===t?e:null}function u(t){if(void 0===t._hostNode?l("33"):void 0,t._hostNode)return t._hostNode;for(var e=[];!t._hostNode;)e.push(t),t._hostParent?void 0:l("34"),t=t._hostParent;for(;e.length;t=e.pop())i(t,t._hostNode);return t._hostNode}var l=n(2),d=n(34),f=n(143),p=(n(1),d.ID_ATTRIBUTE_NAME),h=f,g="__reactInternalInstance$"+Math.random().toString(36).slice(2),y={getClosestInstanceFromNode:a,getInstanceFromNode:c,getNodeFromInstance:u,precacheChildNodes:i,precacheNode:o,uncacheNode:s};t.exports=y},function(t,e,n){!function(e,n){t.exports=n()}(this,function(){"use strict";function t(t,e){e&&(t.prototype=Object.create(e.prototype)),t.prototype.constructor=t}function e(t){return s(t)?t:A(t)}function n(t){return i(t)?t:R(t)}function r(t){return a(t)?t:D(t)}function o(t){return s(t)&&!c(t)?t:I(t)}function s(t){return!(!t||!t[un])}function i(t){return!(!t||!t[ln])}function a(t){return!(!t||!t[dn])}function c(t){return i(t)||a(t)}function u(t){return!(!t||!t[fn])}function l(t){return t.value=!1,t}function d(t){t&&(t.value=!0)}function f(){}function p(t,e){e=e||0;for(var n=Math.max(0,t.length-e),r=new Array(n),o=0;o<n;o++)r[o]=t[o+e];return r}function h(t){return void 0===t.size&&(t.size=t.__iterate(y)),t.size}function g(t,e){if("number"!=typeof e){var n=e>>>0;if(""+n!==e||4294967295===n)return NaN;e=n}return e<0?h(t)+e:e}function y(){return!0}function m(t,e,n){return(0===t||void 0!==n&&t<=-n)&&(void 0===e||void 0!==n&&e>=n)}function k(t,e){return v(t,e,0)}function x(t,e){return v(t,e,e)}function v(t,e,n){return void 0===t?n:t<0?Math.max(0,e+t):void 0===e?t:Math.min(e,t)}function b(t){this.next=t}function _(t,e,n,r){var o=0===t?e:1===t?n:[e,n];return r?r.value=o:r={value:o,done:!1},r}function w(){return{value:void 0,done:!0}}function O(t){return!!S(t)}function T(t){return t&&"function"==typeof t.next}function E(t){var e=S(t);return e&&e.call(t)}function S(t){var e=t&&(wn&&t[wn]||t[On]);if("function"==typeof e)return e}function C(t){return t&&"number"==typeof t.length}function A(t){return null===t||void 0===t?j():s(t)?t.toSeq():F(t)}function R(t){return null===t||void 0===t?j().toKeyedSeq():s(t)?i(t)?t.toSeq():t.fromEntrySeq():q(t)}function D(t){return null===t||void 0===t?j():s(t)?i(t)?t.entrySeq():t.toIndexedSeq():L(t)}function I(t){return(null===t||void 0===t?j():s(t)?i(t)?t.entrySeq():t:L(t)).toSetSeq()}function M(t){this._array=t,this.size=t.length}function K(t){var e=Object.keys(t);this._object=t,this._keys=e,this.size=e.length}function P(t){this._iterable=t,this.size=t.length||t.size}function N(t){this._iterator=t,this._iteratorCache=[]}function B(t){return!(!t||!t[En])}function j(){return Sn||(Sn=new M([]))}function q(t){var e=Array.isArray(t)?new M(t).fromEntrySeq():T(t)?new N(t).fromEntrySeq():O(t)?new P(t).fromEntrySeq():"object"==typeof t?new K(t):void 0;if(!e)throw new TypeError("Expected Array or iterable object of [k, v] entries, or keyed object: "+t);return e}function L(t){var e=U(t);if(!e)throw new TypeError("Expected Array or iterable object of values: "+t);return e}function F(t){var e=U(t)||"object"==typeof t&&new K(t);if(!e)throw new TypeError("Expected Array or iterable object of values, or keyed object: "+t);return e}function U(t){return C(t)?new M(t):T(t)?new N(t):O(t)?new P(t):void 0}function z(t,e,n,r){var o=t._cache;if(o){for(var s=o.length-1,i=0;i<=s;i++){var a=o[n?s-i:i];if(e(a[1],r?a[0]:i,t)===!1)return i+1}return i}return t.__iterateUncached(e,n)}function J(t,e,n,r){var o=t._cache;if(o){var s=o.length-1,i=0;return new b(function(){var t=o[n?s-i:i];return i++>s?w():_(e,r?t[0]:i-1,t[1])})}return t.__iteratorUncached(e,n)}function V(t,e){return e?H(e,t,"",{"":t}):W(t)}function H(t,e,n,r){return Array.isArray(e)?t.call(r,n,D(e).map(function(n,r){return H(t,n,r,e)})):Y(e)?t.call(r,n,R(e).map(function(n,r){return H(t,n,r,e)})):e}function W(t){return Array.isArray(t)?D(t).map(W).toList():Y(t)?R(t).map(W).toMap():t}function Y(t){return t&&(t.constructor===Object||void 0===t.constructor)}function G(t,e){if(t===e||t!==t&&e!==e)return!0;if(!t||!e)return!1;if("function"==typeof t.valueOf&&"function"==typeof e.valueOf){if(t=t.valueOf(),e=e.valueOf(),t===e||t!==t&&e!==e)return!0;if(!t||!e)return!1}return!("function"!=typeof t.equals||"function"!=typeof e.equals||!t.equals(e))}function $(t,e){if(t===e)return!0;if(!s(e)||void 0!==t.size&&void 0!==e.size&&t.size!==e.size||void 0!==t.__hash&&void 0!==e.__hash&&t.__hash!==e.__hash||i(t)!==i(e)||a(t)!==a(e)||u(t)!==u(e))return!1;if(0===t.size&&0===e.size)return!0;var n=!c(t);if(u(t)){var r=t.entries();return e.every(function(t,e){var o=r.next().value;return o&&G(o[1],t)&&(n||G(o[0],e))})&&r.next().done}var o=!1;if(void 0===t.size)if(void 0===e.size)"function"==typeof t.cacheResult&&t.cacheResult();else{o=!0;var l=t;t=e,e=l}var d=!0,f=e.__iterate(function(e,r){if(n?!t.has(e):o?!G(e,t.get(r,mn)):!G(t.get(r,mn),e))return d=!1,!1});return d&&t.size===f}function X(t,e){if(!(this instanceof X))return new X(t,e);if(this._value=t,this.size=void 0===e?1/0:Math.max(0,e),0===this.size){if(Cn)return Cn;Cn=this}}function Q(t,e){if(!t)throw new Error(e)}function Z(t,e,n){if(!(this instanceof Z))return new Z(t,e,n);if(Q(0!==n,"Cannot step a Range by 0"),t=t||0,void 0===e&&(e=1/0),n=void 0===n?1:Math.abs(n),e<t&&(n=-n),this._start=t,this._end=e,this._step=n,this.size=Math.max(0,Math.ceil((e-t)/n-1)+1),0===this.size){if(An)return An;An=this}}function tt(){throw TypeError("Abstract")}function et(){}function nt(){}function rt(){}function ot(t){return t>>>1&1073741824|3221225471&t}function st(t){if(t===!1||null===t||void 0===t)return 0;if("function"==typeof t.valueOf&&(t=t.valueOf(),t===!1||null===t||void 0===t))return 0;if(t===!0)return 1;var e=typeof t;if("number"===e){if(t!==t||t===1/0)return 0;var n=0|t;for(n!==t&&(n^=4294967295*t);t>4294967295;)t/=4294967295,n^=t;return ot(n)}if("string"===e)return t.length>Bn?it(t):at(t);if("function"==typeof t.hashCode)return t.hashCode();if("object"===e)return ct(t);if("function"==typeof t.toString)return at(t.toString());throw new Error("Value type "+e+" cannot be hashed.")}function it(t){var e=Ln[t];return void 0===e&&(e=at(t),qn===jn&&(qn=0,Ln={}),qn++,Ln[t]=e),e}function at(t){for(var e=0,n=0;n<t.length;n++)e=31*e+t.charCodeAt(n)|0;return ot(e)}function ct(t){var e;if(Kn&&(e=Rn.get(t),void 0!==e))return e;if(e=t[Nn],void 0!==e)return e;if(!Mn){if(e=t.propertyIsEnumerable&&t.propertyIsEnumerable[Nn],void 0!==e)return e;if(e=ut(t),void 0!==e)return e}if(e=++Pn,1073741824&Pn&&(Pn=0),Kn)Rn.set(t,e);else{if(void 0!==In&&In(t)===!1)throw new Error("Non-extensible objects are not allowed as keys.");if(Mn)Object.defineProperty(t,Nn,{enumerable:!1,configurable:!1,writable:!1,value:e});else if(void 0!==t.propertyIsEnumerable&&t.propertyIsEnumerable===t.constructor.prototype.propertyIsEnumerable)t.propertyIsEnumerable=function(){return this.constructor.prototype.propertyIsEnumerable.apply(this,arguments)},t.propertyIsEnumerable[Nn]=e;else{if(void 0===t.nodeType)throw new Error("Unable to set a non-enumerable property on object.");t[Nn]=e}}return e}function ut(t){if(t&&t.nodeType>0)switch(t.nodeType){case 1:return t.uniqueID;case 9:return t.documentElement&&t.documentElement.uniqueID}}function lt(t){Q(t!==1/0,"Cannot perform this action with an infinite size.")}function dt(t){return null===t||void 0===t?_t():ft(t)&&!u(t)?t:_t().withMutations(function(e){var r=n(t);lt(r.size),r.forEach(function(t,n){return e.set(n,t)})})}function ft(t){return!(!t||!t[Fn])}function pt(t,e){this.ownerID=t,this.entries=e}function ht(t,e,n){this.ownerID=t,this.bitmap=e,this.nodes=n}function gt(t,e,n){this.ownerID=t,this.count=e,this.nodes=n}function yt(t,e,n){this.ownerID=t,this.keyHash=e,this.entries=n}function mt(t,e,n){this.ownerID=t,this.keyHash=e,this.entry=n}function kt(t,e,n){this._type=e,this._reverse=n,this._stack=t._root&&vt(t._root)}function xt(t,e){return _(t,e[0],e[1])}function vt(t,e){return{node:t,index:0,__prev:e}}function bt(t,e,n,r){var o=Object.create(Un);return o.size=t,o._root=e,o.__ownerID=n,o.__hash=r,o.__altered=!1,o}function _t(){return zn||(zn=bt(0))}function wt(t,e,n){var r,o;if(t._root){var s=l(kn),i=l(xn);if(r=Ot(t._root,t.__ownerID,0,void 0,e,n,s,i),!i.value)return t;o=t.size+(s.value?n===mn?-1:1:0)}else{if(n===mn)return t;o=1,r=new pt(t.__ownerID,[[e,n]])}return t.__ownerID?(t.size=o,t._root=r,t.__hash=void 0,t.__altered=!0,t):r?bt(o,r):_t()}function Ot(t,e,n,r,o,s,i,a){return t?t.update(e,n,r,o,s,i,a):s===mn?t:(d(a),d(i),new mt(e,r,[o,s]))}function Tt(t){return t.constructor===mt||t.constructor===yt}function Et(t,e,n,r,o){if(t.keyHash===r)return new yt(e,r,[t.entry,o]);var s,i=(0===n?t.keyHash:t.keyHash>>>n)&yn,a=(0===n?r:r>>>n)&yn,c=i===a?[Et(t,e,n+hn,r,o)]:(s=new mt(e,r,o),i<a?[t,s]:[s,t]);return new ht(e,1<<i|1<<a,c)}function St(t,e,n,r){t||(t=new f);for(var o=new mt(t,st(n),[n,r]),s=0;s<e.length;s++){var i=e[s];o=o.update(t,0,void 0,i[0],i[1])}return o}function Ct(t,e,n,r){for(var o=0,s=0,i=new Array(n),a=0,c=1,u=e.length;a<u;a++,c<<=1){var l=e[a];void 0!==l&&a!==r&&(o|=c,i[s++]=l)}return new ht(t,o,i)}function At(t,e,n,r,o){for(var s=0,i=new Array(gn),a=0;0!==n;a++,n>>>=1)i[a]=1&n?e[s++]:void 0;return i[r]=o,new gt(t,s+1,i)}function Rt(t,e,r){for(var o=[],i=0;i<r.length;i++){var a=r[i],c=n(a);s(a)||(c=c.map(function(t){return V(t)})),o.push(c)}return Mt(t,e,o)}function Dt(t,e,n){return t&&t.mergeDeep&&s(e)?t.mergeDeep(e):G(t,e)?t:e}function It(t){return function(e,n,r){if(e&&e.mergeDeepWith&&s(n))return e.mergeDeepWith(t,n);var o=t(e,n,r);return G(e,o)?e:o}}function Mt(t,e,n){return n=n.filter(function(t){return 0!==t.size}),0===n.length?t:0!==t.size||t.__ownerID||1!==n.length?t.withMutations(function(t){for(var r=e?function(n,r){t.update(r,mn,function(t){return t===mn?n:e(t,n,r)})}:function(e,n){t.set(n,e)},o=0;o<n.length;o++)n[o].forEach(r)}):t.constructor(n[0])}function Kt(t,e,n,r){var o=t===mn,s=e.next();if(s.done){var i=o?n:t,a=r(i);return a===i?t:a}Q(o||t&&t.set,"invalid keyPath");var c=s.value,u=o?mn:t.get(c,mn),l=Kt(u,e,n,r);return l===u?t:l===mn?t.remove(c):(o?_t():t).set(c,l)}function Pt(t){return t-=t>>1&1431655765,t=(858993459&t)+(t>>2&858993459),t=t+(t>>4)&252645135,t+=t>>8,t+=t>>16,127&t}function Nt(t,e,n,r){var o=r?t:p(t);return o[e]=n,o}function Bt(t,e,n,r){var o=t.length+1;if(r&&e+1===o)return t[e]=n,t;for(var s=new Array(o),i=0,a=0;a<o;a++)a===e?(s[a]=n,i=-1):s[a]=t[a+i];return s}function jt(t,e,n){var r=t.length-1;if(n&&e===r)return t.pop(),t;for(var o=new Array(r),s=0,i=0;i<r;i++)i===e&&(s=1),o[i]=t[i+s];return o}function qt(t){var e=Jt();if(null===t||void 0===t)return e;if(Lt(t))return t;var n=r(t),o=n.size;return 0===o?e:(lt(o),o>0&&o<gn?zt(0,o,hn,null,new Ft(n.toArray())):e.withMutations(function(t){t.setSize(o),n.forEach(function(e,n){return t.set(n,e)})}))}function Lt(t){return!(!t||!t[Wn])}function Ft(t,e){this.array=t,this.ownerID=e}function Ut(t,e){function n(t,e,n){return 0===e?r(t,n):o(t,e,n)}function r(t,n){var r=n===a?c&&c.array:t&&t.array,o=n>s?0:s-n,u=i-n;return u>gn&&(u=gn),function(){if(o===u)return $n;var t=e?--u:o++;return r&&r[t]}}function o(t,r,o){var a,c=t&&t.array,u=o>s?0:s-o>>r,l=(i-o>>r)+1;return l>gn&&(l=gn),function(){for(;;){if(a){var t=a();if(t!==$n)return t;a=null}if(u===l)return $n;var s=e?--l:u++;a=n(c&&c[s],r-hn,o+(s<<r))}}}var s=t._origin,i=t._capacity,a=Xt(i),c=t._tail;return n(t._root,t._level,0)}function zt(t,e,n,r,o,s,i){var a=Object.create(Yn);return a.size=e-t,a._origin=t,a._capacity=e,a._level=n,a._root=r,a._tail=o,a.__ownerID=s,a.__hash=i,a.__altered=!1,a}function Jt(){return Gn||(Gn=zt(0,0,hn))}function Vt(t,e,n){if(e=g(t,e),e!==e)return t;if(e>=t.size||e<0)return t.withMutations(function(t){e<0?Gt(t,e).set(0,n):Gt(t,0,e+1).set(e,n)});e+=t._origin;var r=t._tail,o=t._root,s=l(xn);return e>=Xt(t._capacity)?r=Ht(r,t.__ownerID,0,e,n,s):o=Ht(o,t.__ownerID,t._level,e,n,s),s.value?t.__ownerID?(t._root=o,t._tail=r,t.__hash=void 0,t.__altered=!0,t):zt(t._origin,t._capacity,t._level,o,r):t}function Ht(t,e,n,r,o,s){var i=r>>>n&yn,a=t&&i<t.array.length;if(!a&&void 0===o)return t;var c;if(n>0){var u=t&&t.array[i],l=Ht(u,e,n-hn,r,o,s);return l===u?t:(c=Wt(t,e),c.array[i]=l,c)}return a&&t.array[i]===o?t:(d(s),c=Wt(t,e),void 0===o&&i===c.array.length-1?c.array.pop():c.array[i]=o,c)}function Wt(t,e){return e&&t&&e===t.ownerID?t:new Ft(t?t.array.slice():[],e)}function Yt(t,e){if(e>=Xt(t._capacity))return t._tail;if(e<1<<t._level+hn){for(var n=t._root,r=t._level;n&&r>0;)n=n.array[e>>>r&yn],r-=hn;return n}}function Gt(t,e,n){void 0!==e&&(e=0|e),void 0!==n&&(n=0|n);var r=t.__ownerID||new f,o=t._origin,s=t._capacity,i=o+e,a=void 0===n?s:n<0?s+n:o+n;if(i===o&&a===s)return t;if(i>=a)return t.clear();for(var c=t._level,u=t._root,l=0;i+l<0;)u=new Ft(u&&u.array.length?[void 0,u]:[],r),c+=hn,l+=1<<c;l&&(i+=l,o+=l,a+=l,s+=l);for(var d=Xt(s),p=Xt(a);p>=1<<c+hn;)u=new Ft(u&&u.array.length?[u]:[],r),c+=hn;var h=t._tail,g=p<d?Yt(t,a-1):p>d?new Ft([],r):h;if(h&&p>d&&i<s&&h.array.length){u=Wt(u,r);for(var y=u,m=c;m>hn;m-=hn){var k=d>>>m&yn;y=y.array[k]=Wt(y.array[k],r)}y.array[d>>>hn&yn]=h}if(a<s&&(g=g&&g.removeAfter(r,0,a)),i>=p)i-=p,a-=p,c=hn,u=null,g=g&&g.removeBefore(r,0,i);else if(i>o||p<d){for(l=0;u;){var x=i>>>c&yn;if(x!==p>>>c&yn)break;x&&(l+=(1<<c)*x),c-=hn,u=u.array[x]}u&&i>o&&(u=u.removeBefore(r,c,i-l)),u&&p<d&&(u=u.removeAfter(r,c,p-l)),l&&(i-=l,a-=l)}return t.__ownerID?(t.size=a-i,t._origin=i,t._capacity=a,t._level=c,t._root=u,t._tail=g,t.__hash=void 0,t.__altered=!0,t):zt(i,a,c,u,g)}function $t(t,e,n){for(var o=[],i=0,a=0;a<n.length;a++){var c=n[a],u=r(c);u.size>i&&(i=u.size),s(c)||(u=u.map(function(t){return V(t)})),o.push(u)}return i>t.size&&(t=t.setSize(i)),Mt(t,e,o)}function Xt(t){return t<gn?0:t-1>>>hn<<hn}function Qt(t){return null===t||void 0===t?ee():Zt(t)?t:ee().withMutations(function(e){var r=n(t);lt(r.size),r.forEach(function(t,n){return e.set(n,t)})})}function Zt(t){return ft(t)&&u(t)}function te(t,e,n,r){var o=Object.create(Qt.prototype);return o.size=t?t.size:0,o._map=t,o._list=e,o.__ownerID=n,o.__hash=r,o}function ee(){return Xn||(Xn=te(_t(),Jt()))}function ne(t,e,n){var r,o,s=t._map,i=t._list,a=s.get(e),c=void 0!==a;if(n===mn){if(!c)return t;i.size>=gn&&i.size>=2*s.size?(o=i.filter(function(t,e){return void 0!==t&&a!==e}),r=o.toKeyedSeq().map(function(t){return t[0]}).flip().toMap(),t.__ownerID&&(r.__ownerID=o.__ownerID=t.__ownerID)):(r=s.remove(e),o=a===i.size-1?i.pop():i.set(a,void 0))}else if(c){if(n===i.get(a)[1])return t;r=s,o=i.set(a,[e,n])}else r=s.set(e,i.size),o=i.set(i.size,[e,n]);return t.__ownerID?(t.size=r.size,t._map=r,t._list=o,t.__hash=void 0,t):te(r,o)}function re(t,e){this._iter=t,this._useKeys=e,this.size=t.size}function oe(t){this._iter=t,this.size=t.size}function se(t){this._iter=t,this.size=t.size}function ie(t){this._iter=t,this.size=t.size}function ae(t){var e=Ce(t);return e._iter=t,e.size=t.size,e.flip=function(){return t},e.reverse=function(){var e=t.reverse.apply(this);return e.flip=function(){return t.reverse()},e},e.has=function(e){return t.includes(e)},e.includes=function(e){return t.has(e)},e.cacheResult=Ae,e.__iterateUncached=function(e,n){var r=this;return t.__iterate(function(t,n){return e(n,t,r)!==!1},n)},e.__iteratorUncached=function(e,n){if(e===_n){var r=t.__iterator(e,n);return new b(function(){var t=r.next();if(!t.done){var e=t.value[0];t.value[0]=t.value[1],t.value[1]=e}return t})}return t.__iterator(e===bn?vn:bn,n)},e}function ce(t,e,n){var r=Ce(t);return r.size=t.size,r.has=function(e){return t.has(e)},r.get=function(r,o){var s=t.get(r,mn);return s===mn?o:e.call(n,s,r,t)},r.__iterateUncached=function(r,o){var s=this;return t.__iterate(function(t,o,i){return r(e.call(n,t,o,i),o,s)!==!1},o)},r.__iteratorUncached=function(r,o){var s=t.__iterator(_n,o);return new b(function(){var o=s.next();if(o.done)return o;var i=o.value,a=i[0];return _(r,a,e.call(n,i[1],a,t),o)})},r}function ue(t,e){var n=Ce(t);return n._iter=t,n.size=t.size,n.reverse=function(){return t},t.flip&&(n.flip=function(){var e=ae(t);return e.reverse=function(){return t.flip()},e}),n.get=function(n,r){return t.get(e?n:-1-n,r)},n.has=function(n){return t.has(e?n:-1-n)},n.includes=function(e){return t.includes(e)},n.cacheResult=Ae,n.__iterate=function(e,n){var r=this;return t.__iterate(function(t,n){return e(t,n,r)},!n)},n.__iterator=function(e,n){return t.__iterator(e,!n)},n}function le(t,e,n,r){var o=Ce(t);return r&&(o.has=function(r){var o=t.get(r,mn);return o!==mn&&!!e.call(n,o,r,t)},o.get=function(r,o){var s=t.get(r,mn);return s!==mn&&e.call(n,s,r,t)?s:o}),o.__iterateUncached=function(o,s){var i=this,a=0;return t.__iterate(function(t,s,c){if(e.call(n,t,s,c))return a++,o(t,r?s:a-1,i)},s),a},o.__iteratorUncached=function(o,s){var i=t.__iterator(_n,s),a=0;return new b(function(){for(;;){var s=i.next();if(s.done)return s;var c=s.value,u=c[0],l=c[1];if(e.call(n,l,u,t))return _(o,r?u:a++,l,s)}})},o}function de(t,e,n){var r=dt().asMutable();return t.__iterate(function(o,s){r.update(e.call(n,o,s,t),0,function(t){return t+1})}),r.asImmutable()}function fe(t,e,n){var r=i(t),o=(u(t)?Qt():dt()).asMutable();t.__iterate(function(s,i){o.update(e.call(n,s,i,t),function(t){return t=t||[],t.push(r?[i,s]:s),t})});var s=Se(t);return o.map(function(e){return Oe(t,s(e))})}function pe(t,e,n,r){var o=t.size;if(void 0!==e&&(e=0|e),void 0!==n&&(n=n===1/0?o:0|n),m(e,n,o))return t;var s=k(e,o),i=x(n,o);if(s!==s||i!==i)return pe(t.toSeq().cacheResult(),e,n,r);var a,c=i-s;c===c&&(a=c<0?0:c);var u=Ce(t);return u.size=0===a?a:t.size&&a||void 0,!r&&B(t)&&a>=0&&(u.get=function(e,n){return e=g(this,e),e>=0&&e<a?t.get(e+s,n):n}),u.__iterateUncached=function(e,n){var o=this;if(0===a)return 0;if(n)return this.cacheResult().__iterate(e,n);var i=0,c=!0,u=0;return t.__iterate(function(t,n){if(!c||!(c=i++<s))return u++,e(t,r?n:u-1,o)!==!1&&u!==a}),u},u.__iteratorUncached=function(e,n){if(0!==a&&n)return this.cacheResult().__iterator(e,n);var o=0!==a&&t.__iterator(e,n),i=0,c=0;return new b(function(){for(;i++<s;)o.next();if(++c>a)return w();var t=o.next();return r||e===bn?t:e===vn?_(e,c-1,void 0,t):_(e,c-1,t.value[1],t)})},u}function he(t,e,n){var r=Ce(t);return r.__iterateUncached=function(r,o){var s=this;if(o)return this.cacheResult().__iterate(r,o);var i=0;return t.__iterate(function(t,o,a){return e.call(n,t,o,a)&&++i&&r(t,o,s)}),i},r.__iteratorUncached=function(r,o){var s=this;if(o)return this.cacheResult().__iterator(r,o);var i=t.__iterator(_n,o),a=!0;return new b(function(){if(!a)return w();var t=i.next();if(t.done)return t;var o=t.value,c=o[0],u=o[1];return e.call(n,u,c,s)?r===_n?t:_(r,c,u,t):(a=!1,w())})},r}function ge(t,e,n,r){var o=Ce(t);return o.__iterateUncached=function(o,s){var i=this;if(s)return this.cacheResult().__iterate(o,s);var a=!0,c=0;return t.__iterate(function(t,s,u){if(!a||!(a=e.call(n,t,s,u)))return c++,o(t,r?s:c-1,i)}),c},o.__iteratorUncached=function(o,s){var i=this;if(s)return this.cacheResult().__iterator(o,s);var a=t.__iterator(_n,s),c=!0,u=0;return new b(function(){var t,s,l;do{if(t=a.next(),t.done)return r||o===bn?t:o===vn?_(o,u++,void 0,t):_(o,u++,t.value[1],t);var d=t.value;s=d[0],l=d[1],c&&(c=e.call(n,l,s,i))}while(c);return o===_n?t:_(o,s,l,t)})},o}function ye(t,e){var r=i(t),o=[t].concat(e).map(function(t){return s(t)?r&&(t=n(t)):t=r?q(t):L(Array.isArray(t)?t:[t]),t}).filter(function(t){return 0!==t.size});if(0===o.length)return t;if(1===o.length){var c=o[0];if(c===t||r&&i(c)||a(t)&&a(c))return c}var u=new M(o);return r?u=u.toKeyedSeq():a(t)||(u=u.toSetSeq()),u=u.flatten(!0),u.size=o.reduce(function(t,e){if(void 0!==t){var n=e.size;if(void 0!==n)return t+n}},0),u}function me(t,e,n){var r=Ce(t);return r.__iterateUncached=function(r,o){function i(t,u){var l=this;t.__iterate(function(t,o){return(!e||u<e)&&s(t)?i(t,u+1):r(t,n?o:a++,l)===!1&&(c=!0),!c},o)}var a=0,c=!1;return i(t,0),a},r.__iteratorUncached=function(r,o){var i=t.__iterator(r,o),a=[],c=0;return new b(function(){for(;i;){var t=i.next();if(t.done===!1){var u=t.value;if(r===_n&&(u=u[1]),e&&!(a.length<e)||!s(u))return n?t:_(r,c++,u,t);a.push(i),i=u.__iterator(r,o)}else i=a.pop()}return w()})},r}function ke(t,e,n){var r=Se(t);return t.toSeq().map(function(o,s){return r(e.call(n,o,s,t))}).flatten(!0)}function xe(t,e){var n=Ce(t);return n.size=t.size&&2*t.size-1,n.__iterateUncached=function(n,r){var o=this,s=0;return t.__iterate(function(t,r){return(!s||n(e,s++,o)!==!1)&&n(t,s++,o)!==!1},r),s},n.__iteratorUncached=function(n,r){var o,s=t.__iterator(bn,r),i=0;return new b(function(){return(!o||i%2)&&(o=s.next(),o.done)?o:i%2?_(n,i++,e):_(n,i++,o.value,o)})},n}function ve(t,e,n){e||(e=Re);var r=i(t),o=0,s=t.toSeq().map(function(e,r){return[r,e,o++,n?n(e,r,t):e]}).toArray();return s.sort(function(t,n){return e(t[3],n[3])||t[2]-n[2]}).forEach(r?function(t,e){s[e].length=2}:function(t,e){s[e]=t[1]}),r?R(s):a(t)?D(s):I(s)}function be(t,e,n){if(e||(e=Re),n){var r=t.toSeq().map(function(e,r){return[e,n(e,r,t)]}).reduce(function(t,n){return _e(e,t[1],n[1])?n:t});return r&&r[0]}return t.reduce(function(t,n){return _e(e,t,n)?n:t})}function _e(t,e,n){var r=t(n,e);return 0===r&&n!==e&&(void 0===n||null===n||n!==n)||r>0}function we(t,n,r){var o=Ce(t);return o.size=new M(r).map(function(t){return t.size}).min(),o.__iterate=function(t,e){for(var n,r=this.__iterator(bn,e),o=0;!(n=r.next()).done&&t(n.value,o++,this)!==!1;);return o},o.__iteratorUncached=function(t,o){var s=r.map(function(t){return t=e(t),E(o?t.reverse():t)}),i=0,a=!1;return new b(function(){var e;return a||(e=s.map(function(t){return t.next()}),a=e.some(function(t){return t.done})),a?w():_(t,i++,n.apply(null,e.map(function(t){return t.value})))})},o}function Oe(t,e){return B(t)?e:t.constructor(e)}function Te(t){if(t!==Object(t))throw new TypeError("Expected [K, V] tuple: "+t)}function Ee(t){return lt(t.size),h(t)}function Se(t){return i(t)?n:a(t)?r:o}function Ce(t){return Object.create((i(t)?R:a(t)?D:I).prototype)}function Ae(){return this._iter.cacheResult?(this._iter.cacheResult(),this.size=this._iter.size,this):A.prototype.cacheResult.call(this)}function Re(t,e){return t>e?1:t<e?-1:0}function De(t){var n=E(t);if(!n){if(!C(t))throw new TypeError("Expected iterable or array-like: "+t);n=E(e(t))}return n}function Ie(t,e){var n,r=function(s){if(s instanceof r)return s;if(!(this instanceof r))return new r(s);if(!n){n=!0;var i=Object.keys(t);Pe(o,i),o.size=i.length,o._name=e,o._keys=i,o._defaultValues=t}this._map=dt(s)},o=r.prototype=Object.create(Qn);return o.constructor=r,r}function Me(t,e,n){var r=Object.create(Object.getPrototypeOf(t));return r._map=e,r.__ownerID=n,r}function Ke(t){return t._name||t.constructor.name||"Record"}function Pe(t,e){try{e.forEach(Ne.bind(void 0,t))}catch(n){}}function Ne(t,e){Object.defineProperty(t,e,{get:function(){return this.get(e)},set:function(t){Q(this.__ownerID,"Cannot set on an immutable record."),this.set(e,t)}})}function Be(t){return null===t||void 0===t?Fe():je(t)&&!u(t)?t:Fe().withMutations(function(e){var n=o(t);lt(n.size),n.forEach(function(t){return e.add(t)})})}function je(t){return!(!t||!t[Zn])}function qe(t,e){return t.__ownerID?(t.size=e.size,t._map=e,t):e===t._map?t:0===e.size?t.__empty():t.__make(e)}function Le(t,e){var n=Object.create(tr);return n.size=t?t.size:0,n._map=t,n.__ownerID=e,n}function Fe(){return er||(er=Le(_t()))}function Ue(t){return null===t||void 0===t?Ve():ze(t)?t:Ve().withMutations(function(e){var n=o(t);lt(n.size),n.forEach(function(t){return e.add(t)})})}function ze(t){return je(t)&&u(t)}function Je(t,e){var n=Object.create(nr);return n.size=t?t.size:0,n._map=t,n.__ownerID=e,n}function Ve(){return rr||(rr=Je(ee()))}function He(t){return null===t||void 0===t?Ge():We(t)?t:Ge().unshiftAll(t)}function We(t){return!(!t||!t[or])}function Ye(t,e,n,r){var o=Object.create(sr);return o.size=t,o._head=e,o.__ownerID=n,o.__hash=r,o.__altered=!1,o}function Ge(){return ir||(ir=Ye(0))}function $e(t,e){var n=function(n){t.prototype[n]=e[n]};return Object.keys(e).forEach(n),Object.getOwnPropertySymbols&&Object.getOwnPropertySymbols(e).forEach(n),t}function Xe(t,e){return e}function Qe(t,e){return[e,t]}function Ze(t){return function(){return!t.apply(this,arguments)}}function tn(t){return function(){return-t.apply(this,arguments)}}function en(t){return"string"==typeof t?JSON.stringify(t):String(t)}function nn(){return p(arguments)}function rn(t,e){return t<e?1:t>e?-1:0}function on(t){if(t.size===1/0)return 0;var e=u(t),n=i(t),r=e?1:0,o=t.__iterate(n?e?function(t,e){r=31*r+an(st(t),st(e))|0}:function(t,e){r=r+an(st(t),st(e))|0}:e?function(t){r=31*r+st(t)|0}:function(t){r=r+st(t)|0});return sn(o,r)}function sn(t,e){return e=Dn(e,3432918353),e=Dn(e<<15|e>>>-15,461845907),e=Dn(e<<13|e>>>-13,5),e=(e+3864292196|0)^t,e=Dn(e^e>>>16,2246822507),e=Dn(e^e>>>13,3266489909),e=ot(e^e>>>16)}function an(t,e){return t^e+2654435769+(t<<6)+(t>>2)|0}var cn=Array.prototype.slice;t(n,e),t(r,e),t(o,e),e.isIterable=s,e.isKeyed=i,e.isIndexed=a,e.isAssociative=c,e.isOrdered=u,e.Keyed=n,e.Indexed=r,e.Set=o;var un="@@__IMMUTABLE_ITERABLE__@@",ln="@@__IMMUTABLE_KEYED__@@",dn="@@__IMMUTABLE_INDEXED__@@",fn="@@__IMMUTABLE_ORDERED__@@",pn="delete",hn=5,gn=1<<hn,yn=gn-1,mn={},kn={value:!1},xn={value:!1},vn=0,bn=1,_n=2,wn="function"==typeof Symbol&&Symbol.iterator,On="@@iterator",Tn=wn||On;b.prototype.toString=function(){return"[Iterator]"},b.KEYS=vn,b.VALUES=bn,b.ENTRIES=_n,b.prototype.inspect=b.prototype.toSource=function(){return this.toString()},b.prototype[Tn]=function(){return this},t(A,e),A.of=function(){return A(arguments)},A.prototype.toSeq=function(){return this},A.prototype.toString=function(){return this.__toString("Seq {","}")},A.prototype.cacheResult=function(){return!this._cache&&this.__iterateUncached&&(this._cache=this.entrySeq().toArray(),this.size=this._cache.length),this},A.prototype.__iterate=function(t,e){return z(this,t,e,!0)},A.prototype.__iterator=function(t,e){return J(this,t,e,!0)},t(R,A),R.prototype.toKeyedSeq=function(){return this},t(D,A),D.of=function(){return D(arguments)},D.prototype.toIndexedSeq=function(){return this},D.prototype.toString=function(){return this.__toString("Seq [","]")},D.prototype.__iterate=function(t,e){return z(this,t,e,!1)},D.prototype.__iterator=function(t,e){return J(this,t,e,!1)},t(I,A),I.of=function(){return I(arguments)},I.prototype.toSetSeq=function(){return this},A.isSeq=B,A.Keyed=R,A.Set=I,A.Indexed=D;var En="@@__IMMUTABLE_SEQ__@@";A.prototype[En]=!0,t(M,D),M.prototype.get=function(t,e){return this.has(t)?this._array[g(this,t)]:e},M.prototype.__iterate=function(t,e){for(var n=this._array,r=n.length-1,o=0;o<=r;o++)if(t(n[e?r-o:o],o,this)===!1)return o+1;return o},M.prototype.__iterator=function(t,e){var n=this._array,r=n.length-1,o=0;return new b(function(){return o>r?w():_(t,o,n[e?r-o++:o++])})},t(K,R),K.prototype.get=function(t,e){return void 0===e||this.has(t)?this._object[t]:e},K.prototype.has=function(t){return this._object.hasOwnProperty(t)},K.prototype.__iterate=function(t,e){for(var n=this._object,r=this._keys,o=r.length-1,s=0;s<=o;s++){var i=r[e?o-s:s];if(t(n[i],i,this)===!1)return s+1}return s},K.prototype.__iterator=function(t,e){var n=this._object,r=this._keys,o=r.length-1,s=0;return new b(function(){var i=r[e?o-s:s];return s++>o?w():_(t,i,n[i])})},K.prototype[fn]=!0,t(P,D),P.prototype.__iterateUncached=function(t,e){if(e)return this.cacheResult().__iterate(t,e);var n=this._iterable,r=E(n),o=0;if(T(r))for(var s;!(s=r.next()).done&&t(s.value,o++,this)!==!1;);return o},P.prototype.__iteratorUncached=function(t,e){if(e)return this.cacheResult().__iterator(t,e);var n=this._iterable,r=E(n);if(!T(r))return new b(w);var o=0;return new b(function(){var e=r.next();return e.done?e:_(t,o++,e.value)})},t(N,D),N.prototype.__iterateUncached=function(t,e){if(e)return this.cacheResult().__iterate(t,e);for(var n=this._iterator,r=this._iteratorCache,o=0;o<r.length;)if(t(r[o],o++,this)===!1)return o;for(var s;!(s=n.next()).done;){var i=s.value;if(r[o]=i,t(i,o++,this)===!1)break}return o},N.prototype.__iteratorUncached=function(t,e){if(e)return this.cacheResult().__iterator(t,e);var n=this._iterator,r=this._iteratorCache,o=0;return new b(function(){if(o>=r.length){var e=n.next();if(e.done)return e;r[o]=e.value}return _(t,o,r[o++])})};var Sn;t(X,D),X.prototype.toString=function(){return 0===this.size?"Repeat []":"Repeat [ "+this._value+" "+this.size+" times ]"},X.prototype.get=function(t,e){return this.has(t)?this._value:e},X.prototype.includes=function(t){return G(this._value,t)},X.prototype.slice=function(t,e){var n=this.size;return m(t,e,n)?this:new X(this._value,x(e,n)-k(t,n))},X.prototype.reverse=function(){return this},X.prototype.indexOf=function(t){return G(this._value,t)?0:-1},X.prototype.lastIndexOf=function(t){return G(this._value,t)?this.size:-1},X.prototype.__iterate=function(t,e){for(var n=0;n<this.size;n++)if(t(this._value,n,this)===!1)return n+1;
return n},X.prototype.__iterator=function(t,e){var n=this,r=0;return new b(function(){return r<n.size?_(t,r++,n._value):w()})},X.prototype.equals=function(t){return t instanceof X?G(this._value,t._value):$(t)};var Cn;t(Z,D),Z.prototype.toString=function(){return 0===this.size?"Range []":"Range [ "+this._start+"..."+this._end+(1!==this._step?" by "+this._step:"")+" ]"},Z.prototype.get=function(t,e){return this.has(t)?this._start+g(this,t)*this._step:e},Z.prototype.includes=function(t){var e=(t-this._start)/this._step;return e>=0&&e<this.size&&e===Math.floor(e)},Z.prototype.slice=function(t,e){return m(t,e,this.size)?this:(t=k(t,this.size),e=x(e,this.size),e<=t?new Z(0,0):new Z(this.get(t,this._end),this.get(e,this._end),this._step))},Z.prototype.indexOf=function(t){var e=t-this._start;if(e%this._step===0){var n=e/this._step;if(n>=0&&n<this.size)return n}return-1},Z.prototype.lastIndexOf=function(t){return this.indexOf(t)},Z.prototype.__iterate=function(t,e){for(var n=this.size-1,r=this._step,o=e?this._start+n*r:this._start,s=0;s<=n;s++){if(t(o,s,this)===!1)return s+1;o+=e?-r:r}return s},Z.prototype.__iterator=function(t,e){var n=this.size-1,r=this._step,o=e?this._start+n*r:this._start,s=0;return new b(function(){var i=o;return o+=e?-r:r,s>n?w():_(t,s++,i)})},Z.prototype.equals=function(t){return t instanceof Z?this._start===t._start&&this._end===t._end&&this._step===t._step:$(this,t)};var An;t(tt,e),t(et,tt),t(nt,tt),t(rt,tt),tt.Keyed=et,tt.Indexed=nt,tt.Set=rt;var Rn,Dn="function"==typeof Math.imul&&Math.imul(4294967295,2)===-2?Math.imul:function(t,e){t=0|t,e=0|e;var n=65535&t,r=65535&e;return n*r+((t>>>16)*r+n*(e>>>16)<<16>>>0)|0},In=Object.isExtensible,Mn=function(){try{return Object.defineProperty({},"@",{}),!0}catch(t){return!1}}(),Kn="function"==typeof WeakMap;Kn&&(Rn=new WeakMap);var Pn=0,Nn="__immutablehash__";"function"==typeof Symbol&&(Nn=Symbol(Nn));var Bn=16,jn=255,qn=0,Ln={};t(dt,et),dt.of=function(){var t=cn.call(arguments,0);return _t().withMutations(function(e){for(var n=0;n<t.length;n+=2){if(n+1>=t.length)throw new Error("Missing value for key: "+t[n]);e.set(t[n],t[n+1])}})},dt.prototype.toString=function(){return this.__toString("Map {","}")},dt.prototype.get=function(t,e){return this._root?this._root.get(0,void 0,t,e):e},dt.prototype.set=function(t,e){return wt(this,t,e)},dt.prototype.setIn=function(t,e){return this.updateIn(t,mn,function(){return e})},dt.prototype.remove=function(t){return wt(this,t,mn)},dt.prototype.deleteIn=function(t){return this.updateIn(t,function(){return mn})},dt.prototype.update=function(t,e,n){return 1===arguments.length?t(this):this.updateIn([t],e,n)},dt.prototype.updateIn=function(t,e,n){n||(n=e,e=void 0);var r=Kt(this,De(t),e,n);return r===mn?void 0:r},dt.prototype.clear=function(){return 0===this.size?this:this.__ownerID?(this.size=0,this._root=null,this.__hash=void 0,this.__altered=!0,this):_t()},dt.prototype.merge=function(){return Rt(this,void 0,arguments)},dt.prototype.mergeWith=function(t){var e=cn.call(arguments,1);return Rt(this,t,e)},dt.prototype.mergeIn=function(t){var e=cn.call(arguments,1);return this.updateIn(t,_t(),function(t){return"function"==typeof t.merge?t.merge.apply(t,e):e[e.length-1]})},dt.prototype.mergeDeep=function(){return Rt(this,Dt,arguments)},dt.prototype.mergeDeepWith=function(t){var e=cn.call(arguments,1);return Rt(this,It(t),e)},dt.prototype.mergeDeepIn=function(t){var e=cn.call(arguments,1);return this.updateIn(t,_t(),function(t){return"function"==typeof t.mergeDeep?t.mergeDeep.apply(t,e):e[e.length-1]})},dt.prototype.sort=function(t){return Qt(ve(this,t))},dt.prototype.sortBy=function(t,e){return Qt(ve(this,e,t))},dt.prototype.withMutations=function(t){var e=this.asMutable();return t(e),e.wasAltered()?e.__ensureOwner(this.__ownerID):this},dt.prototype.asMutable=function(){return this.__ownerID?this:this.__ensureOwner(new f)},dt.prototype.asImmutable=function(){return this.__ensureOwner()},dt.prototype.wasAltered=function(){return this.__altered},dt.prototype.__iterator=function(t,e){return new kt(this,t,e)},dt.prototype.__iterate=function(t,e){var n=this,r=0;return this._root&&this._root.iterate(function(e){return r++,t(e[1],e[0],n)},e),r},dt.prototype.__ensureOwner=function(t){return t===this.__ownerID?this:t?bt(this.size,this._root,t,this.__hash):(this.__ownerID=t,this.__altered=!1,this)},dt.isMap=ft;var Fn="@@__IMMUTABLE_MAP__@@",Un=dt.prototype;Un[Fn]=!0,Un[pn]=Un.remove,Un.removeIn=Un.deleteIn,pt.prototype.get=function(t,e,n,r){for(var o=this.entries,s=0,i=o.length;s<i;s++)if(G(n,o[s][0]))return o[s][1];return r},pt.prototype.update=function(t,e,n,r,o,s,i){for(var a=o===mn,c=this.entries,u=0,l=c.length;u<l&&!G(r,c[u][0]);u++);var f=u<l;if(f?c[u][1]===o:a)return this;if(d(i),(a||!f)&&d(s),!a||1!==c.length){if(!f&&!a&&c.length>=Jn)return St(t,c,r,o);var h=t&&t===this.ownerID,g=h?c:p(c);return f?a?u===l-1?g.pop():g[u]=g.pop():g[u]=[r,o]:g.push([r,o]),h?(this.entries=g,this):new pt(t,g)}},ht.prototype.get=function(t,e,n,r){void 0===e&&(e=st(n));var o=1<<((0===t?e:e>>>t)&yn),s=this.bitmap;return 0===(s&o)?r:this.nodes[Pt(s&o-1)].get(t+hn,e,n,r)},ht.prototype.update=function(t,e,n,r,o,s,i){void 0===n&&(n=st(r));var a=(0===e?n:n>>>e)&yn,c=1<<a,u=this.bitmap,l=0!==(u&c);if(!l&&o===mn)return this;var d=Pt(u&c-1),f=this.nodes,p=l?f[d]:void 0,h=Ot(p,t,e+hn,n,r,o,s,i);if(h===p)return this;if(!l&&h&&f.length>=Vn)return At(t,f,u,a,h);if(l&&!h&&2===f.length&&Tt(f[1^d]))return f[1^d];if(l&&h&&1===f.length&&Tt(h))return h;var g=t&&t===this.ownerID,y=l?h?u:u^c:u|c,m=l?h?Nt(f,d,h,g):jt(f,d,g):Bt(f,d,h,g);return g?(this.bitmap=y,this.nodes=m,this):new ht(t,y,m)},gt.prototype.get=function(t,e,n,r){void 0===e&&(e=st(n));var o=(0===t?e:e>>>t)&yn,s=this.nodes[o];return s?s.get(t+hn,e,n,r):r},gt.prototype.update=function(t,e,n,r,o,s,i){void 0===n&&(n=st(r));var a=(0===e?n:n>>>e)&yn,c=o===mn,u=this.nodes,l=u[a];if(c&&!l)return this;var d=Ot(l,t,e+hn,n,r,o,s,i);if(d===l)return this;var f=this.count;if(l){if(!d&&(f--,f<Hn))return Ct(t,u,f,a)}else f++;var p=t&&t===this.ownerID,h=Nt(u,a,d,p);return p?(this.count=f,this.nodes=h,this):new gt(t,f,h)},yt.prototype.get=function(t,e,n,r){for(var o=this.entries,s=0,i=o.length;s<i;s++)if(G(n,o[s][0]))return o[s][1];return r},yt.prototype.update=function(t,e,n,r,o,s,i){void 0===n&&(n=st(r));var a=o===mn;if(n!==this.keyHash)return a?this:(d(i),d(s),Et(this,t,e,n,[r,o]));for(var c=this.entries,u=0,l=c.length;u<l&&!G(r,c[u][0]);u++);var f=u<l;if(f?c[u][1]===o:a)return this;if(d(i),(a||!f)&&d(s),a&&2===l)return new mt(t,this.keyHash,c[1^u]);var h=t&&t===this.ownerID,g=h?c:p(c);return f?a?u===l-1?g.pop():g[u]=g.pop():g[u]=[r,o]:g.push([r,o]),h?(this.entries=g,this):new yt(t,this.keyHash,g)},mt.prototype.get=function(t,e,n,r){return G(n,this.entry[0])?this.entry[1]:r},mt.prototype.update=function(t,e,n,r,o,s,i){var a=o===mn,c=G(r,this.entry[0]);return(c?o===this.entry[1]:a)?this:(d(i),a?void d(s):c?t&&t===this.ownerID?(this.entry[1]=o,this):new mt(t,this.keyHash,[r,o]):(d(s),Et(this,t,e,st(r),[r,o])))},pt.prototype.iterate=yt.prototype.iterate=function(t,e){for(var n=this.entries,r=0,o=n.length-1;r<=o;r++)if(t(n[e?o-r:r])===!1)return!1},ht.prototype.iterate=gt.prototype.iterate=function(t,e){for(var n=this.nodes,r=0,o=n.length-1;r<=o;r++){var s=n[e?o-r:r];if(s&&s.iterate(t,e)===!1)return!1}},mt.prototype.iterate=function(t,e){return t(this.entry)},t(kt,b),kt.prototype.next=function(){for(var t=this._type,e=this._stack;e;){var n,r=e.node,o=e.index++;if(r.entry){if(0===o)return xt(t,r.entry)}else if(r.entries){if(n=r.entries.length-1,o<=n)return xt(t,r.entries[this._reverse?n-o:o])}else if(n=r.nodes.length-1,o<=n){var s=r.nodes[this._reverse?n-o:o];if(s){if(s.entry)return xt(t,s.entry);e=this._stack=vt(s,e)}continue}e=this._stack=this._stack.__prev}return w()};var zn,Jn=gn/4,Vn=gn/2,Hn=gn/4;t(qt,nt),qt.of=function(){return this(arguments)},qt.prototype.toString=function(){return this.__toString("List [","]")},qt.prototype.get=function(t,e){if(t=g(this,t),t>=0&&t<this.size){t+=this._origin;var n=Yt(this,t);return n&&n.array[t&yn]}return e},qt.prototype.set=function(t,e){return Vt(this,t,e)},qt.prototype.remove=function(t){return this.has(t)?0===t?this.shift():t===this.size-1?this.pop():this.splice(t,1):this},qt.prototype.insert=function(t,e){return this.splice(t,0,e)},qt.prototype.clear=function(){return 0===this.size?this:this.__ownerID?(this.size=this._origin=this._capacity=0,this._level=hn,this._root=this._tail=null,this.__hash=void 0,this.__altered=!0,this):Jt()},qt.prototype.push=function(){var t=arguments,e=this.size;return this.withMutations(function(n){Gt(n,0,e+t.length);for(var r=0;r<t.length;r++)n.set(e+r,t[r])})},qt.prototype.pop=function(){return Gt(this,0,-1)},qt.prototype.unshift=function(){var t=arguments;return this.withMutations(function(e){Gt(e,-t.length);for(var n=0;n<t.length;n++)e.set(n,t[n])})},qt.prototype.shift=function(){return Gt(this,1)},qt.prototype.merge=function(){return $t(this,void 0,arguments)},qt.prototype.mergeWith=function(t){var e=cn.call(arguments,1);return $t(this,t,e)},qt.prototype.mergeDeep=function(){return $t(this,Dt,arguments)},qt.prototype.mergeDeepWith=function(t){var e=cn.call(arguments,1);return $t(this,It(t),e)},qt.prototype.setSize=function(t){return Gt(this,0,t)},qt.prototype.slice=function(t,e){var n=this.size;return m(t,e,n)?this:Gt(this,k(t,n),x(e,n))},qt.prototype.__iterator=function(t,e){var n=0,r=Ut(this,e);return new b(function(){var e=r();return e===$n?w():_(t,n++,e)})},qt.prototype.__iterate=function(t,e){for(var n,r=0,o=Ut(this,e);(n=o())!==$n&&t(n,r++,this)!==!1;);return r},qt.prototype.__ensureOwner=function(t){return t===this.__ownerID?this:t?zt(this._origin,this._capacity,this._level,this._root,this._tail,t,this.__hash):(this.__ownerID=t,this)},qt.isList=Lt;var Wn="@@__IMMUTABLE_LIST__@@",Yn=qt.prototype;Yn[Wn]=!0,Yn[pn]=Yn.remove,Yn.setIn=Un.setIn,Yn.deleteIn=Yn.removeIn=Un.removeIn,Yn.update=Un.update,Yn.updateIn=Un.updateIn,Yn.mergeIn=Un.mergeIn,Yn.mergeDeepIn=Un.mergeDeepIn,Yn.withMutations=Un.withMutations,Yn.asMutable=Un.asMutable,Yn.asImmutable=Un.asImmutable,Yn.wasAltered=Un.wasAltered,Ft.prototype.removeBefore=function(t,e,n){if(n===e?1<<e:0===this.array.length)return this;var r=n>>>e&yn;if(r>=this.array.length)return new Ft([],t);var o,s=0===r;if(e>0){var i=this.array[r];if(o=i&&i.removeBefore(t,e-hn,n),o===i&&s)return this}if(s&&!o)return this;var a=Wt(this,t);if(!s)for(var c=0;c<r;c++)a.array[c]=void 0;return o&&(a.array[r]=o),a},Ft.prototype.removeAfter=function(t,e,n){if(n===(e?1<<e:0)||0===this.array.length)return this;var r=n-1>>>e&yn;if(r>=this.array.length)return this;var o;if(e>0){var s=this.array[r];if(o=s&&s.removeAfter(t,e-hn,n),o===s&&r===this.array.length-1)return this}var i=Wt(this,t);return i.array.splice(r+1),o&&(i.array[r]=o),i};var Gn,$n={};t(Qt,dt),Qt.of=function(){return this(arguments)},Qt.prototype.toString=function(){return this.__toString("OrderedMap {","}")},Qt.prototype.get=function(t,e){var n=this._map.get(t);return void 0!==n?this._list.get(n)[1]:e},Qt.prototype.clear=function(){return 0===this.size?this:this.__ownerID?(this.size=0,this._map.clear(),this._list.clear(),this):ee()},Qt.prototype.set=function(t,e){return ne(this,t,e)},Qt.prototype.remove=function(t){return ne(this,t,mn)},Qt.prototype.wasAltered=function(){return this._map.wasAltered()||this._list.wasAltered()},Qt.prototype.__iterate=function(t,e){var n=this;return this._list.__iterate(function(e){return e&&t(e[1],e[0],n)},e)},Qt.prototype.__iterator=function(t,e){return this._list.fromEntrySeq().__iterator(t,e)},Qt.prototype.__ensureOwner=function(t){if(t===this.__ownerID)return this;var e=this._map.__ensureOwner(t),n=this._list.__ensureOwner(t);return t?te(e,n,t,this.__hash):(this.__ownerID=t,this._map=e,this._list=n,this)},Qt.isOrderedMap=Zt,Qt.prototype[fn]=!0,Qt.prototype[pn]=Qt.prototype.remove;var Xn;t(re,R),re.prototype.get=function(t,e){return this._iter.get(t,e)},re.prototype.has=function(t){return this._iter.has(t)},re.prototype.valueSeq=function(){return this._iter.valueSeq()},re.prototype.reverse=function(){var t=this,e=ue(this,!0);return this._useKeys||(e.valueSeq=function(){return t._iter.toSeq().reverse()}),e},re.prototype.map=function(t,e){var n=this,r=ce(this,t,e);return this._useKeys||(r.valueSeq=function(){return n._iter.toSeq().map(t,e)}),r},re.prototype.__iterate=function(t,e){var n,r=this;return this._iter.__iterate(this._useKeys?function(e,n){return t(e,n,r)}:(n=e?Ee(this):0,function(o){return t(o,e?--n:n++,r)}),e)},re.prototype.__iterator=function(t,e){if(this._useKeys)return this._iter.__iterator(t,e);var n=this._iter.__iterator(bn,e),r=e?Ee(this):0;return new b(function(){var o=n.next();return o.done?o:_(t,e?--r:r++,o.value,o)})},re.prototype[fn]=!0,t(oe,D),oe.prototype.includes=function(t){return this._iter.includes(t)},oe.prototype.__iterate=function(t,e){var n=this,r=0;return this._iter.__iterate(function(e){return t(e,r++,n)},e)},oe.prototype.__iterator=function(t,e){var n=this._iter.__iterator(bn,e),r=0;return new b(function(){var e=n.next();return e.done?e:_(t,r++,e.value,e)})},t(se,I),se.prototype.has=function(t){return this._iter.includes(t)},se.prototype.__iterate=function(t,e){var n=this;return this._iter.__iterate(function(e){return t(e,e,n)},e)},se.prototype.__iterator=function(t,e){var n=this._iter.__iterator(bn,e);return new b(function(){var e=n.next();return e.done?e:_(t,e.value,e.value,e)})},t(ie,R),ie.prototype.entrySeq=function(){return this._iter.toSeq()},ie.prototype.__iterate=function(t,e){var n=this;return this._iter.__iterate(function(e){if(e){Te(e);var r=s(e);return t(r?e.get(1):e[1],r?e.get(0):e[0],n)}},e)},ie.prototype.__iterator=function(t,e){var n=this._iter.__iterator(bn,e);return new b(function(){for(;;){var e=n.next();if(e.done)return e;var r=e.value;if(r){Te(r);var o=s(r);return _(t,o?r.get(0):r[0],o?r.get(1):r[1],e)}}})},oe.prototype.cacheResult=re.prototype.cacheResult=se.prototype.cacheResult=ie.prototype.cacheResult=Ae,t(Ie,et),Ie.prototype.toString=function(){return this.__toString(Ke(this)+" {","}")},Ie.prototype.has=function(t){return this._defaultValues.hasOwnProperty(t)},Ie.prototype.get=function(t,e){if(!this.has(t))return e;var n=this._defaultValues[t];return this._map?this._map.get(t,n):n},Ie.prototype.clear=function(){if(this.__ownerID)return this._map&&this._map.clear(),this;var t=this.constructor;return t._empty||(t._empty=Me(this,_t()))},Ie.prototype.set=function(t,e){if(!this.has(t))throw new Error('Cannot set unknown key "'+t+'" on '+Ke(this));if(this._map&&!this._map.has(t)){var n=this._defaultValues[t];if(e===n)return this}var r=this._map&&this._map.set(t,e);return this.__ownerID||r===this._map?this:Me(this,r)},Ie.prototype.remove=function(t){if(!this.has(t))return this;var e=this._map&&this._map.remove(t);return this.__ownerID||e===this._map?this:Me(this,e)},Ie.prototype.wasAltered=function(){return this._map.wasAltered()},Ie.prototype.__iterator=function(t,e){var r=this;return n(this._defaultValues).map(function(t,e){return r.get(e)}).__iterator(t,e)},Ie.prototype.__iterate=function(t,e){var r=this;return n(this._defaultValues).map(function(t,e){return r.get(e)}).__iterate(t,e)},Ie.prototype.__ensureOwner=function(t){if(t===this.__ownerID)return this;var e=this._map&&this._map.__ensureOwner(t);return t?Me(this,e,t):(this.__ownerID=t,this._map=e,this)};var Qn=Ie.prototype;Qn[pn]=Qn.remove,Qn.deleteIn=Qn.removeIn=Un.removeIn,Qn.merge=Un.merge,Qn.mergeWith=Un.mergeWith,Qn.mergeIn=Un.mergeIn,Qn.mergeDeep=Un.mergeDeep,Qn.mergeDeepWith=Un.mergeDeepWith,Qn.mergeDeepIn=Un.mergeDeepIn,Qn.setIn=Un.setIn,Qn.update=Un.update,Qn.updateIn=Un.updateIn,Qn.withMutations=Un.withMutations,Qn.asMutable=Un.asMutable,Qn.asImmutable=Un.asImmutable,t(Be,rt),Be.of=function(){return this(arguments)},Be.fromKeys=function(t){return this(n(t).keySeq())},Be.prototype.toString=function(){return this.__toString("Set {","}")},Be.prototype.has=function(t){return this._map.has(t)},Be.prototype.add=function(t){return qe(this,this._map.set(t,!0))},Be.prototype.remove=function(t){return qe(this,this._map.remove(t))},Be.prototype.clear=function(){return qe(this,this._map.clear())},Be.prototype.union=function(){var t=cn.call(arguments,0);return t=t.filter(function(t){return 0!==t.size}),0===t.length?this:0!==this.size||this.__ownerID||1!==t.length?this.withMutations(function(e){for(var n=0;n<t.length;n++)o(t[n]).forEach(function(t){return e.add(t)})}):this.constructor(t[0])},Be.prototype.intersect=function(){var t=cn.call(arguments,0);if(0===t.length)return this;t=t.map(function(t){return o(t)});var e=this;return this.withMutations(function(n){e.forEach(function(e){t.every(function(t){return t.includes(e)})||n.remove(e)})})},Be.prototype.subtract=function(){var t=cn.call(arguments,0);if(0===t.length)return this;t=t.map(function(t){return o(t)});var e=this;return this.withMutations(function(n){e.forEach(function(e){t.some(function(t){return t.includes(e)})&&n.remove(e)})})},Be.prototype.merge=function(){return this.union.apply(this,arguments)},Be.prototype.mergeWith=function(t){var e=cn.call(arguments,1);return this.union.apply(this,e)},Be.prototype.sort=function(t){return Ue(ve(this,t))},Be.prototype.sortBy=function(t,e){return Ue(ve(this,e,t))},Be.prototype.wasAltered=function(){return this._map.wasAltered()},Be.prototype.__iterate=function(t,e){var n=this;return this._map.__iterate(function(e,r){return t(r,r,n)},e)},Be.prototype.__iterator=function(t,e){return this._map.map(function(t,e){return e}).__iterator(t,e)},Be.prototype.__ensureOwner=function(t){if(t===this.__ownerID)return this;var e=this._map.__ensureOwner(t);return t?this.__make(e,t):(this.__ownerID=t,this._map=e,this)},Be.isSet=je;var Zn="@@__IMMUTABLE_SET__@@",tr=Be.prototype;tr[Zn]=!0,tr[pn]=tr.remove,tr.mergeDeep=tr.merge,tr.mergeDeepWith=tr.mergeWith,tr.withMutations=Un.withMutations,tr.asMutable=Un.asMutable,tr.asImmutable=Un.asImmutable,tr.__empty=Fe,tr.__make=Le;var er;t(Ue,Be),Ue.of=function(){return this(arguments)},Ue.fromKeys=function(t){return this(n(t).keySeq())},Ue.prototype.toString=function(){return this.__toString("OrderedSet {","}")},Ue.isOrderedSet=ze;var nr=Ue.prototype;nr[fn]=!0,nr.__empty=Ve,nr.__make=Je;var rr;t(He,nt),He.of=function(){return this(arguments)},He.prototype.toString=function(){return this.__toString("Stack [","]")},He.prototype.get=function(t,e){var n=this._head;for(t=g(this,t);n&&t--;)n=n.next;return n?n.value:e},He.prototype.peek=function(){return this._head&&this._head.value},He.prototype.push=function(){if(0===arguments.length)return this;for(var t=this.size+arguments.length,e=this._head,n=arguments.length-1;n>=0;n--)e={value:arguments[n],next:e};return this.__ownerID?(this.size=t,this._head=e,this.__hash=void 0,this.__altered=!0,this):Ye(t,e)},He.prototype.pushAll=function(t){if(t=r(t),0===t.size)return this;lt(t.size);var e=this.size,n=this._head;return t.reverse().forEach(function(t){e++,n={value:t,next:n}}),this.__ownerID?(this.size=e,this._head=n,this.__hash=void 0,this.__altered=!0,this):Ye(e,n)},He.prototype.pop=function(){return this.slice(1)},He.prototype.unshift=function(){return this.push.apply(this,arguments)},He.prototype.unshiftAll=function(t){return this.pushAll(t)},He.prototype.shift=function(){return this.pop.apply(this,arguments)},He.prototype.clear=function(){return 0===this.size?this:this.__ownerID?(this.size=0,this._head=void 0,this.__hash=void 0,this.__altered=!0,this):Ge()},He.prototype.slice=function(t,e){if(m(t,e,this.size))return this;var n=k(t,this.size),r=x(e,this.size);if(r!==this.size)return nt.prototype.slice.call(this,t,e);for(var o=this.size-n,s=this._head;n--;)s=s.next;return this.__ownerID?(this.size=o,this._head=s,this.__hash=void 0,this.__altered=!0,this):Ye(o,s)},He.prototype.__ensureOwner=function(t){return t===this.__ownerID?this:t?Ye(this.size,this._head,t,this.__hash):(this.__ownerID=t,this.__altered=!1,this)},He.prototype.__iterate=function(t,e){if(e)return this.reverse().__iterate(t);for(var n=0,r=this._head;r&&t(r.value,n++,this)!==!1;)r=r.next;return n},He.prototype.__iterator=function(t,e){if(e)return this.reverse().__iterator(t);var n=0,r=this._head;return new b(function(){if(r){var e=r.value;return r=r.next,_(t,n++,e)}return w()})},He.isStack=We;var or="@@__IMMUTABLE_STACK__@@",sr=He.prototype;sr[or]=!0,sr.withMutations=Un.withMutations,sr.asMutable=Un.asMutable,sr.asImmutable=Un.asImmutable,sr.wasAltered=Un.wasAltered;var ir;e.Iterator=b,$e(e,{toArray:function(){lt(this.size);var t=new Array(this.size||0);return this.valueSeq().__iterate(function(e,n){t[n]=e}),t},toIndexedSeq:function(){return new oe(this)},toJS:function(){return this.toSeq().map(function(t){return t&&"function"==typeof t.toJS?t.toJS():t}).__toJS()},toJSON:function(){return this.toSeq().map(function(t){return t&&"function"==typeof t.toJSON?t.toJSON():t}).__toJS()},toKeyedSeq:function(){return new re(this,(!0))},toMap:function(){return dt(this.toKeyedSeq())},toObject:function(){lt(this.size);var t={};return this.__iterate(function(e,n){t[n]=e}),t},toOrderedMap:function(){return Qt(this.toKeyedSeq())},toOrderedSet:function(){return Ue(i(this)?this.valueSeq():this)},toSet:function(){return Be(i(this)?this.valueSeq():this)},toSetSeq:function(){return new se(this)},toSeq:function(){return a(this)?this.toIndexedSeq():i(this)?this.toKeyedSeq():this.toSetSeq()},toStack:function(){return He(i(this)?this.valueSeq():this)},toList:function(){return qt(i(this)?this.valueSeq():this)},toString:function(){return"[Iterable]"},__toString:function(t,e){return 0===this.size?t+e:t+" "+this.toSeq().map(this.__toStringMapper).join(", ")+" "+e},concat:function(){var t=cn.call(arguments,0);return Oe(this,ye(this,t))},includes:function(t){return this.some(function(e){return G(e,t)})},entries:function(){return this.__iterator(_n)},every:function(t,e){lt(this.size);var n=!0;return this.__iterate(function(r,o,s){if(!t.call(e,r,o,s))return n=!1,!1}),n},filter:function(t,e){return Oe(this,le(this,t,e,!0))},find:function(t,e,n){var r=this.findEntry(t,e);return r?r[1]:n},forEach:function(t,e){return lt(this.size),this.__iterate(e?t.bind(e):t)},join:function(t){lt(this.size),t=void 0!==t?""+t:",";var e="",n=!0;return this.__iterate(function(r){n?n=!1:e+=t,e+=null!==r&&void 0!==r?r.toString():""}),e},keys:function(){return this.__iterator(vn)},map:function(t,e){return Oe(this,ce(this,t,e))},reduce:function(t,e,n){lt(this.size);var r,o;return arguments.length<2?o=!0:r=e,this.__iterate(function(e,s,i){o?(o=!1,r=e):r=t.call(n,r,e,s,i)}),r},reduceRight:function(t,e,n){var r=this.toKeyedSeq().reverse();return r.reduce.apply(r,arguments)},reverse:function(){return Oe(this,ue(this,!0))},slice:function(t,e){return Oe(this,pe(this,t,e,!0))},some:function(t,e){return!this.every(Ze(t),e)},sort:function(t){return Oe(this,ve(this,t))},values:function(){return this.__iterator(bn)},butLast:function(){return this.slice(0,-1)},isEmpty:function(){return void 0!==this.size?0===this.size:!this.some(function(){return!0})},count:function(t,e){return h(t?this.toSeq().filter(t,e):this)},countBy:function(t,e){return de(this,t,e)},equals:function(t){return $(this,t)},entrySeq:function(){var t=this;if(t._cache)return new M(t._cache);var e=t.toSeq().map(Qe).toIndexedSeq();return e.fromEntrySeq=function(){return t.toSeq()},e},filterNot:function(t,e){return this.filter(Ze(t),e)},findEntry:function(t,e,n){var r=n;return this.__iterate(function(n,o,s){if(t.call(e,n,o,s))return r=[o,n],!1}),r},findKey:function(t,e){var n=this.findEntry(t,e);return n&&n[0]},findLast:function(t,e,n){return this.toKeyedSeq().reverse().find(t,e,n)},findLastEntry:function(t,e,n){return this.toKeyedSeq().reverse().findEntry(t,e,n)},findLastKey:function(t,e){return this.toKeyedSeq().reverse().findKey(t,e)},first:function(){return this.find(y)},flatMap:function(t,e){return Oe(this,ke(this,t,e))},flatten:function(t){return Oe(this,me(this,t,!0))},fromEntrySeq:function(){return new ie(this)},get:function(t,e){return this.find(function(e,n){return G(n,t)},void 0,e)},getIn:function(t,e){for(var n,r=this,o=De(t);!(n=o.next()).done;){var s=n.value;if(r=r&&r.get?r.get(s,mn):mn,r===mn)return e}return r},groupBy:function(t,e){return fe(this,t,e)},has:function(t){return this.get(t,mn)!==mn},hasIn:function(t){return this.getIn(t,mn)!==mn},isSubset:function(t){return t="function"==typeof t.includes?t:e(t),this.every(function(e){return t.includes(e)})},isSuperset:function(t){return t="function"==typeof t.isSubset?t:e(t),t.isSubset(this)},keyOf:function(t){return this.findKey(function(e){return G(e,t)})},keySeq:function(){return this.toSeq().map(Xe).toIndexedSeq()},last:function(){return this.toSeq().reverse().first()},lastKeyOf:function(t){return this.toKeyedSeq().reverse().keyOf(t)},max:function(t){return be(this,t)},maxBy:function(t,e){return be(this,e,t)},min:function(t){return be(this,t?tn(t):rn)},minBy:function(t,e){return be(this,e?tn(e):rn,t)},rest:function(){return this.slice(1)},skip:function(t){return this.slice(Math.max(0,t))},skipLast:function(t){return Oe(this,this.toSeq().reverse().skip(t).reverse())},skipWhile:function(t,e){return Oe(this,ge(this,t,e,!0))},skipUntil:function(t,e){return this.skipWhile(Ze(t),e)},sortBy:function(t,e){return Oe(this,ve(this,e,t))},take:function(t){return this.slice(0,Math.max(0,t))},takeLast:function(t){return Oe(this,this.toSeq().reverse().take(t).reverse())},takeWhile:function(t,e){return Oe(this,he(this,t,e))},takeUntil:function(t,e){return this.takeWhile(Ze(t),e)},valueSeq:function(){return this.toIndexedSeq()},hashCode:function(){return this.__hash||(this.__hash=on(this))}});var ar=e.prototype;ar[un]=!0,ar[Tn]=ar.values,ar.__toJS=ar.toArray,ar.__toStringMapper=en,ar.inspect=ar.toSource=function(){return this.toString()},ar.chain=ar.flatMap,ar.contains=ar.includes,$e(n,{flip:function(){return Oe(this,ae(this))},mapEntries:function(t,e){var n=this,r=0;return Oe(this,this.toSeq().map(function(o,s){return t.call(e,[s,o],r++,n)}).fromEntrySeq())},mapKeys:function(t,e){var n=this;return Oe(this,this.toSeq().flip().map(function(r,o){return t.call(e,r,o,n)}).flip())}});var cr=n.prototype;cr[ln]=!0,cr[Tn]=ar.entries,cr.__toJS=ar.toObject,cr.__toStringMapper=function(t,e){return JSON.stringify(e)+": "+en(t)},$e(r,{toKeyedSeq:function(){return new re(this,(!1))},filter:function(t,e){return Oe(this,le(this,t,e,!1))},findIndex:function(t,e){var n=this.findEntry(t,e);return n?n[0]:-1},indexOf:function(t){var e=this.keyOf(t);return void 0===e?-1:e},lastIndexOf:function(t){var e=this.lastKeyOf(t);return void 0===e?-1:e},reverse:function(){return Oe(this,ue(this,!1))},slice:function(t,e){return Oe(this,pe(this,t,e,!1))},splice:function(t,e){var n=arguments.length;if(e=Math.max(0|e,0),0===n||2===n&&!e)return this;t=k(t,t<0?this.count():this.size);var r=this.slice(0,t);return Oe(this,1===n?r:r.concat(p(arguments,2),this.slice(t+e)))},findLastIndex:function(t,e){var n=this.findLastEntry(t,e);return n?n[0]:-1},first:function(){return this.get(0)},flatten:function(t){return Oe(this,me(this,t,!1))},get:function(t,e){return t=g(this,t),t<0||this.size===1/0||void 0!==this.size&&t>this.size?e:this.find(function(e,n){return n===t},void 0,e)},has:function(t){return t=g(this,t),t>=0&&(void 0!==this.size?this.size===1/0||t<this.size:this.indexOf(t)!==-1)},interpose:function(t){return Oe(this,xe(this,t))},interleave:function(){var t=[this].concat(p(arguments)),e=we(this.toSeq(),D.of,t),n=e.flatten(!0);return e.size&&(n.size=e.size*t.length),Oe(this,n)},keySeq:function(){return Z(0,this.size)},last:function(){return this.get(-1)},skipWhile:function(t,e){return Oe(this,ge(this,t,e,!1))},zip:function(){var t=[this].concat(p(arguments));return Oe(this,we(this,nn,t))},zipWith:function(t){var e=p(arguments);return e[0]=this,Oe(this,we(this,t,e))}}),r.prototype[dn]=!0,r.prototype[fn]=!0,$e(o,{get:function(t,e){return this.has(t)?t:e},includes:function(t){return this.has(t)},keySeq:function(){return this.valueSeq()}}),o.prototype.has=ar.includes,o.prototype.contains=o.prototype.includes,$e(R,n.prototype),$e(D,r.prototype),$e(I,o.prototype),$e(et,n.prototype),$e(nt,r.prototype),$e(rt,o.prototype);var ur={Iterable:e,Seq:A,Collection:tt,Map:dt,OrderedMap:Qt,List:qt,Stack:He,Set:Be,OrderedSet:Ue,Record:Ie,Range:Z,Repeat:X,is:G,fromJS:V};return ur})},function(t,e){"use strict";var n=!("undefined"==typeof window||!window.document||!window.document.createElement),r={canUseDOM:n,canUseWorkers:"undefined"!=typeof Worker,canUseEventListeners:n&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:n&&!!window.screen,isInWorker:!n};t.exports=r},function(t,e,n){"use strict";var r=null;t.exports={debugTool:r}},function(t,e,n){"use strict";t.exports=n(325)},function(t,e){"use strict";function n(t){return function(){return t}}var r=function(){};r.thatReturns=n,r.thatReturnsFalse=n(!1),r.thatReturnsTrue=n(!0),r.thatReturnsNull=n(null),r.thatReturnsThis=function(){return this},r.thatReturnsArgument=function(t){return t},t.exports=r},function(t,e,n){"use strict";function r(t){return void 0!==t.ref}function o(t){return void 0!==t.key}var s=n(4),i=n(20),a=(n(3),n(160),Object.prototype.hasOwnProperty),c="function"==typeof Symbol&&Symbol.for&&Symbol.for("react.element")||60103,u={key:!0,ref:!0,__self:!0,__source:!0},l=function(t,e,n,r,o,s,i){var a={$$typeof:c,type:t,key:e,ref:n,props:i,_owner:s};return a};l.createElement=function(t,e,n){var s,c={},d=null,f=null,p=null,h=null;if(null!=e){r(e)&&(f=e.ref),o(e)&&(d=""+e.key),p=void 0===e.__self?null:e.__self,h=void 0===e.__source?null:e.__source;for(s in e)a.call(e,s)&&!u.hasOwnProperty(s)&&(c[s]=e[s])}var g=arguments.length-2;if(1===g)c.children=n;else if(g>1){for(var y=Array(g),m=0;m<g;m++)y[m]=arguments[m+2];c.children=y}if(t&&t.defaultProps){var k=t.defaultProps;for(s in k)void 0===c[s]&&(c[s]=k[s])}return l(t,d,f,p,h,i.current,c)},l.createFactory=function(t){var e=l.createElement.bind(null,t);return e.type=t,e},l.cloneAndReplaceKey=function(t,e){var n=l(t.type,e,t.ref,t._self,t._source,t._owner,t.props);return n},l.cloneElement=function(t,e,n){var c,d=s({},t.props),f=t.key,p=t.ref,h=t._self,g=t._source,y=t._owner;if(null!=e){r(e)&&(p=e.ref,y=i.current),o(e)&&(f=""+e.key);var m;t.type&&t.type.defaultProps&&(m=t.type.defaultProps);for(c in e)a.call(e,c)&&!u.hasOwnProperty(c)&&(void 0===e[c]&&void 0!==m?d[c]=m[c]:d[c]=e[c])}var k=arguments.length-2;if(1===k)d.children=n;else if(k>1){for(var x=Array(k),v=0;v<k;v++)x[v]=arguments[v+2];d.children=x}return l(t.type,f,p,h,g,y,d)},l.isValidElement=function(t){return"object"==typeof t&&null!==t&&t.$$typeof===c},l.REACT_ELEMENT_TYPE=c,t.exports=l},function(t,e,n){"use strict";function r(){S.ReactReconcileTransaction&&b?void 0:l("123")}function o(){this.reinitializeTransaction(),this.dirtyComponentsLength=null,this.callbackQueue=f.getPooled(),this.reconcileTransaction=S.ReactReconcileTransaction.getPooled(!0)}function s(t,e,n,o,s,i){r(),b.batchedUpdates(t,e,n,o,s,i)}function i(t,e){return t._mountOrder-e._mountOrder}function a(t){var e=t.dirtyComponentsLength;e!==m.length?l("124",e,m.length):void 0,m.sort(i),k++;for(var n=0;n<e;n++){var r=m[n],o=r._pendingCallbacks;r._pendingCallbacks=null;var s;if(h.logTopLevelRenders){var a=r;r._currentElement.props===r._renderedComponent._currentElement&&(a=r._renderedComponent),s="React update: "+a.getName(),console.time(s)}if(g.performUpdateIfNecessary(r,t.reconcileTransaction,k),s&&console.timeEnd(s),o)for(var c=0;c<o.length;c++)t.callbackQueue.enqueue(o[c],r.getPublicInstance())}}function c(t){return r(),b.isBatchingUpdates?(m.push(t),void(null==t._updateBatchNumber&&(t._updateBatchNumber=k+1))):void b.batchedUpdates(c,t)}function u(t,e){b.isBatchingUpdates?void 0:l("125"),x.enqueue(t,e),v=!0}var l=n(2),d=n(4),f=n(138),p=n(19),h=n(149),g=n(26),y=n(48),m=(n(1),[]),k=0,x=f.getPooled(),v=!1,b=null,_={initialize:function(){this.dirtyComponentsLength=m.length},close:function(){this.dirtyComponentsLength!==m.length?(m.splice(0,this.dirtyComponentsLength),
T()):m.length=0}},w={initialize:function(){this.callbackQueue.reset()},close:function(){this.callbackQueue.notifyAll()}},O=[_,w];d(o.prototype,y.Mixin,{getTransactionWrappers:function(){return O},destructor:function(){this.dirtyComponentsLength=null,f.release(this.callbackQueue),this.callbackQueue=null,S.ReactReconcileTransaction.release(this.reconcileTransaction),this.reconcileTransaction=null},perform:function(t,e,n){return y.Mixin.perform.call(this,this.reconcileTransaction.perform,this.reconcileTransaction,t,e,n)}}),p.addPoolingTo(o);var T=function(){for(;m.length||v;){if(m.length){var t=o.getPooled();t.perform(a,null,t),o.release(t)}if(v){v=!1;var e=x;x=f.getPooled(),e.notifyAll(),f.release(e)}}},E={injectReconcileTransaction:function(t){t?void 0:l("126"),S.ReactReconcileTransaction=t},injectBatchingStrategy:function(t){t?void 0:l("127"),"function"!=typeof t.batchedUpdates?l("128"):void 0,"boolean"!=typeof t.isBatchingUpdates?l("129"):void 0,b=t}},S={ReactReconcileTransaction:null,batchedUpdates:s,enqueueUpdate:c,flushBatchedUpdates:T,injection:E,asap:u};t.exports=S},function(t,e){function n(){d&&u&&(d=!1,u.length?l=u.concat(l):f=-1,l.length&&r())}function r(){if(!d){var t=i.call(null,n);d=!0;for(var e=l.length;e;){for(u=l,l=[];++f<e;)u&&u[f].run();f=-1,e=l.length}u=null,d=!1,a.call(null,t)}}function o(t,e){this.fun=t,this.array=e}function s(){}var i,a,c=t.exports={};!function(){try{i=setTimeout}catch(t){i=function(){throw new Error("setTimeout is not defined")}}try{a=clearTimeout}catch(t){a=function(){throw new Error("clearTimeout is not defined")}}}();var u,l=[],d=!1,f=-1;c.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];l.push(new o(t,e)),1!==l.length||d||i.call(null,r,0)},o.prototype.run=function(){this.fun.apply(null,this.array)},c.title="browser",c.browser=!0,c.env={},c.argv=[],c.version="",c.versions={},c.on=s,c.addListener=s,c.once=s,c.off=s,c.removeListener=s,c.removeAllListeners=s,c.emit=s,c.binding=function(t){throw new Error("process.binding is not supported")},c.cwd=function(){return"/"},c.chdir=function(t){throw new Error("process.chdir is not supported")},c.umask=function(){return 0}},function(t,e,n){"use strict";var r=n(53),o=r({bubbled:null,captured:null}),s=r({topAbort:null,topAnimationEnd:null,topAnimationIteration:null,topAnimationStart:null,topBlur:null,topCanPlay:null,topCanPlayThrough:null,topChange:null,topClick:null,topCompositionEnd:null,topCompositionStart:null,topCompositionUpdate:null,topContextMenu:null,topCopy:null,topCut:null,topDoubleClick:null,topDrag:null,topDragEnd:null,topDragEnter:null,topDragExit:null,topDragLeave:null,topDragOver:null,topDragStart:null,topDrop:null,topDurationChange:null,topEmptied:null,topEncrypted:null,topEnded:null,topError:null,topFocus:null,topInput:null,topInvalid:null,topKeyDown:null,topKeyPress:null,topKeyUp:null,topLoad:null,topLoadedData:null,topLoadedMetadata:null,topLoadStart:null,topMouseDown:null,topMouseMove:null,topMouseOut:null,topMouseOver:null,topMouseUp:null,topPaste:null,topPause:null,topPlay:null,topPlaying:null,topProgress:null,topRateChange:null,topReset:null,topScroll:null,topSeeked:null,topSeeking:null,topSelectionChange:null,topStalled:null,topSubmit:null,topSuspend:null,topTextInput:null,topTimeUpdate:null,topTouchCancel:null,topTouchEnd:null,topTouchMove:null,topTouchStart:null,topTransitionEnd:null,topVolumeChange:null,topWaiting:null,topWheel:null}),i={topLevelTypes:s,PropagationPhases:o};t.exports=i},function(t,e,n){"use strict";function r(t,e,n,r){this.dispatchConfig=t,this._targetInst=e,this.nativeEvent=n;var o=this.constructor.Interface;for(var s in o)if(o.hasOwnProperty(s)){var a=o[s];a?this[s]=a(n):"target"===s?this.target=r:this[s]=n[s]}var c=null!=n.defaultPrevented?n.defaultPrevented:n.returnValue===!1;return c?this.isDefaultPrevented=i.thatReturnsTrue:this.isDefaultPrevented=i.thatReturnsFalse,this.isPropagationStopped=i.thatReturnsFalse,this}var o=n(4),s=n(19),i=n(10),a=(n(3),"function"==typeof Proxy,["dispatchConfig","_targetInst","nativeEvent","isDefaultPrevented","isPropagationStopped","_dispatchListeners","_dispatchInstances"]),c={type:null,target:null,currentTarget:i.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(t){return t.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};o(r.prototype,{preventDefault:function(){this.defaultPrevented=!0;var t=this.nativeEvent;t&&(t.preventDefault?t.preventDefault():t.returnValue=!1,this.isDefaultPrevented=i.thatReturnsTrue)},stopPropagation:function(){var t=this.nativeEvent;t&&(t.stopPropagation?t.stopPropagation():t.cancelBubble=!0,this.isPropagationStopped=i.thatReturnsTrue)},persist:function(){this.isPersistent=i.thatReturnsTrue},isPersistent:i.thatReturnsFalse,destructor:function(){var t=this.constructor.Interface;for(var e in t)this[e]=null;for(var n=0;n<a.length;n++)this[a[n]]=null}}),r.Interface=c,r.augmentClass=function(t,e){var n=this,r=function(){};r.prototype=n.prototype;var i=new r;o(i,t.prototype),t.prototype=i,t.prototype.constructor=t,t.Interface=o({},n.Interface,e),t.augmentClass=n.augmentClass,s.addPoolingTo(t,s.fourArgumentPooler)},s.addPoolingTo(r,s.fourArgumentPooler),t.exports=r},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function o(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0});var a=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),c=n(21),u=r(c);n(27);var l=n(106),d=r(l),f=n(6),p={nodes:new f.OrderedMap},h=function(t){function e(){return o(this,e),s(this,Object.getPrototypeOf(e).apply(this,arguments))}return i(e,t),a(e,[{key:"kind",get:function(){return"document"}},{key:"isEmpty",get:function(){return""==this.text}},{key:"length",get:function(){return this.text.length}},{key:"text",get:function(){return this.nodes.map(function(t){return t.text}).join("")}}],[{key:"create",value:function(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];return t instanceof e?t:(t.nodes=u.default.createList(t.nodes),new e(t).normalize())}}]),e}(new f.Record(p));for(var g in d.default)h.prototype[g]=d.default[g];e.default=h},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function o(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0});var a=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),c=n(36),u=r(c),l=n(51),d=r(l),f=n(6),p={data:new f.Map,type:null},h=function(t){function e(){return o(this,e),s(this,Object.getPrototypeOf(e).apply(this,arguments))}return i(e,t),a(e,[{key:"getComponent",value:function(t){return t.__getComponent(this)}},{key:"kind",get:function(){return"mark"}}],[{key:"create",value:function(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];if(t instanceof e)return t;if(!t.type)throw new Error("You must provide a `type` for the mark.");return t.data=u.default.create(t.data),new e(t)}},{key:"createSet",value:function(){var t=arguments.length<=0||void 0===arguments[0]?[]:arguments[0];return f.Set.isSet(t)?t:new f.Set(t.map(e.create))}}]),e}(new f.Record(p));(0,d.default)(h.prototype,["getComponent"]),e.default=h},function(t,e){"use strict";var n=function(t){var e;for(e in t)if(t.hasOwnProperty(e))return e;return null};t.exports=n},function(t,e,n){"use strict";var r=n(2),o=(n(1),function(t){var e=this;if(e.instancePool.length){var n=e.instancePool.pop();return e.call(n,t),n}return new e(t)}),s=function(t,e){var n=this;if(n.instancePool.length){var r=n.instancePool.pop();return n.call(r,t,e),r}return new n(t,e)},i=function(t,e,n){var r=this;if(r.instancePool.length){var o=r.instancePool.pop();return r.call(o,t,e,n),o}return new r(t,e,n)},a=function(t,e,n,r){var o=this;if(o.instancePool.length){var s=o.instancePool.pop();return o.call(s,t,e,n,r),s}return new o(t,e,n,r)},c=function(t,e,n,r,o){var s=this;if(s.instancePool.length){var i=s.instancePool.pop();return s.call(i,t,e,n,r,o),i}return new s(t,e,n,r,o)},u=function(t){var e=this;t instanceof e?void 0:r("25"),t.destructor(),e.instancePool.length<e.poolSize&&e.instancePool.push(t)},l=10,d=o,f=function(t,e){var n=t;return n.instancePool=[],n.getPooled=e||d,n.poolSize||(n.poolSize=l),n.release=u,n},p={addPoolingTo:f,oneArgumentPooler:o,twoArgumentPooler:s,threeArgumentPooler:i,fourArgumentPooler:a,fiveArgumentPooler:c};t.exports=p},function(t,e){"use strict";var n={current:null};t.exports=n},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function o(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0});var a=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}();n(16);var c=n(27),u=r(c),l=n(36),d=r(l),f=n(106),p=r(f),h=n(22),g=r(h),y=n(37),m=r(y),k=n(6),x=(r(k),{data:new k.Map,isVoid:!1,key:null,nodes:new k.List,type:null}),v=function(t){function e(){return o(this,e),s(this,Object.getPrototypeOf(e).apply(this,arguments))}return i(e,t),a(e,[{key:"kind",get:function(){return"block"}},{key:"isEmpty",get:function(){return""==this.text}},{key:"length",get:function(){return this.text.length}},{key:"text",get:function(){return this.nodes.map(function(t){return t.text}).join("")}}],[{key:"create",value:function(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];if(t instanceof e)return t;if(t instanceof u.default)return t;if(t instanceof g.default)return t;if(!t.type)throw new Error("You must pass a block `type`.");return t.key=t.key||(0,m.default)(4),t.data=d.default.create(t.data),t.isVoid=!!t.isVoid,t.nodes=e.createList(t.nodes),new e(t).normalize()}},{key:"createList",value:function(){var t=arguments.length<=0||void 0===arguments[0]?[]:arguments[0];return k.List.isList(t)?t:new k.List(t.map(e.create))}}]),e}(new k.Record(x));for(var b in p.default)v.prototype[b]=p.default[b];e.default=v},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function o(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0});var a=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),c=n(35),u=r(c),l=n(17),d=r(l),f=n(51),p=r(f),h=n(37),g=r(h),y=n(6),m=new y.Record({kind:"range",marks:new y.Set,text:""}),k={characters:new y.List,key:null},x=function(t){function e(){return o(this,e),s(this,Object.getPrototypeOf(e).apply(this,arguments))}return i(e,t),a(e,[{key:"getDecorations",value:function(t){var e=this,n=e.characters;if(0==n.size)return n;var r=!0,o=!1,s=void 0;try{for(var i,a=t[Symbol.iterator]();!(r=(i=a.next()).done);r=!0){var c=i.value,u=c(e);n=n.merge(u)}}catch(l){o=!0,s=l}finally{try{!r&&a.return&&a.return()}finally{if(o)throw s}}return n}},{key:"getDecorators",value:function(t){return t.__getDecorators(this)}},{key:"getRanges",value:function(){var t=arguments.length<=0||void 0===arguments[0]?[]:arguments[0],e=new y.List,n=this.getDecorations(t);if(0==n.size)return e.push(new m);var r=n.reduce(function(t,e,r){var o=e.marks,s=e.text;if(0==r)return t.push(new m({text:s,marks:o}));var i=n.get(r-1),a=i.marks,c=o.filterNot(function(t){return a.includes(t)}),u=a.filterNot(function(t){return o.includes(t)}),l=!c.size&&!u.size;if(l){var d=t.size-1,f=t.get(d),p=f.get("text");return f=f.set("text",p+=s),t.set(d,f)}return t.push(new m({text:s,marks:o}))},e);return r}},{key:"removeCharacters",value:function(t,e){var n=this.characters;return n=n.filterNot(function(n,r){return t<=r&&r<e}),this.merge({characters:n})}},{key:"insertText",value:function(t,e,n){var r=this.characters;if(!n){var o=t?r.get(t-1):null;n=o?o.marks:d.default.createSet()}var s=u.default.createList(e.split("").map(function(t){return{text:t,marks:n}}));return r=r.slice(0,t).concat(s).concat(r.slice(t)),this.merge({characters:r})}},{key:"validate",value:function(t){return t.__validate(this)}},{key:"kind",get:function(){return"text"}},{key:"isEmpty",get:function(){return""==this.text}},{key:"length",get:function(){return this.text.length}},{key:"text",get:function(){return this.characters.map(function(t){return t.text}).join("")}}],[{key:"create",value:function(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];return t instanceof e?t:(t.key=t.key||(0,g.default)(4),t.characters=u.default.createList(t.characters),new e(t))}},{key:"createList",value:function(){var t=arguments.length<=0||void 0===arguments[0]?[]:arguments[0];return y.List.isList(t)?t:new y.List(t.map(e.create))}}]),e}(new y.Record(k));(0,p.default)(x.prototype,["getDecorations","getDecorators","getRanges","validate"]),e.default=x},function(t,e,n){var r;(function(t,o){(function(){function s(t,e){return t.set(e[0],e[1]),t}function i(t,e){return t.add(e),t}function a(t,e,n){switch(n.length){case 0:return t.call(e);case 1:return t.call(e,n[0]);case 2:return t.call(e,n[0],n[1]);case 3:return t.call(e,n[0],n[1],n[2])}return t.apply(e,n)}function c(t,e,n,r){for(var o=-1,s=t?t.length:0;++o<s;){var i=t[o];e(r,i,n(i),t)}return r}function u(t,e){for(var n=-1,r=t?t.length:0;++n<r&&e(t[n],n,t)!==!1;);return t}function l(t,e){for(var n=t?t.length:0;n--&&e(t[n],n,t)!==!1;);return t}function d(t,e){for(var n=-1,r=t?t.length:0;++n<r;)if(!e(t[n],n,t))return!1;return!0}function f(t,e){for(var n=-1,r=t?t.length:0,o=0,s=[];++n<r;){var i=t[n];e(i,n,t)&&(s[o++]=i)}return s}function p(t,e){var n=t?t.length:0;return!!n&&O(t,e,0)>-1}function h(t,e,n){for(var r=-1,o=t?t.length:0;++r<o;)if(n(e,t[r]))return!0;return!1}function g(t,e){for(var n=-1,r=t?t.length:0,o=Array(r);++n<r;)o[n]=e(t[n],n,t);return o}function y(t,e){for(var n=-1,r=e.length,o=t.length;++n<r;)t[o+n]=e[n];return t}function m(t,e,n,r){var o=-1,s=t?t.length:0;for(r&&s&&(n=t[++o]);++o<s;)n=e(n,t[o],o,t);return n}function k(t,e,n,r){var o=t?t.length:0;for(r&&o&&(n=t[--o]);o--;)n=e(n,t[o],o,t);return n}function x(t,e){for(var n=-1,r=t?t.length:0;++n<r;)if(e(t[n],n,t))return!0;return!1}function v(t){return t.split("")}function b(t){return t.match(Me)||[]}function _(t,e,n){var r;return n(t,function(t,n,o){if(e(t,n,o))return r=n,!1}),r}function w(t,e,n,r){for(var o=t.length,s=n+(r?1:-1);r?s--:++s<o;)if(e(t[s],s,t))return s;return-1}function O(t,e,n){if(e!==e)return w(t,E,n);for(var r=n-1,o=t.length;++r<o;)if(t[r]===e)return r;return-1}function T(t,e,n,r){for(var o=n-1,s=t.length;++o<s;)if(r(t[o],e))return o;return-1}function E(t){return t!==t}function S(t,e){var n=t?t.length:0;return n?I(t,e)/n:It}function C(t){return function(e){return null==e?ot:e[t]}}function A(t){return function(e){return null==t?ot:t[e]}}function R(t,e,n,r,o){return o(t,function(t,o,s){n=r?(r=!1,t):e(n,t,o,s)}),n}function D(t,e){var n=t.length;for(t.sort(e);n--;)t[n]=t[n].value;return t}function I(t,e){for(var n,r=-1,o=t.length;++r<o;){var s=e(t[r]);s!==ot&&(n=n===ot?s:n+s)}return n}function M(t,e){for(var n=-1,r=Array(t);++n<t;)r[n]=e(n);return r}function K(t,e){return g(e,function(e){return[e,t[e]]})}function P(t){return function(e){return t(e)}}function N(t,e){return g(e,function(e){return t[e]})}function B(t,e){return t.has(e)}function j(t,e){for(var n=-1,r=t.length;++n<r&&O(e,t[n],0)>-1;);return n}function q(t,e){for(var n=t.length;n--&&O(e,t[n],0)>-1;);return n}function L(t,e){for(var n=t.length,r=0;n--;)t[n]===e&&r++;return r}function F(t){return"\\"+zn[t]}function U(t,e){return null==t?ot:t[e]}function z(t){return Kn.test(t)}function J(t){return Pn.test(t)}function V(t){var e=!1;if(null!=t&&"function"!=typeof t.toString)try{e=!!(t+"")}catch(n){}return e}function H(t){for(var e,n=[];!(e=t.next()).done;)n.push(e.value);return n}function W(t){var e=-1,n=Array(t.size);return t.forEach(function(t,r){n[++e]=[r,t]}),n}function Y(t,e){return function(n){return t(e(n))}}function G(t,e){for(var n=-1,r=t.length,o=0,s=[];++n<r;){var i=t[n];i!==e&&i!==ut||(t[n]=ut,s[o++]=n)}return s}function $(t){var e=-1,n=Array(t.size);return t.forEach(function(t){n[++e]=t}),n}function X(t){var e=-1,n=Array(t.size);return t.forEach(function(t){n[++e]=[t,t]}),n}function Q(t){return z(t)?tt(t):ir(t)}function Z(t){return z(t)?et(t):v(t)}function tt(t){for(var e=In.lastIndex=0;In.test(t);)e++;return e}function et(t){return t.match(In)||[]}function nt(t){return t.match(Mn)||[]}function rt(t){function e(t){if(Ba(t)&&!Ud(t)&&!(t instanceof o)){if(t instanceof r)return t;if(Gu.call(t,"__wrapped__"))return Ms(t)}return new r(t)}function n(){}function r(t,e){this.__wrapped__=t,this.__actions__=[],this.__chain__=!!e,this.__index__=0,this.__values__=ot}function o(t){this.__wrapped__=t,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=Mt,this.__views__=[]}function v(){var t=new o(this.__wrapped__);return t.__actions__=To(this.__actions__),t.__dir__=this.__dir__,t.__filtered__=this.__filtered__,t.__iteratees__=To(this.__iteratees__),t.__takeCount__=this.__takeCount__,t.__views__=To(this.__views__),t}function A(){if(this.__filtered__){var t=new o(this);t.__dir__=-1,t.__filtered__=!0}else t=this.clone(),t.__dir__*=-1;return t}function tt(){var t=this.__wrapped__.value(),e=this.__dir__,n=Ud(t),r=e<0,o=n?t.length:0,s=cs(0,o,this.__views__),i=s.start,a=s.end,c=a-i,u=r?a:i-1,l=this.__iteratees__,d=l.length,f=0,p=bl(c,this.__takeCount__);if(!n||o<it||o==c&&p==c)return so(t,this.__actions__);var h=[];t:for(;c--&&f<p;){u+=e;for(var g=-1,y=t[u];++g<d;){var m=l[g],k=m.iteratee,x=m.type,v=k(y);if(x==St)y=v;else if(!v){if(x==Et)continue t;break t}}h[f++]=y}return h}function et(t){var e=-1,n=t?t.length:0;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}function Me(){this.__data__=Rl?Rl(null):{}}function He(t){return this.has(t)&&delete this.__data__[t]}function We(t){var e=this.__data__;if(Rl){var n=e[t];return n===ct?ot:n}return Gu.call(e,t)?e[t]:ot}function Ye(t){var e=this.__data__;return Rl?e[t]!==ot:Gu.call(e,t)}function Ge(t,e){var n=this.__data__;return n[t]=Rl&&e===ot?ct:e,this}function $e(t){var e=-1,n=t?t.length:0;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}function Xe(){this.__data__=[]}function Qe(t){var e=this.__data__,n=_n(e,t);if(n<0)return!1;var r=e.length-1;return n==r?e.pop():cl.call(e,n,1),!0}function Ze(t){var e=this.__data__,n=_n(e,t);return n<0?ot:e[n][1]}function tn(t){return _n(this.__data__,t)>-1}function en(t,e){var n=this.__data__,r=_n(n,t);return r<0?n.push([t,e]):n[r][1]=e,this}function nn(t){var e=-1,n=t?t.length:0;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}function rn(){this.__data__={hash:new et,map:new(El||$e),string:new et}}function on(t){return ss(this,t).delete(t)}function sn(t){return ss(this,t).get(t)}function an(t){return ss(this,t).has(t)}function cn(t,e){return ss(this,t).set(t,e),this}function un(t){var e=-1,n=t?t.length:0;for(this.__data__=new nn;++e<n;)this.add(t[e])}function ln(t){return this.__data__.set(t,ct),this}function dn(t){return this.__data__.has(t)}function fn(t){this.__data__=new $e(t)}function pn(){this.__data__=new $e}function hn(t){return this.__data__.delete(t)}function gn(t){return this.__data__.get(t)}function yn(t){return this.__data__.has(t)}function mn(t,e){var n=this.__data__;if(n instanceof $e){var r=n.__data__;if(!El||r.length<it-1)return r.push([t,e]),this;n=this.__data__=new nn(r)}return n.set(t,e),this}function kn(t,e){var n=Ud(t)||wa(t)?M(t.length,Fu):[],r=n.length,o=!!r;for(var s in t)!e&&!Gu.call(t,s)||o&&("length"==s||ys(s,r))||n.push(s);return n}function xn(t,e,n,r){return t===ot||_a(t,Vu[n])&&!Gu.call(r,n)?e:t}function vn(t,e,n){(n===ot||_a(t[e],n))&&("number"!=typeof e||n!==ot||e in t)||(t[e]=n)}function bn(t,e,n){var r=t[e];Gu.call(t,e)&&_a(r,n)&&(n!==ot||e in t)||(t[e]=n)}function _n(t,e){for(var n=t.length;n--;)if(_a(t[n][0],e))return n;return-1}function wn(t,e,n,r){return zl(t,function(t,o,s){e(r,t,n(t),s)}),r}function On(t,e){return t&&Eo(e,kc(e),t)}function Tn(t,e){for(var n=-1,r=null==t,o=e.length,s=Ku(o);++n<o;)s[n]=r?ot:gc(t,e[n]);return s}function En(t,e,n){return t===t&&(n!==ot&&(t=t<=n?t:n),e!==ot&&(t=t>=e?t:e)),t}function Sn(t,e,n,r,o,s,i){var a;if(r&&(a=s?r(t,o,s,i):r(t)),a!==ot)return a;if(!Na(t))return t;var c=Ud(t);if(c){if(a=ds(t),!e)return To(t,a)}else{var l=Zl(t),d=l==Ut||l==zt;if(Jd(t))return po(t,e);if(l==Ht||l==Bt||d&&!s){if(V(t))return s?t:{};if(a=fs(d?{}:t),!e)return So(t,On(a,t))}else{if(!qn[l])return s?t:{};a=ps(t,l,Sn,e)}}i||(i=new fn);var f=i.get(t);if(f)return f;if(i.set(t,a),!c)var p=n?ts(t):kc(t);return u(p||t,function(o,s){p&&(s=o,o=t[s]),bn(a,s,Sn(o,e,n,r,s,t,i))}),a}function Cn(t){var e=kc(t);return function(n){return An(n,t,e)}}function An(t,e,n){var r=n.length;if(null==t)return!r;for(t=qu(t);r--;){var o=n[r],s=e[o],i=t[o];if(i===ot&&!(o in t)||!s(i))return!1}return!0}function In(t){return Na(t)?il(t):{}}function Mn(t,e,n){if("function"!=typeof t)throw new Uu(at);return nd(function(){t.apply(ot,n)},e)}function Kn(t,e,n,r){var o=-1,s=p,i=!0,a=t.length,c=[],u=e.length;if(!a)return c;n&&(e=g(e,P(n))),r?(s=h,i=!1):e.length>=it&&(s=B,i=!1,e=new un(e));t:for(;++o<a;){var l=t[o],d=n?n(l):l;if(l=r||0!==l?l:0,i&&d===d){for(var f=u;f--;)if(e[f]===d)continue t;c.push(l)}else s(e,d,r)||c.push(l)}return c}function Pn(t,e){var n=!0;return zl(t,function(t,r,o){return n=!!e(t,r,o)}),n}function Ln(t,e,n){for(var r=-1,o=t.length;++r<o;){var s=t[r],i=e(s);if(null!=i&&(a===ot?i===i&&!Ya(i):n(i,a)))var a=i,c=s}return c}function Fn(t,e,n,r){var o=t.length;for(n=tc(n),n<0&&(n=-n>o?0:o+n),r=r===ot||r>o?o:tc(r),r<0&&(r+=o),r=n>r?0:ec(r);n<r;)t[n++]=e;return t}function Un(t,e){var n=[];return zl(t,function(t,r,o){e(t,r,o)&&n.push(t)}),n}function zn(t,e,n,r,o){var s=-1,i=t.length;for(n||(n=gs),o||(o=[]);++s<i;){var a=t[s];e>0&&n(a)?e>1?zn(a,e-1,n,r,o):y(o,a):r||(o[o.length]=a)}return o}function Hn(t,e){return t&&Vl(t,e,kc)}function Wn(t,e){return t&&Hl(t,e,kc)}function Gn(t,e){return f(e,function(e){return Ma(t[e])})}function $n(t,e){e=ks(e,t)?[e]:lo(e);for(var n=0,r=e.length;null!=t&&n<r;)t=t[Rs(e[n++])];return n&&n==r?t:ot}function Qn(t,e,n){var r=e(t);return Ud(t)?r:y(r,n(t))}function Zn(t){return Qu.call(t)}function ir(t,e){return t>e}function dr(t,e){return null!=t&&Gu.call(t,e)}function fr(t,e){return null!=t&&e in qu(t)}function pr(t,e,n){return t>=bl(e,n)&&t<vl(e,n)}function hr(t,e,n){for(var r=n?h:p,o=t[0].length,s=t.length,i=s,a=Ku(s),c=1/0,u=[];i--;){var l=t[i];i&&e&&(l=g(l,P(e))),c=bl(l.length,c),a[i]=!n&&(e||o>=120&&l.length>=120)?new un(i&&l):ot}l=t[0];var d=-1,f=a[0];t:for(;++d<o&&u.length<c;){var y=l[d],m=e?e(y):y;if(y=n||0!==y?y:0,!(f?B(f,m):r(u,m,n))){for(i=s;--i;){var k=a[i];if(!(k?B(k,m):r(t[i],m,n)))continue t}f&&f.push(m),u.push(y)}}return u}function gr(t,e,n,r){return Hn(t,function(t,o,s){e(r,n(t),o,s)}),r}function yr(t,e,n){ks(e,t)||(e=lo(e),t=Cs(t,e),e=Qs(e));var r=null==t?t:t[Rs(e)];return null==r?ot:a(r,t,n)}function mr(t){return Ba(t)&&Qu.call(t)==te}function kr(t){return Ba(t)&&Qu.call(t)==Lt}function xr(t,e,n,r,o){return t===e||(null==t||null==e||!Na(t)&&!Ba(e)?t!==t&&e!==e:vr(t,e,xr,n,r,o))}function vr(t,e,n,r,o,s){var i=Ud(t),a=Ud(e),c=jt,u=jt;i||(c=Zl(t),c=c==Bt?Ht:c),a||(u=Zl(e),u=u==Bt?Ht:u);var l=c==Ht&&!V(t),d=u==Ht&&!V(e),f=c==u;if(f&&!l)return s||(s=new fn),i||Gd(t)?Xo(t,e,n,r,o,s):Qo(t,e,c,n,r,o,s);if(!(o&bt)){var p=l&&Gu.call(t,"__wrapped__"),h=d&&Gu.call(e,"__wrapped__");if(p||h){var g=p?t.value():t,y=h?e.value():e;return s||(s=new fn),n(g,y,r,o,s)}}return!!f&&(s||(s=new fn),Zo(t,e,n,r,o,s))}function br(t){return Ba(t)&&Zl(t)==Jt}function _r(t,e,n,r){var o=n.length,s=o,i=!r;if(null==t)return!s;for(t=qu(t);o--;){var a=n[o];if(i&&a[2]?a[1]!==t[a[0]]:!(a[0]in t))return!1}for(;++o<s;){a=n[o];var c=a[0],u=t[c],l=a[1];if(i&&a[2]){if(u===ot&&!(c in t))return!1}else{var d=new fn;if(r)var f=r(u,l,c,t,e,d);if(!(f===ot?xr(l,u,r,vt|bt,d):f))return!1}}return!0}function wr(t){if(!Na(t)||bs(t))return!1;var e=Ma(t)||V(t)?tl:Le;return e.test(Ds(t))}function Or(t){return Na(t)&&Qu.call(t)==Yt}function Tr(t){return Ba(t)&&Zl(t)==Gt}function Er(t){return Ba(t)&&Pa(t.length)&&!!jn[Qu.call(t)]}function Sr(t){return"function"==typeof t?t:null==t?cu:"object"==typeof t?Ud(t)?Mr(t[0],t[1]):Ir(t):yu(t)}function Cr(t){if(!_s(t))return xl(t);var e=[];for(var n in qu(t))Gu.call(t,n)&&"constructor"!=n&&e.push(n);return e}function Ar(t){if(!Na(t))return Ss(t);var e=_s(t),n=[];for(var r in t)("constructor"!=r||!e&&Gu.call(t,r))&&n.push(r);return n}function Rr(t,e){return t<e}function Dr(t,e){var n=-1,r=Oa(t)?Ku(t.length):[];return zl(t,function(t,o,s){r[++n]=e(t,o,s)}),r}function Ir(t){var e=is(t);return 1==e.length&&e[0][2]?Os(e[0][0],e[0][1]):function(n){return n===t||_r(n,t,e)}}function Mr(t,e){return ks(t)&&ws(e)?Os(Rs(t),e):function(n){var r=gc(n,t);return r===ot&&r===e?mc(n,t):xr(e,r,ot,vt|bt)}}function Kr(t,e,n,r,o){if(t!==e){if(!Ud(e)&&!Gd(e))var s=Ar(e);u(s||e,function(i,a){if(s&&(a=i,i=e[a]),Na(i))o||(o=new fn),Pr(t,e,a,n,Kr,r,o);else{var c=r?r(t[a],i,a+"",t,e,o):ot;c===ot&&(c=i),vn(t,a,c)}})}}function Pr(t,e,n,r,o,s,i){var a=t[n],c=e[n],u=i.get(c);if(u)return void vn(t,n,u);var l=s?s(a,c,n+"",t,e,i):ot,d=l===ot;d&&(l=c,Ud(c)||Gd(c)?Ud(a)?l=a:Ta(a)?l=To(a):(d=!1,l=Sn(c,!0)):Va(c)||wa(c)?wa(a)?l=rc(a):!Na(a)||r&&Ma(a)?(d=!1,l=Sn(c,!0)):l=a:d=!1),d&&(i.set(c,l),o(l,c,r,s,i),i.delete(c)),vn(t,n,l)}function Nr(t,e){var n=t.length;if(n)return e+=e<0?n:0,ys(e,n)?t[e]:ot}function Br(t,e,n){var r=-1;e=g(e.length?e:[cu],P(os()));var o=Dr(t,function(t,n,o){var s=g(e,function(e){return e(t)});return{criteria:s,index:++r,value:t}});return D(o,function(t,e){return _o(t,e,n)})}function jr(t,e){return t=qu(t),qr(t,e,function(e,n){return n in t})}function qr(t,e,n){for(var r=-1,o=e.length,s={};++r<o;){var i=e[r],a=t[i];n(a,i)&&(s[i]=a)}return s}function Lr(t){return function(e){return $n(e,t)}}function Fr(t,e,n,r){var o=r?T:O,s=-1,i=e.length,a=t;for(t===e&&(e=To(e)),n&&(a=g(t,P(n)));++s<i;)for(var c=0,u=e[s],l=n?n(u):u;(c=o(a,l,c,r))>-1;)a!==t&&cl.call(a,c,1),cl.call(t,c,1);return t}function Ur(t,e){for(var n=t?e.length:0,r=n-1;n--;){var o=e[n];if(n==r||o!==s){var s=o;if(ys(o))cl.call(t,o,1);else if(ks(o,t))delete t[Rs(o)];else{var i=lo(o),a=Cs(t,i);null!=a&&delete a[Rs(Qs(i))]}}}return t}function zr(t,e){return t+hl(wl()*(e-t+1))}function Jr(t,e,n,r){for(var o=-1,s=vl(pl((e-t)/(n||1)),0),i=Ku(s);s--;)i[r?s:++o]=t,t+=n;return i}function Vr(t,e){var n="";if(!t||e<1||e>Rt)return n;do e%2&&(n+=t),e=hl(e/2),e&&(t+=t);while(e);return n}function Hr(t,e){return e=vl(e===ot?t.length-1:e,0),function(){for(var n=arguments,r=-1,o=vl(n.length-e,0),s=Ku(o);++r<o;)s[r]=n[e+r];r=-1;for(var i=Ku(e+1);++r<e;)i[r]=n[r];return i[e]=s,a(t,this,i)}}function Wr(t,e,n,r){if(!Na(t))return t;e=ks(e,t)?[e]:lo(e);for(var o=-1,s=e.length,i=s-1,a=t;null!=a&&++o<s;){var c=Rs(e[o]),u=n;if(o!=i){var l=a[c];u=r?r(l,c,a):ot,u===ot&&(u=Na(l)?l:ys(e[o+1])?[]:{})}bn(a,c,u),a=a[c]}return t}function Yr(t,e,n){var r=-1,o=t.length;e<0&&(e=-e>o?0:o+e),n=n>o?o:n,n<0&&(n+=o),o=e>n?0:n-e>>>0,e>>>=0;for(var s=Ku(o);++r<o;)s[r]=t[r+e];return s}function Gr(t,e){var n;return zl(t,function(t,r,o){return n=e(t,r,o),!n}),!!n}function $r(t,e,n){var r=0,o=t?t.length:r;if("number"==typeof e&&e===e&&o<=Pt){for(;r<o;){var s=r+o>>>1,i=t[s];null!==i&&!Ya(i)&&(n?i<=e:i<e)?r=s+1:o=s}return o}return Xr(t,e,cu,n)}function Xr(t,e,n,r){e=n(e);for(var o=0,s=t?t.length:0,i=e!==e,a=null===e,c=Ya(e),u=e===ot;o<s;){var l=hl((o+s)/2),d=n(t[l]),f=d!==ot,p=null===d,h=d===d,g=Ya(d);if(i)var y=r||h;else y=u?h&&(r||f):a?h&&f&&(r||!p):c?h&&f&&!p&&(r||!g):!p&&!g&&(r?d<=e:d<e);y?o=l+1:s=l}return bl(s,Kt)}function Qr(t,e){for(var n=-1,r=t.length,o=0,s=[];++n<r;){var i=t[n],a=e?e(i):i;if(!n||!_a(a,c)){var c=a;s[o++]=0===i?0:i}}return s}function Zr(t){return"number"==typeof t?t:Ya(t)?It:+t}function to(t){if("string"==typeof t)return t;if(Ya(t))return Ul?Ul.call(t):"";var e=t+"";return"0"==e&&1/t==-At?"-0":e}function eo(t,e,n){var r=-1,o=p,s=t.length,i=!0,a=[],c=a;if(n)i=!1,o=h;else if(s>=it){var u=e?null:Gl(t);if(u)return $(u);i=!1,o=B,c=new un}else c=e?[]:a;t:for(;++r<s;){var l=t[r],d=e?e(l):l;if(l=n||0!==l?l:0,i&&d===d){for(var f=c.length;f--;)if(c[f]===d)continue t;e&&c.push(d),a.push(l)}else o(c,d,n)||(c!==a&&c.push(d),a.push(l))}return a}function no(t,e){e=ks(e,t)?[e]:lo(e),t=Cs(t,e);var n=Rs(Qs(e));return!(null!=t&&Gu.call(t,n))||delete t[n]}function ro(t,e,n,r){return Wr(t,e,n($n(t,e)),r)}function oo(t,e,n,r){for(var o=t.length,s=r?o:-1;(r?s--:++s<o)&&e(t[s],s,t););return n?Yr(t,r?0:s,r?s+1:o):Yr(t,r?s+1:0,r?o:s)}function so(t,e){var n=t;return n instanceof o&&(n=n.value()),m(e,function(t,e){return e.func.apply(e.thisArg,y([t],e.args))},n)}function io(t,e,n){for(var r=-1,o=t.length;++r<o;)var s=s?y(Kn(s,t[r],e,n),Kn(t[r],s,e,n)):t[r];return s&&s.length?eo(s,e,n):[]}function ao(t,e,n){for(var r=-1,o=t.length,s=e.length,i={};++r<o;){var a=r<s?e[r]:ot;n(i,t[r],a)}return i}function co(t){return Ta(t)?t:[]}function uo(t){return"function"==typeof t?t:cu}function lo(t){return Ud(t)?t:od(t)}function fo(t,e,n){var r=t.length;return n=n===ot?r:n,!e&&n>=r?t:Yr(t,e,n)}function po(t,e){if(e)return t.slice();var n=new t.constructor(t.length);return t.copy(n),n}function ho(t){var e=new t.constructor(t.byteLength);return new rl(e).set(new rl(t)),e}function go(t,e){var n=e?ho(t.buffer):t.buffer;return new t.constructor(n,t.byteOffset,t.byteLength)}function yo(t,e,n){var r=e?n(W(t),!0):W(t);
return m(r,s,new t.constructor)}function mo(t){var e=new t.constructor(t.source,Ne.exec(t));return e.lastIndex=t.lastIndex,e}function ko(t,e,n){var r=e?n($(t),!0):$(t);return m(r,i,new t.constructor)}function xo(t){return Fl?qu(Fl.call(t)):{}}function vo(t,e){var n=e?ho(t.buffer):t.buffer;return new t.constructor(n,t.byteOffset,t.length)}function bo(t,e){if(t!==e){var n=t!==ot,r=null===t,o=t===t,s=Ya(t),i=e!==ot,a=null===e,c=e===e,u=Ya(e);if(!a&&!u&&!s&&t>e||s&&i&&c&&!a&&!u||r&&i&&c||!n&&c||!o)return 1;if(!r&&!s&&!u&&t<e||u&&n&&o&&!r&&!s||a&&n&&o||!i&&o||!c)return-1}return 0}function _o(t,e,n){for(var r=-1,o=t.criteria,s=e.criteria,i=o.length,a=n.length;++r<i;){var c=bo(o[r],s[r]);if(c){if(r>=a)return c;var u=n[r];return c*("desc"==u?-1:1)}}return t.index-e.index}function wo(t,e,n,r){for(var o=-1,s=t.length,i=n.length,a=-1,c=e.length,u=vl(s-i,0),l=Ku(c+u),d=!r;++a<c;)l[a]=e[a];for(;++o<i;)(d||o<s)&&(l[n[o]]=t[o]);for(;u--;)l[a++]=t[o++];return l}function Oo(t,e,n,r){for(var o=-1,s=t.length,i=-1,a=n.length,c=-1,u=e.length,l=vl(s-a,0),d=Ku(l+u),f=!r;++o<l;)d[o]=t[o];for(var p=o;++c<u;)d[p+c]=e[c];for(;++i<a;)(f||o<s)&&(d[p+n[i]]=t[o++]);return d}function To(t,e){var n=-1,r=t.length;for(e||(e=Ku(r));++n<r;)e[n]=t[n];return e}function Eo(t,e,n,r){n||(n={});for(var o=-1,s=e.length;++o<s;){var i=e[o],a=r?r(n[i],t[i],i,n,t):ot;bn(n,i,a===ot?t[i]:a)}return n}function So(t,e){return Eo(t,Xl(t),e)}function Co(t,e){return function(n,r){var o=Ud(n)?c:wn,s=e?e():{};return o(n,t,os(r,2),s)}}function Ao(t){return Hr(function(e,n){var r=-1,o=n.length,s=o>1?n[o-1]:ot,i=o>2?n[2]:ot;for(s=t.length>3&&"function"==typeof s?(o--,s):ot,i&&ms(n[0],n[1],i)&&(s=o<3?ot:s,o=1),e=qu(e);++r<o;){var a=n[r];a&&t(e,a,r,s)}return e})}function Ro(t,e){return function(n,r){if(null==n)return n;if(!Oa(n))return t(n,r);for(var o=n.length,s=e?o:-1,i=qu(n);(e?s--:++s<o)&&r(i[s],s,i)!==!1;);return n}}function Do(t){return function(e,n,r){for(var o=-1,s=qu(e),i=r(e),a=i.length;a--;){var c=i[t?a:++o];if(n(s[c],c,s)===!1)break}return e}}function Io(t,e,n){function r(){var e=this&&this!==Yn&&this instanceof r?s:t;return e.apply(o?n:this,arguments)}var o=e&lt,s=Po(t);return r}function Mo(t){return function(e){e=sc(e);var n=z(e)?Z(e):ot,r=n?n[0]:e.charAt(0),o=n?fo(n,1).join(""):e.slice(1);return r[t]()+o}}function Ko(t){return function(e){return m(ru(Bc(e).replace(Rn,"")),t,"")}}function Po(t){return function(){var e=arguments;switch(e.length){case 0:return new t;case 1:return new t(e[0]);case 2:return new t(e[0],e[1]);case 3:return new t(e[0],e[1],e[2]);case 4:return new t(e[0],e[1],e[2],e[3]);case 5:return new t(e[0],e[1],e[2],e[3],e[4]);case 6:return new t(e[0],e[1],e[2],e[3],e[4],e[5]);case 7:return new t(e[0],e[1],e[2],e[3],e[4],e[5],e[6])}var n=In(t.prototype),r=t.apply(n,e);return Na(r)?r:n}}function No(t,e,n){function r(){for(var s=arguments.length,i=Ku(s),c=s,u=rs(r);c--;)i[c]=arguments[c];var l=s<3&&i[0]!==u&&i[s-1]!==u?[]:G(i,u);if(s-=l.length,s<n)return Wo(t,e,qo,r.placeholder,ot,i,l,ot,ot,n-s);var d=this&&this!==Yn&&this instanceof r?o:t;return a(d,this,i)}var o=Po(t);return r}function Bo(t){return function(e,n,r){var o=qu(e);if(!Oa(e)){var s=os(n,3);e=kc(e),n=function(t){return s(o[t],t,o)}}var i=t(e,n,r);return i>-1?o[s?e[i]:i]:ot}}function jo(t){return Hr(function(e){e=zn(e,1);var n=e.length,o=n,s=r.prototype.thru;for(t&&e.reverse();o--;){var i=e[o];if("function"!=typeof i)throw new Uu(at);if(s&&!a&&"wrapper"==ns(i))var a=new r([],(!0))}for(o=a?o:n;++o<n;){i=e[o];var c=ns(i),u="wrapper"==c?$l(i):ot;a=u&&vs(u[0])&&u[1]==(mt|pt|gt|kt)&&!u[4].length&&1==u[9]?a[ns(u[0])].apply(a,u[3]):1==i.length&&vs(i)?a[c]():a.thru(i)}return function(){var t=arguments,r=t[0];if(a&&1==t.length&&Ud(r)&&r.length>=it)return a.plant(r).value();for(var o=0,s=n?e[o].apply(this,t):r;++o<n;)s=e[o].call(this,s);return s}})}function qo(t,e,n,r,o,s,i,a,c,u){function l(){for(var m=arguments.length,k=Ku(m),x=m;x--;)k[x]=arguments[x];if(h)var v=rs(l),b=L(k,v);if(r&&(k=wo(k,r,o,h)),s&&(k=Oo(k,s,i,h)),m-=b,h&&m<u){var _=G(k,v);return Wo(t,e,qo,l.placeholder,n,k,_,a,c,u-m)}var w=f?n:this,O=p?w[t]:t;return m=k.length,a?k=As(k,a):g&&m>1&&k.reverse(),d&&c<m&&(k.length=c),this&&this!==Yn&&this instanceof l&&(O=y||Po(O)),O.apply(w,k)}var d=e&mt,f=e&lt,p=e&dt,h=e&(pt|ht),g=e&xt,y=p?ot:Po(t);return l}function Lo(t,e){return function(n,r){return gr(n,t,e(r),{})}}function Fo(t,e){return function(n,r){var o;if(n===ot&&r===ot)return e;if(n!==ot&&(o=n),r!==ot){if(o===ot)return r;"string"==typeof n||"string"==typeof r?(n=to(n),r=to(r)):(n=Zr(n),r=Zr(r)),o=t(n,r)}return o}}function Uo(t){return Hr(function(e){return e=1==e.length&&Ud(e[0])?g(e[0],P(os())):g(zn(e,1),P(os())),Hr(function(n){var r=this;return t(e,function(t){return a(t,r,n)})})})}function zo(t,e){e=e===ot?" ":to(e);var n=e.length;if(n<2)return n?Vr(e,t):e;var r=Vr(e,pl(t/Q(e)));return z(e)?fo(Z(r),0,t).join(""):r.slice(0,t)}function Jo(t,e,n,r){function o(){for(var e=-1,c=arguments.length,u=-1,l=r.length,d=Ku(l+c),f=this&&this!==Yn&&this instanceof o?i:t;++u<l;)d[u]=r[u];for(;c--;)d[u++]=arguments[++e];return a(f,s?n:this,d)}var s=e&lt,i=Po(t);return o}function Vo(t){return function(e,n,r){return r&&"number"!=typeof r&&ms(e,n,r)&&(n=r=ot),e=Za(e),n===ot?(n=e,e=0):n=Za(n),r=r===ot?e<n?1:-1:Za(r),Jr(e,n,r,t)}}function Ho(t){return function(e,n){return"string"==typeof e&&"string"==typeof n||(e=nc(e),n=nc(n)),t(e,n)}}function Wo(t,e,n,r,o,s,i,a,c,u){var l=e&pt,d=l?i:ot,f=l?ot:i,p=l?s:ot,h=l?ot:s;e|=l?gt:yt,e&=~(l?yt:gt),e&ft||(e&=~(lt|dt));var g=[t,e,o,p,d,h,f,a,c,u],y=n.apply(ot,g);return vs(t)&&ed(y,g),y.placeholder=r,rd(y,t,e)}function Yo(t){var e=ju[t];return function(t,n){if(t=nc(t),n=bl(tc(n),292)){var r=(sc(t)+"e").split("e"),o=e(r[0]+"e"+(+r[1]+n));return r=(sc(o)+"e").split("e"),+(r[0]+"e"+(+r[1]-n))}return e(t)}}function Go(t){return function(e){var n=Zl(e);return n==Jt?W(e):n==Gt?X(e):K(e,t(e))}}function $o(t,e,n,r,o,s,i,a){var c=e&dt;if(!c&&"function"!=typeof t)throw new Uu(at);var u=r?r.length:0;if(u||(e&=~(gt|yt),r=o=ot),i=i===ot?i:vl(tc(i),0),a=a===ot?a:tc(a),u-=o?o.length:0,e&yt){var l=r,d=o;r=o=ot}var f=c?ot:$l(t),p=[t,e,n,r,o,l,d,s,i,a];if(f&&Ts(p,f),t=p[0],e=p[1],n=p[2],r=p[3],o=p[4],a=p[9]=null==p[9]?c?0:t.length:vl(p[9]-u,0),!a&&e&(pt|ht)&&(e&=~(pt|ht)),e&&e!=lt)h=e==pt||e==ht?No(t,e,a):e!=gt&&e!=(lt|gt)||o.length?qo.apply(ot,p):Jo(t,e,n,r);else var h=Io(t,e,n);var g=f?Wl:ed;return rd(g(h,p),t,e)}function Xo(t,e,n,r,o,s){var i=o&bt,a=t.length,c=e.length;if(a!=c&&!(i&&c>a))return!1;var u=s.get(t);if(u&&s.get(e))return u==e;var l=-1,d=!0,f=o&vt?new un:ot;for(s.set(t,e),s.set(e,t);++l<a;){var p=t[l],h=e[l];if(r)var g=i?r(h,p,l,e,t,s):r(p,h,l,t,e,s);if(g!==ot){if(g)continue;d=!1;break}if(f){if(!x(e,function(t,e){if(!f.has(e)&&(p===t||n(p,t,r,o,s)))return f.add(e)})){d=!1;break}}else if(p!==h&&!n(p,h,r,o,s)){d=!1;break}}return s.delete(t),s.delete(e),d}function Qo(t,e,n,r,o,s,i){switch(n){case ee:if(t.byteLength!=e.byteLength||t.byteOffset!=e.byteOffset)return!1;t=t.buffer,e=e.buffer;case te:return!(t.byteLength!=e.byteLength||!r(new rl(t),new rl(e)));case qt:case Lt:case Vt:return _a(+t,+e);case Ft:return t.name==e.name&&t.message==e.message;case Yt:case $t:return t==e+"";case Jt:var a=W;case Gt:var c=s&bt;if(a||(a=$),t.size!=e.size&&!c)return!1;var u=i.get(t);if(u)return u==e;s|=vt,i.set(t,e);var l=Xo(a(t),a(e),r,o,s,i);return i.delete(t),l;case Xt:if(Fl)return Fl.call(t)==Fl.call(e)}return!1}function Zo(t,e,n,r,o,s){var i=o&bt,a=kc(t),c=a.length,u=kc(e),l=u.length;if(c!=l&&!i)return!1;for(var d=c;d--;){var f=a[d];if(!(i?f in e:Gu.call(e,f)))return!1}var p=s.get(t);if(p&&s.get(e))return p==e;var h=!0;s.set(t,e),s.set(e,t);for(var g=i;++d<c;){f=a[d];var y=t[f],m=e[f];if(r)var k=i?r(m,y,f,e,t,s):r(y,m,f,t,e,s);if(!(k===ot?y===m||n(y,m,r,o,s):k)){h=!1;break}g||(g="constructor"==f)}if(h&&!g){var x=t.constructor,v=e.constructor;x!=v&&"constructor"in t&&"constructor"in e&&!("function"==typeof x&&x instanceof x&&"function"==typeof v&&v instanceof v)&&(h=!1)}return s.delete(t),s.delete(e),h}function ts(t){return Qn(t,kc,Xl)}function es(t){return Qn(t,xc,Ql)}function ns(t){for(var e=t.name+"",n=Kl[e],r=Gu.call(Kl,e)?n.length:0;r--;){var o=n[r],s=o.func;if(null==s||s==t)return o.name}return e}function rs(t){var n=Gu.call(e,"placeholder")?e:t;return n.placeholder}function os(){var t=e.iteratee||uu;return t=t===uu?Sr:t,arguments.length?t(arguments[0],arguments[1]):t}function ss(t,e){var n=t.__data__;return xs(e)?n["string"==typeof e?"string":"hash"]:n.map}function is(t){for(var e=kc(t),n=e.length;n--;){var r=e[n],o=t[r];e[n]=[r,o,ws(o)]}return e}function as(t,e){var n=U(t,e);return wr(n)?n:ot}function cs(t,e,n){for(var r=-1,o=n.length;++r<o;){var s=n[r],i=s.size;switch(s.type){case"drop":t+=i;break;case"dropRight":e-=i;break;case"take":e=bl(e,t+i);break;case"takeRight":t=vl(t,e-i)}}return{start:t,end:e}}function us(t){var e=t.match(De);return e?e[1].split(Ie):[]}function ls(t,e,n){e=ks(e,t)?[e]:lo(e);for(var r,o=-1,s=e.length;++o<s;){var i=Rs(e[o]);if(!(r=null!=t&&n(t,i)))break;t=t[i]}if(r)return r;var s=t?t.length:0;return!!s&&Pa(s)&&ys(i,s)&&(Ud(t)||wa(t))}function ds(t){var e=t.length,n=t.constructor(e);return e&&"string"==typeof t[0]&&Gu.call(t,"index")&&(n.index=t.index,n.input=t.input),n}function fs(t){return"function"!=typeof t.constructor||_s(t)?{}:In(ol(t))}function ps(t,e,n,r){var o=t.constructor;switch(e){case te:return ho(t);case qt:case Lt:return new o((+t));case ee:return go(t,r);case ne:case re:case oe:case se:case ie:case ae:case ce:case ue:case le:return vo(t,r);case Jt:return yo(t,r,n);case Vt:case $t:return new o(t);case Yt:return mo(t);case Gt:return ko(t,r,n);case Xt:return xo(t)}}function hs(t,e){var n=e.length,r=n-1;return e[r]=(n>1?"& ":"")+e[r],e=e.join(n>2?", ":" "),t.replace(Re,"{\n/* [wrapped with "+e+"] */\n")}function gs(t){return Ud(t)||wa(t)||!!(ul&&t&&t[ul])}function ys(t,e){return e=null==e?Rt:e,!!e&&("number"==typeof t||Ue.test(t))&&t>-1&&t%1==0&&t<e}function ms(t,e,n){if(!Na(n))return!1;var r=typeof e;return!!("number"==r?Oa(n)&&ys(e,n.length):"string"==r&&e in n)&&_a(n[e],t)}function ks(t,e){if(Ud(t))return!1;var n=typeof t;return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=t&&!Ya(t))||(_e.test(t)||!be.test(t)||null!=e&&t in qu(e))}function xs(t){var e=typeof t;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==t:null===t}function vs(t){var n=ns(t),r=e[n];if("function"!=typeof r||!(n in o.prototype))return!1;if(t===r)return!0;var s=$l(r);return!!s&&t===s[0]}function bs(t){return!!Wu&&Wu in t}function _s(t){var e=t&&t.constructor,n="function"==typeof e&&e.prototype||Vu;return t===n}function ws(t){return t===t&&!Na(t)}function Os(t,e){return function(n){return null!=n&&(n[t]===e&&(e!==ot||t in qu(n)))}}function Ts(t,e){var n=t[1],r=e[1],o=n|r,s=o<(lt|dt|mt),i=r==mt&&n==pt||r==mt&&n==kt&&t[7].length<=e[8]||r==(mt|kt)&&e[7].length<=e[8]&&n==pt;if(!s&&!i)return t;r&lt&&(t[2]=e[2],o|=n&lt?0:ft);var a=e[3];if(a){var c=t[3];t[3]=c?wo(c,a,e[4]):a,t[4]=c?G(t[3],ut):e[4]}return a=e[5],a&&(c=t[5],t[5]=c?Oo(c,a,e[6]):a,t[6]=c?G(t[5],ut):e[6]),a=e[7],a&&(t[7]=a),r&mt&&(t[8]=null==t[8]?e[8]:bl(t[8],e[8])),null==t[9]&&(t[9]=e[9]),t[0]=e[0],t[1]=o,t}function Es(t,e,n,r,o,s){return Na(t)&&Na(e)&&(s.set(e,t),Kr(t,e,ot,Es,s),s.delete(e)),t}function Ss(t){var e=[];if(null!=t)for(var n in qu(t))e.push(n);return e}function Cs(t,e){return 1==e.length?t:$n(t,Yr(e,0,-1))}function As(t,e){for(var n=t.length,r=bl(e.length,n),o=To(t);r--;){var s=e[r];t[r]=ys(s,n)?o[s]:ot}return t}function Rs(t){if("string"==typeof t||Ya(t))return t;var e=t+"";return"0"==e&&1/t==-At?"-0":e}function Ds(t){if(null!=t){try{return Yu.call(t)}catch(e){}try{return t+""}catch(e){}}return""}function Is(t,e){return u(Nt,function(n){var r="_."+n[0];e&n[1]&&!p(t,r)&&t.push(r)}),t.sort()}function Ms(t){if(t instanceof o)return t.clone();var e=new r(t.__wrapped__,t.__chain__);return e.__actions__=To(t.__actions__),e.__index__=t.__index__,e.__values__=t.__values__,e}function Ks(t,e,n){e=(n?ms(t,e,n):e===ot)?1:vl(tc(e),0);var r=t?t.length:0;if(!r||e<1)return[];for(var o=0,s=0,i=Ku(pl(r/e));o<r;)i[s++]=Yr(t,o,o+=e);return i}function Ps(t){for(var e=-1,n=t?t.length:0,r=0,o=[];++e<n;){var s=t[e];s&&(o[r++]=s)}return o}function Ns(){for(var t=arguments.length,e=Ku(t?t-1:0),n=arguments[0],r=t;r--;)e[r-1]=arguments[r];return t?y(Ud(n)?To(n):[n],zn(e,1)):[]}function Bs(t,e,n){var r=t?t.length:0;return r?(e=n||e===ot?1:tc(e),Yr(t,e<0?0:e,r)):[]}function js(t,e,n){var r=t?t.length:0;return r?(e=n||e===ot?1:tc(e),e=r-e,Yr(t,0,e<0?0:e)):[]}function qs(t,e){return t&&t.length?oo(t,os(e,3),!0,!0):[]}function Ls(t,e){return t&&t.length?oo(t,os(e,3),!0):[]}function Fs(t,e,n,r){var o=t?t.length:0;return o?(n&&"number"!=typeof n&&ms(t,e,n)&&(n=0,r=o),Fn(t,e,n,r)):[]}function Us(t,e,n){var r=t?t.length:0;if(!r)return-1;var o=null==n?0:tc(n);return o<0&&(o=vl(r+o,0)),w(t,os(e,3),o)}function zs(t,e,n){var r=t?t.length:0;if(!r)return-1;var o=r-1;return n!==ot&&(o=tc(n),o=n<0?vl(r+o,0):bl(o,r-1)),w(t,os(e,3),o,!0)}function Js(t){var e=t?t.length:0;return e?zn(t,1):[]}function Vs(t){var e=t?t.length:0;return e?zn(t,At):[]}function Hs(t,e){var n=t?t.length:0;return n?(e=e===ot?1:tc(e),zn(t,e)):[]}function Ws(t){for(var e=-1,n=t?t.length:0,r={};++e<n;){var o=t[e];r[o[0]]=o[1]}return r}function Ys(t){return t&&t.length?t[0]:ot}function Gs(t,e,n){var r=t?t.length:0;if(!r)return-1;var o=null==n?0:tc(n);return o<0&&(o=vl(r+o,0)),O(t,e,o)}function $s(t){var e=t?t.length:0;return e?Yr(t,0,-1):[]}function Xs(t,e){return t?kl.call(t,e):""}function Qs(t){var e=t?t.length:0;return e?t[e-1]:ot}function Zs(t,e,n){var r=t?t.length:0;if(!r)return-1;var o=r;if(n!==ot&&(o=tc(n),o=(o<0?vl(r+o,0):bl(o,r-1))+1),e!==e)return w(t,E,o-1,!0);for(;o--;)if(t[o]===e)return o;return-1}function ti(t,e){return t&&t.length?Nr(t,tc(e)):ot}function ei(t,e){return t&&t.length&&e&&e.length?Fr(t,e):t}function ni(t,e,n){return t&&t.length&&e&&e.length?Fr(t,e,os(n,2)):t}function ri(t,e,n){return t&&t.length&&e&&e.length?Fr(t,e,ot,n):t}function oi(t,e){var n=[];if(!t||!t.length)return n;var r=-1,o=[],s=t.length;for(e=os(e,3);++r<s;){var i=t[r];e(i,r,t)&&(n.push(i),o.push(r))}return Ur(t,o),n}function si(t){return t?Ol.call(t):t}function ii(t,e,n){var r=t?t.length:0;return r?(n&&"number"!=typeof n&&ms(t,e,n)?(e=0,n=r):(e=null==e?0:tc(e),n=n===ot?r:tc(n)),Yr(t,e,n)):[]}function ai(t,e){return $r(t,e)}function ci(t,e,n){return Xr(t,e,os(n,2))}function ui(t,e){var n=t?t.length:0;if(n){var r=$r(t,e);if(r<n&&_a(t[r],e))return r}return-1}function li(t,e){return $r(t,e,!0)}function di(t,e,n){return Xr(t,e,os(n,2),!0)}function fi(t,e){var n=t?t.length:0;if(n){var r=$r(t,e,!0)-1;if(_a(t[r],e))return r}return-1}function pi(t){return t&&t.length?Qr(t):[]}function hi(t,e){return t&&t.length?Qr(t,os(e,2)):[]}function gi(t){var e=t?t.length:0;return e?Yr(t,1,e):[]}function yi(t,e,n){return t&&t.length?(e=n||e===ot?1:tc(e),Yr(t,0,e<0?0:e)):[]}function mi(t,e,n){var r=t?t.length:0;return r?(e=n||e===ot?1:tc(e),e=r-e,Yr(t,e<0?0:e,r)):[]}function ki(t,e){return t&&t.length?oo(t,os(e,3),!1,!0):[]}function xi(t,e){return t&&t.length?oo(t,os(e,3)):[]}function vi(t){return t&&t.length?eo(t):[]}function bi(t,e){return t&&t.length?eo(t,os(e,2)):[]}function _i(t,e){return t&&t.length?eo(t,ot,e):[]}function wi(t){if(!t||!t.length)return[];var e=0;return t=f(t,function(t){if(Ta(t))return e=vl(t.length,e),!0}),M(e,function(e){return g(t,C(e))})}function Oi(t,e){if(!t||!t.length)return[];var n=wi(t);return null==e?n:g(n,function(t){return a(e,ot,t)})}function Ti(t,e){return ao(t||[],e||[],bn)}function Ei(t,e){return ao(t||[],e||[],Wr)}function Si(t){var n=e(t);return n.__chain__=!0,n}function Ci(t,e){return e(t),t}function Ai(t,e){return e(t)}function Ri(){return Si(this)}function Di(){return new r(this.value(),this.__chain__)}function Ii(){this.__values__===ot&&(this.__values__=Qa(this.value()));var t=this.__index__>=this.__values__.length,e=t?ot:this.__values__[this.__index__++];return{done:t,value:e}}function Mi(){return this}function Ki(t){for(var e,r=this;r instanceof n;){var o=Ms(r);o.__index__=0,o.__values__=ot,e?s.__wrapped__=o:e=o;var s=o;r=r.__wrapped__}return s.__wrapped__=t,e}function Pi(){var t=this.__wrapped__;if(t instanceof o){var e=t;return this.__actions__.length&&(e=new o(this)),e=e.reverse(),e.__actions__.push({func:Ai,args:[si],thisArg:ot}),new r(e,this.__chain__)}return this.thru(si)}function Ni(){return so(this.__wrapped__,this.__actions__)}function Bi(t,e,n){var r=Ud(t)?d:Pn;return n&&ms(t,e,n)&&(e=ot),r(t,os(e,3))}function ji(t,e){var n=Ud(t)?f:Un;return n(t,os(e,3))}function qi(t,e){return zn(Vi(t,e),1)}function Li(t,e){return zn(Vi(t,e),At)}function Fi(t,e,n){return n=n===ot?1:tc(n),zn(Vi(t,e),n)}function Ui(t,e){var n=Ud(t)?u:zl;return n(t,os(e,3))}function zi(t,e){var n=Ud(t)?l:Jl;return n(t,os(e,3))}function Ji(t,e,n,r){t=Oa(t)?t:Dc(t),n=n&&!r?tc(n):0;var o=t.length;return n<0&&(n=vl(o+n,0)),Wa(t)?n<=o&&t.indexOf(e,n)>-1:!!o&&O(t,e,n)>-1}function Vi(t,e){var n=Ud(t)?g:Dr;return n(t,os(e,3))}function Hi(t,e,n,r){return null==t?[]:(Ud(e)||(e=null==e?[]:[e]),n=r?ot:n,Ud(n)||(n=null==n?[]:[n]),Br(t,e,n))}function Wi(t,e,n){var r=Ud(t)?m:R,o=arguments.length<3;return r(t,os(e,4),n,o,zl)}function Yi(t,e,n){var r=Ud(t)?k:R,o=arguments.length<3;return r(t,os(e,4),n,o,Jl)}function Gi(t,e){var n=Ud(t)?f:Un;return n(t,ua(os(e,3)))}function $i(t){var e=Oa(t)?t:Dc(t),n=e.length;return n>0?e[zr(0,n-1)]:ot}function Xi(t,e,n){var r=-1,o=Qa(t),s=o.length,i=s-1;for(e=(n?ms(t,e,n):e===ot)?1:En(tc(e),0,s);++r<e;){var a=zr(r,i),c=o[a];o[a]=o[r],o[r]=c}return o.length=e,o}function Qi(t){return Xi(t,Mt)}function Zi(t){if(null==t)return 0;if(Oa(t))return Wa(t)?Q(t):t.length;var e=Zl(t);return e==Jt||e==Gt?t.size:Cr(t).length}function ta(t,e,n){var r=Ud(t)?x:Gr;return n&&ms(t,e,n)&&(e=ot),r(t,os(e,3))}function ea(t,e){if("function"!=typeof e)throw new Uu(at);return t=tc(t),function(){if(--t<1)return e.apply(this,arguments)}}function na(t,e,n){return e=n?ot:e,e=t&&null==e?t.length:e,$o(t,mt,ot,ot,ot,ot,e)}function ra(t,e){var n;if("function"!=typeof e)throw new Uu(at);return t=tc(t),function(){return--t>0&&(n=e.apply(this,arguments)),t<=1&&(e=ot),n}}function oa(t,e,n){e=n?ot:e;var r=$o(t,pt,ot,ot,ot,ot,ot,e);return r.placeholder=oa.placeholder,r}function sa(t,e,n){e=n?ot:e;var r=$o(t,ht,ot,ot,ot,ot,ot,e);return r.placeholder=sa.placeholder,r}function ia(t,e,n){function r(e){var n=f,r=p;return f=p=ot,k=e,g=t.apply(r,n)}function o(t){return k=t,y=nd(a,e),x?r(t):g}function s(t){var n=t-m,r=t-k,o=e-n;return v?bl(o,h-r):o}function i(t){var n=t-m,r=t-k;return m===ot||n>=e||n<0||v&&r>=h}function a(){var t=Dd();return i(t)?c(t):void(y=nd(a,s(t)))}function c(t){return y=ot,b&&f?r(t):(f=p=ot,g)}function u(){y!==ot&&Yl(y),k=0,f=m=p=y=ot}function l(){return y===ot?g:c(Dd())}function d(){var t=Dd(),n=i(t);if(f=arguments,p=this,m=t,n){if(y===ot)return o(m);if(v)return y=nd(a,e),r(m)}return y===ot&&(y=nd(a,e)),g}var f,p,h,g,y,m,k=0,x=!1,v=!1,b=!0;if("function"!=typeof t)throw new Uu(at);return e=nc(e)||0,Na(n)&&(x=!!n.leading,v="maxWait"in n,h=v?vl(nc(n.maxWait)||0,e):h,b="trailing"in n?!!n.trailing:b),d.cancel=u,d.flush=l,d}function aa(t){return $o(t,xt)}function ca(t,e){if("function"!=typeof t||e&&"function"!=typeof e)throw new Uu(at);var n=function(){var r=arguments,o=e?e.apply(this,r):r[0],s=n.cache;if(s.has(o))return s.get(o);var i=t.apply(this,r);return n.cache=s.set(o,i),i};return n.cache=new(ca.Cache||nn),n}function ua(t){if("function"!=typeof t)throw new Uu(at);return function(){var e=arguments;switch(e.length){case 0:return!t.call(this);case 1:return!t.call(this,e[0]);case 2:return!t.call(this,e[0],e[1]);case 3:return!t.call(this,e[0],e[1],e[2])}return!t.apply(this,e)}}function la(t){return ra(2,t)}function da(t,e){if("function"!=typeof t)throw new Uu(at);return e=e===ot?e:tc(e),Hr(t,e)}function fa(t,e){if("function"!=typeof t)throw new Uu(at);return e=e===ot?0:vl(tc(e),0),Hr(function(n){var r=n[e],o=fo(n,0,e);return r&&y(o,r),a(t,this,o)})}function pa(t,e,n){var r=!0,o=!0;if("function"!=typeof t)throw new Uu(at);return Na(n)&&(r="leading"in n?!!n.leading:r,o="trailing"in n?!!n.trailing:o),ia(t,e,{leading:r,maxWait:e,trailing:o})}function ha(t){return na(t,1)}function ga(t,e){return e=null==e?cu:e,Bd(e,t)}function ya(){if(!arguments.length)return[];var t=arguments[0];return Ud(t)?t:[t]}function ma(t){return Sn(t,!1,!0)}function ka(t,e){return Sn(t,!1,!0,e)}function xa(t){return Sn(t,!0,!0)}function va(t,e){return Sn(t,!0,!0,e)}function ba(t,e){return null==e||An(t,e,kc(e))}function _a(t,e){return t===e||t!==t&&e!==e}function wa(t){return Ta(t)&&Gu.call(t,"callee")&&(!al.call(t,"callee")||Qu.call(t)==Bt)}function Oa(t){return null!=t&&Pa(t.length)&&!Ma(t)}function Ta(t){return Ba(t)&&Oa(t)}function Ea(t){return t===!0||t===!1||Ba(t)&&Qu.call(t)==qt}function Sa(t){return!!t&&1===t.nodeType&&Ba(t)&&!Va(t)}function Ca(t){if(Oa(t)&&(Ud(t)||"string"==typeof t||"function"==typeof t.splice||Jd(t)||wa(t)))return!t.length;var e=Zl(t);if(e==Jt||e==Gt)return!t.size;if(Ml||_s(t))return!xl(t).length;for(var n in t)if(Gu.call(t,n))return!1;return!0}function Aa(t,e){return xr(t,e)}function Ra(t,e,n){n="function"==typeof n?n:ot;var r=n?n(t,e):ot;return r===ot?xr(t,e,n):!!r}function Da(t){return!!Ba(t)&&(Qu.call(t)==Ft||"string"==typeof t.message&&"string"==typeof t.name)}function Ia(t){return"number"==typeof t&&ml(t)}function Ma(t){var e=Na(t)?Qu.call(t):"";return e==Ut||e==zt}function Ka(t){return"number"==typeof t&&t==tc(t)}function Pa(t){return"number"==typeof t&&t>-1&&t%1==0&&t<=Rt}function Na(t){var e=typeof t;return!!t&&("object"==e||"function"==e)}function Ba(t){return!!t&&"object"==typeof t}function ja(t,e){return t===e||_r(t,e,is(e))}function qa(t,e,n){return n="function"==typeof n?n:ot,_r(t,e,is(e),n)}function La(t){return Ja(t)&&t!=+t}function Fa(t){if(td(t))throw new Nu("This method is not supported with core-js. Try https://github.com/es-shims.");return wr(t)}function Ua(t){return null===t}function za(t){return null==t}function Ja(t){return"number"==typeof t||Ba(t)&&Qu.call(t)==Vt}function Va(t){if(!Ba(t)||Qu.call(t)!=Ht||V(t))return!1;var e=ol(t);if(null===e)return!0;var n=Gu.call(e,"constructor")&&e.constructor;return"function"==typeof n&&n instanceof n&&Yu.call(n)==Xu}function Ha(t){return Ka(t)&&t>=-Rt&&t<=Rt}function Wa(t){return"string"==typeof t||!Ud(t)&&Ba(t)&&Qu.call(t)==$t}function Ya(t){return"symbol"==typeof t||Ba(t)&&Qu.call(t)==Xt}function Ga(t){return t===ot}function $a(t){return Ba(t)&&Zl(t)==Qt}function Xa(t){return Ba(t)&&Qu.call(t)==Zt}function Qa(t){if(!t)return[];if(Oa(t))return Wa(t)?Z(t):To(t);if(sl&&t[sl])return H(t[sl]());var e=Zl(t),n=e==Jt?W:e==Gt?$:Dc;return n(t)}function Za(t){if(!t)return 0===t?t:0;if(t=nc(t),t===At||t===-At){var e=t<0?-1:1;return e*Dt}return t===t?t:0}function tc(t){var e=Za(t),n=e%1;return e===e?n?e-n:e:0}function ec(t){return t?En(tc(t),0,Mt):0}function nc(t){if("number"==typeof t)return t;if(Ya(t))return It;if(Na(t)){var e="function"==typeof t.valueOf?t.valueOf():t;t=Na(e)?e+"":e}if("string"!=typeof t)return 0===t?t:+t;t=t.replace(Se,"");var n=qe.test(t);return n||Fe.test(t)?Vn(t.slice(2),n?2:8):je.test(t)?It:+t}function rc(t){return Eo(t,xc(t))}function oc(t){return En(tc(t),-Rt,Rt)}function sc(t){return null==t?"":to(t)}function ic(t,e){var n=In(t);return e?On(n,e):n}function ac(t,e){return _(t,os(e,3),Hn)}function cc(t,e){return _(t,os(e,3),Wn)}function uc(t,e){return null==t?t:Vl(t,os(e,3),xc)}function lc(t,e){return null==t?t:Hl(t,os(e,3),xc)}function dc(t,e){return t&&Hn(t,os(e,3))}function fc(t,e){return t&&Wn(t,os(e,3))}function pc(t){return null==t?[]:Gn(t,kc(t))}function hc(t){return null==t?[]:Gn(t,xc(t))}function gc(t,e,n){var r=null==t?ot:$n(t,e);return r===ot?n:r}function yc(t,e){return null!=t&&ls(t,e,dr)}function mc(t,e){return null!=t&&ls(t,e,fr)}function kc(t){return Oa(t)?kn(t):Cr(t)}function xc(t){return Oa(t)?kn(t,!0):Ar(t)}function vc(t,e){var n={};return e=os(e,3),Hn(t,function(t,r,o){n[e(t,r,o)]=t}),n}function bc(t,e){var n={};return e=os(e,3),Hn(t,function(t,r,o){n[r]=e(t,r,o)}),n}function _c(t,e){return wc(t,ua(os(e)))}function wc(t,e){return null==t?{}:qr(t,es(t),os(e))}function Oc(t,e,n){e=ks(e,t)?[e]:lo(e);var r=-1,o=e.length;for(o||(t=ot,o=1);++r<o;){var s=null==t?ot:t[Rs(e[r])];s===ot&&(r=o,s=n),t=Ma(s)?s.call(t):s}return t}function Tc(t,e,n){return null==t?t:Wr(t,e,n)}function Ec(t,e,n,r){return r="function"==typeof r?r:ot,null==t?t:Wr(t,e,n,r)}function Sc(t,e,n){var r=Ud(t)||Gd(t);if(e=os(e,4),null==n)if(r||Na(t)){var o=t.constructor;n=r?Ud(t)?new o:[]:Ma(o)?In(ol(t)):{}}else n={};return(r?u:Hn)(t,function(t,r,o){return e(n,t,r,o)}),n}function Cc(t,e){return null==t||no(t,e)}function Ac(t,e,n){return null==t?t:ro(t,e,uo(n))}function Rc(t,e,n,r){return r="function"==typeof r?r:ot,null==t?t:ro(t,e,uo(n),r)}function Dc(t){return t?N(t,kc(t)):[]}function Ic(t){return null==t?[]:N(t,xc(t))}function Mc(t,e,n){return n===ot&&(n=e,e=ot),n!==ot&&(n=nc(n),n=n===n?n:0),e!==ot&&(e=nc(e),e=e===e?e:0),En(nc(t),e,n)}function Kc(t,e,n){return e=Za(e),n===ot?(n=e,e=0):n=Za(n),t=nc(t),pr(t,e,n)}function Pc(t,e,n){if(n&&"boolean"!=typeof n&&ms(t,e,n)&&(e=n=ot),n===ot&&("boolean"==typeof e?(n=e,e=ot):"boolean"==typeof t&&(n=t,t=ot)),t===ot&&e===ot?(t=0,e=1):(t=Za(t),e===ot?(e=t,t=0):e=Za(e)),t>e){var r=t;t=e,e=r}if(n||t%1||e%1){var o=wl();return bl(t+o*(e-t+Jn("1e-"+((o+"").length-1))),e)}return zr(t,e)}function Nc(t){return _f(sc(t).toLowerCase())}function Bc(t){return t=sc(t),t&&t.replace(ze,ar).replace(Dn,"")}function jc(t,e,n){t=sc(t),e=to(e);var r=t.length;n=n===ot?r:En(tc(n),0,r);var o=n;return n-=e.length,n>=0&&t.slice(n,o)==e}function qc(t){return t=sc(t),t&&me.test(t)?t.replace(ge,cr):t}function Lc(t){return t=sc(t),t&&Ee.test(t)?t.replace(Te,"\\$&"):t}function Fc(t,e,n){t=sc(t),e=tc(e);var r=e?Q(t):0;if(!e||r>=e)return t;var o=(e-r)/2;return zo(hl(o),n)+t+zo(pl(o),n)}function Uc(t,e,n){t=sc(t),e=tc(e);var r=e?Q(t):0;return e&&r<e?t+zo(e-r,n):t}function zc(t,e,n){t=sc(t),e=tc(e);var r=e?Q(t):0;return e&&r<e?zo(e-r,n)+t:t}function Jc(t,e,n){return n||null==e?e=0:e&&(e=+e),t=sc(t).replace(Se,""),_l(t,e||(Be.test(t)?16:10))}function Vc(t,e,n){return e=(n?ms(t,e,n):e===ot)?1:tc(e),Vr(sc(t),e)}function Hc(){var t=arguments,e=sc(t[0]);return t.length<3?e:e.replace(t[1],t[2])}function Wc(t,e,n){return n&&"number"!=typeof n&&ms(t,e,n)&&(e=n=ot),(n=n===ot?Mt:n>>>0)?(t=sc(t),t&&("string"==typeof e||null!=e&&!Wd(e))&&(e=to(e),!e&&z(t))?fo(Z(t),0,n):t.split(e,n)):[]}function Yc(t,e,n){return t=sc(t),n=En(tc(n),0,t.length),e=to(e),t.slice(n,n+e.length)==e}function Gc(t,n,r){var o=e.templateSettings;r&&ms(t,n,r)&&(n=ot),t=sc(t),n=tf({},n,o,xn);var s,i,a=tf({},n.imports,o.imports,xn),c=kc(a),u=N(a,c),l=0,d=n.interpolate||Je,f="__p += '",p=Lu((n.escape||Je).source+"|"+d.source+"|"+(d===ve?Pe:Je).source+"|"+(n.evaluate||Je).source+"|$","g"),h="//# sourceURL="+("sourceURL"in n?n.sourceURL:"lodash.templateSources["+ ++Bn+"]")+"\n";t.replace(p,function(e,n,r,o,a,c){return r||(r=o),f+=t.slice(l,c).replace(Ve,F),n&&(s=!0,f+="' +\n__e("+n+") +\n'"),a&&(i=!0,f+="';\n"+a+";\n__p += '"),r&&(f+="' +\n((__t = ("+r+")) == null ? '' : __t) +\n'"),l=c+e.length,e}),f+="';\n";var g=n.variable;g||(f="with (obj) {\n"+f+"\n}\n"),f=(i?f.replace(de,""):f).replace(fe,"$1").replace(pe,"$1;"),f="function("+(g||"obj")+") {\n"+(g?"":"obj || (obj = {});\n")+"var __t, __p = ''"+(s?", __e = _.escape":"")+(i?", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n":";\n")+f+"return __p\n}";var y=wf(function(){return Bu(c,h+"return "+f).apply(ot,u)});if(y.source=f,Da(y))throw y;return y}function $c(t){return sc(t).toLowerCase()}function Xc(t){return sc(t).toUpperCase()}function Qc(t,e,n){if(t=sc(t),t&&(n||e===ot))return t.replace(Se,"");if(!t||!(e=to(e)))return t;var r=Z(t),o=Z(e),s=j(r,o),i=q(r,o)+1;return fo(r,s,i).join("")}function Zc(t,e,n){if(t=sc(t),t&&(n||e===ot))return t.replace(Ae,"");if(!t||!(e=to(e)))return t;var r=Z(t),o=q(r,Z(e))+1;return fo(r,0,o).join("")}function tu(t,e,n){if(t=sc(t),t&&(n||e===ot))return t.replace(Ce,"");if(!t||!(e=to(e)))return t;var r=Z(t),o=j(r,Z(e));return fo(r,o).join("")}function eu(t,e){var n=_t,r=wt;if(Na(e)){var o="separator"in e?e.separator:o;n="length"in e?tc(e.length):n,r="omission"in e?to(e.omission):r}t=sc(t);var s=t.length;if(z(t)){var i=Z(t);s=i.length}if(n>=s)return t;var a=n-Q(r);if(a<1)return r;var c=i?fo(i,0,a).join(""):t.slice(0,a);if(o===ot)return c+r;if(i&&(a+=c.length-a),Wd(o)){if(t.slice(a).search(o)){var u,l=c;for(o.global||(o=Lu(o.source,sc(Ne.exec(o))+"g")),o.lastIndex=0;u=o.exec(l);)var d=u.index;c=c.slice(0,d===ot?a:d)}}else if(t.indexOf(to(o),a)!=a){var f=c.lastIndexOf(o);f>-1&&(c=c.slice(0,f))}return c+r}function nu(t){return t=sc(t),t&&ye.test(t)?t.replace(he,ur):t}function ru(t,e,n){return t=sc(t),e=n?ot:e,e===ot?J(t)?nt(t):b(t):t.match(e)||[]}function ou(t){var e=t?t.length:0,n=os();return t=e?g(t,function(t){if("function"!=typeof t[1])throw new Uu(at);return[n(t[0]),t[1]]}):[],Hr(function(n){for(var r=-1;++r<e;){var o=t[r];if(a(o[0],this,n))return a(o[1],this,n)}})}function su(t){return Cn(Sn(t,!0))}function iu(t){return function(){return t}}function au(t,e){return null==t||t!==t?e:t}function cu(t){return t}function uu(t){return Sr("function"==typeof t?t:Sn(t,!0))}function lu(t){return Ir(Sn(t,!0))}function du(t,e){return Mr(t,Sn(e,!0))}function fu(t,e,n){var r=kc(e),o=Gn(e,r);null!=n||Na(e)&&(o.length||!r.length)||(n=e,e=t,t=this,o=Gn(e,kc(e)));var s=!(Na(n)&&"chain"in n&&!n.chain),i=Ma(t);return u(o,function(n){var r=e[n];t[n]=r,i&&(t.prototype[n]=function(){var e=this.__chain__;if(s||e){var n=t(this.__wrapped__),o=n.__actions__=To(this.__actions__);return o.push({func:r,args:arguments,thisArg:t}),n.__chain__=e,n}return r.apply(t,y([this.value()],arguments))})}),t}function pu(){return Yn._===this&&(Yn._=Zu),this}function hu(){}function gu(t){return t=tc(t),Hr(function(e){return Nr(e,t)})}function yu(t){return ks(t)?C(Rs(t)):Lr(t)}function mu(t){return function(e){return null==t?ot:$n(t,e)}}function ku(){return[]}function xu(){return!1}function vu(){return{}}function bu(){return""}function _u(){return!0}function wu(t,e){if(t=tc(t),t<1||t>Rt)return[];var n=Mt,r=bl(t,Mt);e=os(e),t-=Mt;for(var o=M(r,e);++n<t;)e(n);return o}function Ou(t){return Ud(t)?g(t,Rs):Ya(t)?[t]:To(od(t))}function Tu(t){var e=++$u;return sc(t)+e}function Eu(t){return t&&t.length?Ln(t,cu,ir):ot}function Su(t,e){return t&&t.length?Ln(t,os(e,2),ir):ot}function Cu(t){return S(t,cu)}function Au(t,e){return S(t,os(e,2))}function Ru(t){return t&&t.length?Ln(t,cu,Rr):ot}function Du(t,e){return t&&t.length?Ln(t,os(e,2),Rr):ot}function Iu(t){return t&&t.length?I(t,cu):0}function Mu(t,e){return t&&t.length?I(t,os(e,2)):0}t=t?lr.defaults(Yn.Object(),t,lr.pick(Yn,Nn)):Yn;var Ku=t.Array,Pu=t.Date,Nu=t.Error,Bu=t.Function,ju=t.Math,qu=t.Object,Lu=t.RegExp,Fu=t.String,Uu=t.TypeError,zu=Ku.prototype,Ju=Bu.prototype,Vu=qu.prototype,Hu=t["__core-js_shared__"],Wu=function(){var t=/[^.]+$/.exec(Hu&&Hu.keys&&Hu.keys.IE_PROTO||"");return t?"Symbol(src)_1."+t:""}(),Yu=Ju.toString,Gu=Vu.hasOwnProperty,$u=0,Xu=Yu.call(qu),Qu=Vu.toString,Zu=Yn._,tl=Lu("^"+Yu.call(Gu).replace(Te,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),el=Xn?t.Buffer:ot,nl=t.Symbol,rl=t.Uint8Array,ol=Y(qu.getPrototypeOf,qu),sl=nl?nl.iterator:ot,il=qu.create,al=Vu.propertyIsEnumerable,cl=zu.splice,ul=nl?nl.isConcatSpreadable:ot,ll=t.clearTimeout!==Yn.clearTimeout&&t.clearTimeout,dl=Pu&&Pu.now!==Yn.Date.now&&Pu.now,fl=t.setTimeout!==Yn.setTimeout&&t.setTimeout,pl=ju.ceil,hl=ju.floor,gl=qu.getOwnPropertySymbols,yl=el?el.isBuffer:ot,ml=t.isFinite,kl=zu.join,xl=Y(qu.keys,qu),vl=ju.max,bl=ju.min,_l=t.parseInt,wl=ju.random,Ol=zu.reverse,Tl=as(t,"DataView"),El=as(t,"Map"),Sl=as(t,"Promise"),Cl=as(t,"Set"),Al=as(t,"WeakMap"),Rl=as(qu,"create"),Dl=function(){var t=as(qu,"defineProperty"),e=as.name;return e&&e.length>2?t:ot}(),Il=Al&&new Al,Ml=!al.call({
valueOf:1},"valueOf"),Kl={},Pl=Ds(Tl),Nl=Ds(El),Bl=Ds(Sl),jl=Ds(Cl),ql=Ds(Al),Ll=nl?nl.prototype:ot,Fl=Ll?Ll.valueOf:ot,Ul=Ll?Ll.toString:ot;e.templateSettings={escape:ke,evaluate:xe,interpolate:ve,variable:"",imports:{_:e}},e.prototype=n.prototype,e.prototype.constructor=e,r.prototype=In(n.prototype),r.prototype.constructor=r,o.prototype=In(n.prototype),o.prototype.constructor=o,et.prototype.clear=Me,et.prototype.delete=He,et.prototype.get=We,et.prototype.has=Ye,et.prototype.set=Ge,$e.prototype.clear=Xe,$e.prototype.delete=Qe,$e.prototype.get=Ze,$e.prototype.has=tn,$e.prototype.set=en,nn.prototype.clear=rn,nn.prototype.delete=on,nn.prototype.get=sn,nn.prototype.has=an,nn.prototype.set=cn,un.prototype.add=un.prototype.push=ln,un.prototype.has=dn,fn.prototype.clear=pn,fn.prototype.delete=hn,fn.prototype.get=gn,fn.prototype.has=yn,fn.prototype.set=mn;var zl=Ro(Hn),Jl=Ro(Wn,!0),Vl=Do(),Hl=Do(!0),Wl=Il?function(t,e){return Il.set(t,e),t}:cu,Yl=ll||function(t){return Yn.clearTimeout(t)},Gl=Cl&&1/$(new Cl([,-0]))[1]==At?function(t){return new Cl(t)}:hu,$l=Il?function(t){return Il.get(t)}:hu,Xl=gl?Y(gl,qu):ku,Ql=gl?function(t){for(var e=[];t;)y(e,Xl(t)),t=ol(t);return e}:ku,Zl=Zn;(Tl&&Zl(new Tl(new ArrayBuffer(1)))!=ee||El&&Zl(new El)!=Jt||Sl&&Zl(Sl.resolve())!=Wt||Cl&&Zl(new Cl)!=Gt||Al&&Zl(new Al)!=Qt)&&(Zl=function(t){var e=Qu.call(t),n=e==Ht?t.constructor:ot,r=n?Ds(n):ot;if(r)switch(r){case Pl:return ee;case Nl:return Jt;case Bl:return Wt;case jl:return Gt;case ql:return Qt}return e});var td=Hu?Ma:xu,ed=function(){var t=0,e=0;return function(n,r){var o=Dd(),s=Tt-(o-e);if(e=o,s>0){if(++t>=Ot)return n}else t=0;return Wl(n,r)}}(),nd=fl||function(t,e){return Yn.setTimeout(t,e)},rd=Dl?function(t,e,n){var r=e+"";return Dl(t,"toString",{configurable:!0,enumerable:!1,value:iu(hs(r,Is(us(r),n)))})}:cu,od=ca(function(t){t=sc(t);var e=[];return we.test(t)&&e.push(""),t.replace(Oe,function(t,n,r,o){e.push(r?o.replace(Ke,"$1"):n||t)}),e}),sd=Hr(function(t,e){return Ta(t)?Kn(t,zn(e,1,Ta,!0)):[]}),id=Hr(function(t,e){var n=Qs(e);return Ta(n)&&(n=ot),Ta(t)?Kn(t,zn(e,1,Ta,!0),os(n,2)):[]}),ad=Hr(function(t,e){var n=Qs(e);return Ta(n)&&(n=ot),Ta(t)?Kn(t,zn(e,1,Ta,!0),ot,n):[]}),cd=Hr(function(t){var e=g(t,co);return e.length&&e[0]===t[0]?hr(e):[]}),ud=Hr(function(t){var e=Qs(t),n=g(t,co);return e===Qs(n)?e=ot:n.pop(),n.length&&n[0]===t[0]?hr(n,os(e,2)):[]}),ld=Hr(function(t){var e=Qs(t),n=g(t,co);return e===Qs(n)?e=ot:n.pop(),n.length&&n[0]===t[0]?hr(n,ot,e):[]}),dd=Hr(ei),fd=Hr(function(t,e){e=zn(e,1);var n=t?t.length:0,r=Tn(t,e);return Ur(t,g(e,function(t){return ys(t,n)?+t:t}).sort(bo)),r}),pd=Hr(function(t){return eo(zn(t,1,Ta,!0))}),hd=Hr(function(t){var e=Qs(t);return Ta(e)&&(e=ot),eo(zn(t,1,Ta,!0),os(e,2))}),gd=Hr(function(t){var e=Qs(t);return Ta(e)&&(e=ot),eo(zn(t,1,Ta,!0),ot,e)}),yd=Hr(function(t,e){return Ta(t)?Kn(t,e):[]}),md=Hr(function(t){return io(f(t,Ta))}),kd=Hr(function(t){var e=Qs(t);return Ta(e)&&(e=ot),io(f(t,Ta),os(e,2))}),xd=Hr(function(t){var e=Qs(t);return Ta(e)&&(e=ot),io(f(t,Ta),ot,e)}),vd=Hr(wi),bd=Hr(function(t){var e=t.length,n=e>1?t[e-1]:ot;return n="function"==typeof n?(t.pop(),n):ot,Oi(t,n)}),_d=Hr(function(t){t=zn(t,1);var e=t.length,n=e?t[0]:0,s=this.__wrapped__,i=function(e){return Tn(e,t)};return!(e>1||this.__actions__.length)&&s instanceof o&&ys(n)?(s=s.slice(n,+n+(e?1:0)),s.__actions__.push({func:Ai,args:[i],thisArg:ot}),new r(s,this.__chain__).thru(function(t){return e&&!t.length&&t.push(ot),t})):this.thru(i)}),wd=Co(function(t,e,n){Gu.call(t,n)?++t[n]:t[n]=1}),Od=Bo(Us),Td=Bo(zs),Ed=Co(function(t,e,n){Gu.call(t,n)?t[n].push(e):t[n]=[e]}),Sd=Hr(function(t,e,n){var r=-1,o="function"==typeof e,s=ks(e),i=Oa(t)?Ku(t.length):[];return zl(t,function(t){var c=o?e:s&&null!=t?t[e]:ot;i[++r]=c?a(c,t,n):yr(t,e,n)}),i}),Cd=Co(function(t,e,n){t[n]=e}),Ad=Co(function(t,e,n){t[n?0:1].push(e)},function(){return[[],[]]}),Rd=Hr(function(t,e){if(null==t)return[];var n=e.length;return n>1&&ms(t,e[0],e[1])?e=[]:n>2&&ms(e[0],e[1],e[2])&&(e=[e[0]]),Br(t,zn(e,1),[])}),Dd=dl||function(){return Yn.Date.now()},Id=Hr(function(t,e,n){var r=lt;if(n.length){var o=G(n,rs(Id));r|=gt}return $o(t,r,e,n,o)}),Md=Hr(function(t,e,n){var r=lt|dt;if(n.length){var o=G(n,rs(Md));r|=gt}return $o(e,r,t,n,o)}),Kd=Hr(function(t,e){return Mn(t,1,e)}),Pd=Hr(function(t,e,n){return Mn(t,nc(e)||0,n)});ca.Cache=nn;var Nd=Hr(function(t,e){e=1==e.length&&Ud(e[0])?g(e[0],P(os())):g(zn(e,1),P(os()));var n=e.length;return Hr(function(r){for(var o=-1,s=bl(r.length,n);++o<s;)r[o]=e[o].call(this,r[o]);return a(t,this,r)})}),Bd=Hr(function(t,e){var n=G(e,rs(Bd));return $o(t,gt,ot,e,n)}),jd=Hr(function(t,e){var n=G(e,rs(jd));return $o(t,yt,ot,e,n)}),qd=Hr(function(t,e){return $o(t,kt,ot,ot,ot,zn(e,1))}),Ld=Ho(ir),Fd=Ho(function(t,e){return t>=e}),Ud=Ku.isArray,zd=tr?P(tr):mr,Jd=yl||xu,Vd=er?P(er):kr,Hd=nr?P(nr):br,Wd=rr?P(rr):Or,Yd=or?P(or):Tr,Gd=sr?P(sr):Er,$d=Ho(Rr),Xd=Ho(function(t,e){return t<=e}),Qd=Ao(function(t,e){if(Ml||_s(e)||Oa(e))return void Eo(e,kc(e),t);for(var n in e)Gu.call(e,n)&&bn(t,n,e[n])}),Zd=Ao(function(t,e){Eo(e,xc(e),t)}),tf=Ao(function(t,e,n,r){Eo(e,xc(e),t,r)}),ef=Ao(function(t,e,n,r){Eo(e,kc(e),t,r)}),nf=Hr(function(t,e){return Tn(t,zn(e,1))}),rf=Hr(function(t){return t.push(ot,xn),a(tf,ot,t)}),of=Hr(function(t){return t.push(ot,Es),a(lf,ot,t)}),sf=Lo(function(t,e,n){t[e]=n},iu(cu)),af=Lo(function(t,e,n){Gu.call(t,e)?t[e].push(n):t[e]=[n]},os),cf=Hr(yr),uf=Ao(function(t,e,n){Kr(t,e,n)}),lf=Ao(function(t,e,n,r){Kr(t,e,n,r)}),df=Hr(function(t,e){return null==t?{}:(e=g(zn(e,1),Rs),jr(t,Kn(es(t),e)))}),ff=Hr(function(t,e){return null==t?{}:jr(t,g(zn(e,1),Rs))}),pf=Go(kc),hf=Go(xc),gf=Ko(function(t,e,n){return e=e.toLowerCase(),t+(n?Nc(e):e)}),yf=Ko(function(t,e,n){return t+(n?"-":"")+e.toLowerCase()}),mf=Ko(function(t,e,n){return t+(n?" ":"")+e.toLowerCase()}),kf=Mo("toLowerCase"),xf=Ko(function(t,e,n){return t+(n?"_":"")+e.toLowerCase()}),vf=Ko(function(t,e,n){return t+(n?" ":"")+_f(e)}),bf=Ko(function(t,e,n){return t+(n?" ":"")+e.toUpperCase()}),_f=Mo("toUpperCase"),wf=Hr(function(t,e){try{return a(t,ot,e)}catch(n){return Da(n)?n:new Nu(n)}}),Of=Hr(function(t,e){return u(zn(e,1),function(e){e=Rs(e),t[e]=Id(t[e],t)}),t}),Tf=jo(),Ef=jo(!0),Sf=Hr(function(t,e){return function(n){return yr(n,t,e)}}),Cf=Hr(function(t,e){return function(n){return yr(t,n,e)}}),Af=Uo(g),Rf=Uo(d),Df=Uo(x),If=Vo(),Mf=Vo(!0),Kf=Fo(function(t,e){return t+e},0),Pf=Yo("ceil"),Nf=Fo(function(t,e){return t/e},1),Bf=Yo("floor"),jf=Fo(function(t,e){return t*e},1),qf=Yo("round"),Lf=Fo(function(t,e){return t-e},0);return e.after=ea,e.ary=na,e.assign=Qd,e.assignIn=Zd,e.assignInWith=tf,e.assignWith=ef,e.at=nf,e.before=ra,e.bind=Id,e.bindAll=Of,e.bindKey=Md,e.castArray=ya,e.chain=Si,e.chunk=Ks,e.compact=Ps,e.concat=Ns,e.cond=ou,e.conforms=su,e.constant=iu,e.countBy=wd,e.create=ic,e.curry=oa,e.curryRight=sa,e.debounce=ia,e.defaults=rf,e.defaultsDeep=of,e.defer=Kd,e.delay=Pd,e.difference=sd,e.differenceBy=id,e.differenceWith=ad,e.drop=Bs,e.dropRight=js,e.dropRightWhile=qs,e.dropWhile=Ls,e.fill=Fs,e.filter=ji,e.flatMap=qi,e.flatMapDeep=Li,e.flatMapDepth=Fi,e.flatten=Js,e.flattenDeep=Vs,e.flattenDepth=Hs,e.flip=aa,e.flow=Tf,e.flowRight=Ef,e.fromPairs=Ws,e.functions=pc,e.functionsIn=hc,e.groupBy=Ed,e.initial=$s,e.intersection=cd,e.intersectionBy=ud,e.intersectionWith=ld,e.invert=sf,e.invertBy=af,e.invokeMap=Sd,e.iteratee=uu,e.keyBy=Cd,e.keys=kc,e.keysIn=xc,e.map=Vi,e.mapKeys=vc,e.mapValues=bc,e.matches=lu,e.matchesProperty=du,e.memoize=ca,e.merge=uf,e.mergeWith=lf,e.method=Sf,e.methodOf=Cf,e.mixin=fu,e.negate=ua,e.nthArg=gu,e.omit=df,e.omitBy=_c,e.once=la,e.orderBy=Hi,e.over=Af,e.overArgs=Nd,e.overEvery=Rf,e.overSome=Df,e.partial=Bd,e.partialRight=jd,e.partition=Ad,e.pick=ff,e.pickBy=wc,e.property=yu,e.propertyOf=mu,e.pull=dd,e.pullAll=ei,e.pullAllBy=ni,e.pullAllWith=ri,e.pullAt=fd,e.range=If,e.rangeRight=Mf,e.rearg=qd,e.reject=Gi,e.remove=oi,e.rest=da,e.reverse=si,e.sampleSize=Xi,e.set=Tc,e.setWith=Ec,e.shuffle=Qi,e.slice=ii,e.sortBy=Rd,e.sortedUniq=pi,e.sortedUniqBy=hi,e.split=Wc,e.spread=fa,e.tail=gi,e.take=yi,e.takeRight=mi,e.takeRightWhile=ki,e.takeWhile=xi,e.tap=Ci,e.throttle=pa,e.thru=Ai,e.toArray=Qa,e.toPairs=pf,e.toPairsIn=hf,e.toPath=Ou,e.toPlainObject=rc,e.transform=Sc,e.unary=ha,e.union=pd,e.unionBy=hd,e.unionWith=gd,e.uniq=vi,e.uniqBy=bi,e.uniqWith=_i,e.unset=Cc,e.unzip=wi,e.unzipWith=Oi,e.update=Ac,e.updateWith=Rc,e.values=Dc,e.valuesIn=Ic,e.without=yd,e.words=ru,e.wrap=ga,e.xor=md,e.xorBy=kd,e.xorWith=xd,e.zip=vd,e.zipObject=Ti,e.zipObjectDeep=Ei,e.zipWith=bd,e.entries=pf,e.entriesIn=hf,e.extend=Zd,e.extendWith=tf,fu(e,e),e.add=Kf,e.attempt=wf,e.camelCase=gf,e.capitalize=Nc,e.ceil=Pf,e.clamp=Mc,e.clone=ma,e.cloneDeep=xa,e.cloneDeepWith=va,e.cloneWith=ka,e.conformsTo=ba,e.deburr=Bc,e.defaultTo=au,e.divide=Nf,e.endsWith=jc,e.eq=_a,e.escape=qc,e.escapeRegExp=Lc,e.every=Bi,e.find=Od,e.findIndex=Us,e.findKey=ac,e.findLast=Td,e.findLastIndex=zs,e.findLastKey=cc,e.floor=Bf,e.forEach=Ui,e.forEachRight=zi,e.forIn=uc,e.forInRight=lc,e.forOwn=dc,e.forOwnRight=fc,e.get=gc,e.gt=Ld,e.gte=Fd,e.has=yc,e.hasIn=mc,e.head=Ys,e.identity=cu,e.includes=Ji,e.indexOf=Gs,e.inRange=Kc,e.invoke=cf,e.isArguments=wa,e.isArray=Ud,e.isArrayBuffer=zd,e.isArrayLike=Oa,e.isArrayLikeObject=Ta,e.isBoolean=Ea,e.isBuffer=Jd,e.isDate=Vd,e.isElement=Sa,e.isEmpty=Ca,e.isEqual=Aa,e.isEqualWith=Ra,e.isError=Da,e.isFinite=Ia,e.isFunction=Ma,e.isInteger=Ka,e.isLength=Pa,e.isMap=Hd,e.isMatch=ja,e.isMatchWith=qa,e.isNaN=La,e.isNative=Fa,e.isNil=za,e.isNull=Ua,e.isNumber=Ja,e.isObject=Na,e.isObjectLike=Ba,e.isPlainObject=Va,e.isRegExp=Wd,e.isSafeInteger=Ha,e.isSet=Yd,e.isString=Wa,e.isSymbol=Ya,e.isTypedArray=Gd,e.isUndefined=Ga,e.isWeakMap=$a,e.isWeakSet=Xa,e.join=Xs,e.kebabCase=yf,e.last=Qs,e.lastIndexOf=Zs,e.lowerCase=mf,e.lowerFirst=kf,e.lt=$d,e.lte=Xd,e.max=Eu,e.maxBy=Su,e.mean=Cu,e.meanBy=Au,e.min=Ru,e.minBy=Du,e.stubArray=ku,e.stubFalse=xu,e.stubObject=vu,e.stubString=bu,e.stubTrue=_u,e.multiply=jf,e.nth=ti,e.noConflict=pu,e.noop=hu,e.now=Dd,e.pad=Fc,e.padEnd=Uc,e.padStart=zc,e.parseInt=Jc,e.random=Pc,e.reduce=Wi,e.reduceRight=Yi,e.repeat=Vc,e.replace=Hc,e.result=Oc,e.round=qf,e.runInContext=rt,e.sample=$i,e.size=Zi,e.snakeCase=xf,e.some=ta,e.sortedIndex=ai,e.sortedIndexBy=ci,e.sortedIndexOf=ui,e.sortedLastIndex=li,e.sortedLastIndexBy=di,e.sortedLastIndexOf=fi,e.startCase=vf,e.startsWith=Yc,e.subtract=Lf,e.sum=Iu,e.sumBy=Mu,e.template=Gc,e.times=wu,e.toFinite=Za,e.toInteger=tc,e.toLength=ec,e.toLower=$c,e.toNumber=nc,e.toSafeInteger=oc,e.toString=sc,e.toUpper=Xc,e.trim=Qc,e.trimEnd=Zc,e.trimStart=tu,e.truncate=eu,e.unescape=nu,e.uniqueId=Tu,e.upperCase=bf,e.upperFirst=_f,e.each=Ui,e.eachRight=zi,e.first=Ys,fu(e,function(){var t={};return Hn(e,function(n,r){Gu.call(e.prototype,r)||(t[r]=n)}),t}(),{chain:!1}),e.VERSION=st,u(["bind","bindKey","curry","curryRight","partial","partialRight"],function(t){e[t].placeholder=e}),u(["drop","take"],function(t,e){o.prototype[t]=function(n){var r=this.__filtered__;if(r&&!e)return new o(this);n=n===ot?1:vl(tc(n),0);var s=this.clone();return r?s.__takeCount__=bl(n,s.__takeCount__):s.__views__.push({size:bl(n,Mt),type:t+(s.__dir__<0?"Right":"")}),s},o.prototype[t+"Right"]=function(e){return this.reverse()[t](e).reverse()}}),u(["filter","map","takeWhile"],function(t,e){var n=e+1,r=n==Et||n==Ct;o.prototype[t]=function(t){var e=this.clone();return e.__iteratees__.push({iteratee:os(t,3),type:n}),e.__filtered__=e.__filtered__||r,e}}),u(["head","last"],function(t,e){var n="take"+(e?"Right":"");o.prototype[t]=function(){return this[n](1).value()[0]}}),u(["initial","tail"],function(t,e){var n="drop"+(e?"":"Right");o.prototype[t]=function(){return this.__filtered__?new o(this):this[n](1)}}),o.prototype.compact=function(){return this.filter(cu)},o.prototype.find=function(t){return this.filter(t).head()},o.prototype.findLast=function(t){return this.reverse().find(t)},o.prototype.invokeMap=Hr(function(t,e){return"function"==typeof t?new o(this):this.map(function(n){return yr(n,t,e)})}),o.prototype.reject=function(t){return this.filter(ua(os(t)))},o.prototype.slice=function(t,e){t=tc(t);var n=this;return n.__filtered__&&(t>0||e<0)?new o(n):(t<0?n=n.takeRight(-t):t&&(n=n.drop(t)),e!==ot&&(e=tc(e),n=e<0?n.dropRight(-e):n.take(e-t)),n)},o.prototype.takeRightWhile=function(t){return this.reverse().takeWhile(t).reverse()},o.prototype.toArray=function(){return this.take(Mt)},Hn(o.prototype,function(t,n){var s=/^(?:filter|find|map|reject)|While$/.test(n),i=/^(?:head|last)$/.test(n),a=e[i?"take"+("last"==n?"Right":""):n],c=i||/^find/.test(n);a&&(e.prototype[n]=function(){var n=this.__wrapped__,u=i?[1]:arguments,l=n instanceof o,d=u[0],f=l||Ud(n),p=function(t){var n=a.apply(e,y([t],u));return i&&h?n[0]:n};f&&s&&"function"==typeof d&&1!=d.length&&(l=f=!1);var h=this.__chain__,g=!!this.__actions__.length,m=c&&!h,k=l&&!g;if(!c&&f){n=k?n:new o(this);var x=t.apply(n,u);return x.__actions__.push({func:Ai,args:[p],thisArg:ot}),new r(x,h)}return m&&k?t.apply(this,u):(x=this.thru(p),m?i?x.value()[0]:x.value():x)})}),u(["pop","push","shift","sort","splice","unshift"],function(t){var n=zu[t],r=/^(?:push|sort|unshift)$/.test(t)?"tap":"thru",o=/^(?:pop|shift)$/.test(t);e.prototype[t]=function(){var t=arguments;if(o&&!this.__chain__){var e=this.value();return n.apply(Ud(e)?e:[],t)}return this[r](function(e){return n.apply(Ud(e)?e:[],t)})}}),Hn(o.prototype,function(t,n){var r=e[n];if(r){var o=r.name+"",s=Kl[o]||(Kl[o]=[]);s.push({name:n,func:r})}}),Kl[qo(ot,dt).name]=[{name:"wrapper",func:ot}],o.prototype.clone=v,o.prototype.reverse=A,o.prototype.value=tt,e.prototype.at=_d,e.prototype.chain=Ri,e.prototype.commit=Di,e.prototype.next=Ii,e.prototype.plant=Ki,e.prototype.reverse=Pi,e.prototype.toJSON=e.prototype.valueOf=e.prototype.value=Ni,e.prototype.first=e.prototype.head,sl&&(e.prototype[sl]=Mi),e}var ot,st="4.15.0",it=200,at="Expected a function",ct="__lodash_hash_undefined__",ut="__lodash_placeholder__",lt=1,dt=2,ft=4,pt=8,ht=16,gt=32,yt=64,mt=128,kt=256,xt=512,vt=1,bt=2,_t=30,wt="...",Ot=150,Tt=16,Et=1,St=2,Ct=3,At=1/0,Rt=9007199254740991,Dt=1.7976931348623157e308,It=NaN,Mt=4294967295,Kt=Mt-1,Pt=Mt>>>1,Nt=[["ary",mt],["bind",lt],["bindKey",dt],["curry",pt],["curryRight",ht],["flip",xt],["partial",gt],["partialRight",yt],["rearg",kt]],Bt="[object Arguments]",jt="[object Array]",qt="[object Boolean]",Lt="[object Date]",Ft="[object Error]",Ut="[object Function]",zt="[object GeneratorFunction]",Jt="[object Map]",Vt="[object Number]",Ht="[object Object]",Wt="[object Promise]",Yt="[object RegExp]",Gt="[object Set]",$t="[object String]",Xt="[object Symbol]",Qt="[object WeakMap]",Zt="[object WeakSet]",te="[object ArrayBuffer]",ee="[object DataView]",ne="[object Float32Array]",re="[object Float64Array]",oe="[object Int8Array]",se="[object Int16Array]",ie="[object Int32Array]",ae="[object Uint8Array]",ce="[object Uint8ClampedArray]",ue="[object Uint16Array]",le="[object Uint32Array]",de=/\b__p \+= '';/g,fe=/\b(__p \+=) '' \+/g,pe=/(__e\(.*?\)|\b__t\)) \+\n'';/g,he=/&(?:amp|lt|gt|quot|#39|#96);/g,ge=/[&<>"'`]/g,ye=RegExp(he.source),me=RegExp(ge.source),ke=/<%-([\s\S]+?)%>/g,xe=/<%([\s\S]+?)%>/g,ve=/<%=([\s\S]+?)%>/g,be=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,_e=/^\w*$/,we=/^\./,Oe=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,Te=/[\\^$.*+?()[\]{}|]/g,Ee=RegExp(Te.source),Se=/^\s+|\s+$/g,Ce=/^\s+/,Ae=/\s+$/,Re=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,De=/\{\n\/\* \[wrapped with (.+)\] \*/,Ie=/,? & /,Me=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,Ke=/\\(\\)?/g,Pe=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,Ne=/\w*$/,Be=/^0x/i,je=/^[-+]0x[0-9a-f]+$/i,qe=/^0b[01]+$/i,Le=/^\[object .+?Constructor\]$/,Fe=/^0o[0-7]+$/i,Ue=/^(?:0|[1-9]\d*)$/,ze=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,Je=/($^)/,Ve=/['\n\r\u2028\u2029\\]/g,He="\\ud800-\\udfff",We="\\u0300-\\u036f\\ufe20-\\ufe23",Ye="\\u20d0-\\u20f0",Ge="\\u2700-\\u27bf",$e="a-z\\xdf-\\xf6\\xf8-\\xff",Xe="\\xac\\xb1\\xd7\\xf7",Qe="\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf",Ze="\\u2000-\\u206f",tn=" \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",en="A-Z\\xc0-\\xd6\\xd8-\\xde",nn="\\ufe0e\\ufe0f",rn=Xe+Qe+Ze+tn,on="['’]",sn="["+He+"]",an="["+rn+"]",cn="["+We+Ye+"]",un="\\d+",ln="["+Ge+"]",dn="["+$e+"]",fn="[^"+He+rn+un+Ge+$e+en+"]",pn="\\ud83c[\\udffb-\\udfff]",hn="(?:"+cn+"|"+pn+")",gn="[^"+He+"]",yn="(?:\\ud83c[\\udde6-\\uddff]){2}",mn="[\\ud800-\\udbff][\\udc00-\\udfff]",kn="["+en+"]",xn="\\u200d",vn="(?:"+dn+"|"+fn+")",bn="(?:"+kn+"|"+fn+")",_n="(?:"+on+"(?:d|ll|m|re|s|t|ve))?",wn="(?:"+on+"(?:D|LL|M|RE|S|T|VE))?",On=hn+"?",Tn="["+nn+"]?",En="(?:"+xn+"(?:"+[gn,yn,mn].join("|")+")"+Tn+On+")*",Sn=Tn+On+En,Cn="(?:"+[ln,yn,mn].join("|")+")"+Sn,An="(?:"+[gn+cn+"?",cn,yn,mn,sn].join("|")+")",Rn=RegExp(on,"g"),Dn=RegExp(cn,"g"),In=RegExp(pn+"(?="+pn+")|"+An+Sn,"g"),Mn=RegExp([kn+"?"+dn+"+"+_n+"(?="+[an,kn,"$"].join("|")+")",bn+"+"+wn+"(?="+[an,kn+vn,"$"].join("|")+")",kn+"?"+vn+"+"+_n,kn+"+"+wn,un,Cn].join("|"),"g"),Kn=RegExp("["+xn+He+We+Ye+nn+"]"),Pn=/[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,Nn=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],Bn=-1,jn={};jn[ne]=jn[re]=jn[oe]=jn[se]=jn[ie]=jn[ae]=jn[ce]=jn[ue]=jn[le]=!0,jn[Bt]=jn[jt]=jn[te]=jn[qt]=jn[ee]=jn[Lt]=jn[Ft]=jn[Ut]=jn[Jt]=jn[Vt]=jn[Ht]=jn[Yt]=jn[Gt]=jn[$t]=jn[Qt]=!1;var qn={};qn[Bt]=qn[jt]=qn[te]=qn[ee]=qn[qt]=qn[Lt]=qn[ne]=qn[re]=qn[oe]=qn[se]=qn[ie]=qn[Jt]=qn[Vt]=qn[Ht]=qn[Yt]=qn[Gt]=qn[$t]=qn[Xt]=qn[ae]=qn[ce]=qn[ue]=qn[le]=!0,qn[Ft]=qn[Ut]=qn[Qt]=!1;var Ln={"À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","Ç":"C","ç":"c","Ð":"D","ð":"d","È":"E","É":"E","Ê":"E","Ë":"E","è":"e","é":"e","ê":"e","ë":"e","Ì":"I","Í":"I","Î":"I","Ï":"I","ì":"i","í":"i","î":"i","ï":"i","Ñ":"N","ñ":"n","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","Ø":"O","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","Ù":"U","Ú":"U","Û":"U","Ü":"U","ù":"u","ú":"u","û":"u","ü":"u","Ý":"Y","ý":"y","ÿ":"y","Æ":"Ae","æ":"ae","Þ":"Th","þ":"th","ß":"ss","Ā":"A","Ă":"A","Ą":"A","ā":"a","ă":"a","ą":"a","Ć":"C","Ĉ":"C","Ċ":"C","Č":"C","ć":"c","ĉ":"c","ċ":"c","č":"c","Ď":"D","Đ":"D","ď":"d","đ":"d","Ē":"E","Ĕ":"E","Ė":"E","Ę":"E","Ě":"E","ē":"e","ĕ":"e","ė":"e","ę":"e","ě":"e","Ĝ":"G","Ğ":"G","Ġ":"G","Ģ":"G","ĝ":"g","ğ":"g","ġ":"g","ģ":"g","Ĥ":"H","Ħ":"H","ĥ":"h","ħ":"h","Ĩ":"I","Ī":"I","Ĭ":"I","Į":"I","İ":"I","ĩ":"i","ī":"i","ĭ":"i","į":"i","ı":"i","Ĵ":"J","ĵ":"j","Ķ":"K","ķ":"k","ĸ":"k","Ĺ":"L","Ļ":"L","Ľ":"L","Ŀ":"L","Ł":"L","ĺ":"l","ļ":"l","ľ":"l","ŀ":"l","ł":"l","Ń":"N","Ņ":"N","Ň":"N","Ŋ":"N","ń":"n","ņ":"n","ň":"n","ŋ":"n","Ō":"O","Ŏ":"O","Ő":"O","ō":"o","ŏ":"o","ő":"o","Ŕ":"R","Ŗ":"R","Ř":"R","ŕ":"r","ŗ":"r","ř":"r","Ś":"S","Ŝ":"S","Ş":"S","Š":"S","ś":"s","ŝ":"s","ş":"s","š":"s","Ţ":"T","Ť":"T","Ŧ":"T","ţ":"t","ť":"t","ŧ":"t","Ũ":"U","Ū":"U","Ŭ":"U","Ů":"U","Ű":"U","Ų":"U","ũ":"u","ū":"u","ŭ":"u","ů":"u","ű":"u","ų":"u","Ŵ":"W","ŵ":"w","Ŷ":"Y","ŷ":"y","Ÿ":"Y","Ź":"Z","Ż":"Z","Ž":"Z","ź":"z","ż":"z","ž":"z","Ĳ":"IJ","ĳ":"ij","Œ":"Oe","œ":"oe","ŉ":"'n","ſ":"ss"},Fn={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","`":"&#96;"},Un={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'","&#96;":"`"},zn={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},Jn=parseFloat,Vn=parseInt,Hn="object"==typeof t&&t&&t.Object===Object&&t,Wn="object"==typeof self&&self&&self.Object===Object&&self,Yn=Hn||Wn||Function("return this")(),Gn="object"==typeof e&&e&&!e.nodeType&&e,$n=Gn&&"object"==typeof o&&o&&!o.nodeType&&o,Xn=$n&&$n.exports===Gn,Qn=Xn&&Hn.process,Zn=function(){try{return Qn&&Qn.binding("util")}catch(t){}}(),tr=Zn&&Zn.isArrayBuffer,er=Zn&&Zn.isDate,nr=Zn&&Zn.isMap,rr=Zn&&Zn.isRegExp,or=Zn&&Zn.isSet,sr=Zn&&Zn.isTypedArray,ir=C("length"),ar=A(Ln),cr=A(Fn),ur=A(Un),lr=rt();Yn._=lr,r=function(){return lr}.call(e,n,e,o),!(r!==ot&&(o.exports=r))}).call(this)}).call(e,function(){return this}(),n(136)(t))},function(t,e){"function"==typeof Object.create?t.exports=function(t,e){t.super_=e,t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}})}:t.exports=function(t,e){t.super_=e;var n=function(){};n.prototype=e.prototype,t.prototype=new n,t.prototype.constructor=t}},function(t,e,n){(function(e){function r(t){return this instanceof r?(c.call(this,t),u.call(this,t),t&&t.readable===!1&&(this.readable=!1),t&&t.writable===!1&&(this.writable=!1),this.allowHalfOpen=!0,t&&t.allowHalfOpen===!1&&(this.allowHalfOpen=!1),void this.once("end",o)):new r(t)}function o(){this.allowHalfOpen||this._writableState.ended||e.nextTick(this.end.bind(this))}function s(t,e){for(var n=0,r=t.length;n<r;n++)e(t[n],n)}t.exports=r;var i=Object.keys||function(t){var e=[];for(var n in t)e.push(n);return e},a=n(42);a.inherits=n(24);var c=n(134),u=n(79);a.inherits(r,c),s(i(u.prototype),function(t){r.prototype[t]||(r.prototype[t]=u.prototype[t])})}).call(e,n(13))},function(t,e,n){"use strict";function r(){o.attachRefs(this,this._currentElement)}var o=n(350),s=(n(8),n(3),{mountComponent:function(t,e,n,o,s){var i=t.mountComponent(e,n,o,s);return t._currentElement&&null!=t._currentElement.ref&&e.getReactMountReady().enqueue(r,t),i},getHostNode:function(t){return t.getHostNode()},unmountComponent:function(t,e){o.detachRefs(t,t._currentElement),t.unmountComponent(e)},receiveComponent:function(t,e,n,s){var i=t._currentElement;if(e!==i||s!==t._context){var a=o.shouldUpdateRefs(i,e);a&&o.detachRefs(t,i),t.receiveComponent(e,n,s),a&&t._currentElement&&null!=t._currentElement.ref&&n.getReactMountReady().enqueue(r,t)}},performUpdateIfNecessary:function(t,e,n){t._updateBatchNumber===n&&t.performUpdateIfNecessary(e)}});t.exports=s},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function o(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0});var a=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),c=n(21),u=r(c);n(16);var l=n(36),d=r(l),f=n(106),p=r(f),h=n(22),g=r(h),y=n(37),m=r(y),k=n(6),x={data:new k.Map,isVoid:!1,key:null,nodes:new k.List,type:null},v=function(t){function e(){return o(this,e),s(this,Object.getPrototypeOf(e).apply(this,arguments))}return i(e,t),a(e,[{key:"kind",get:function(){return"inline"}},{key:"isEmpty",get:function(){return""==this.text}},{key:"length",get:function(){return this.text.length}},{key:"text",get:function(){return this.nodes.map(function(t){return t.text}).join("")}}],[{key:"create",value:function(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];if(t instanceof u.default)return t;if(t instanceof e)return t;if(t instanceof g.default)return t;if(!t.type)throw new Error("You must pass an inline `type`.");return t.key=t.key||(0,m.default)(4),t.data=d.default.create(t.data),t.isVoid=!!t.isVoid,t.nodes=e.createList(t.nodes),new e(t).normalize()}},{key:"createList",value:function(){var t=arguments.length<=0||void 0===arguments[0]?[]:arguments[0];return k.List.isList(t)?t:new k.List(t.map(e.create))}}]),e}(new k.Record(x));for(var b in p.default)v.prototype[b]=p.default[b];e.default=v},function(t,e,n){var r=t.exports;[n(193),n(194),n(191),n(192),n(190),n(189)].forEach(function(t){Object.keys(t).forEach(function(e){r[e]=t[e].bind(r)})})},function(t,e,n){"use strict";var r={};t.exports=r},function(t,e,n){function r(e,n){return delete t.exports[e],t.exports[e]=n,n}var o=n(115),s=n(187);t.exports={Parser:o,Tokenizer:n(116),ElementType:n(41),DomHandler:s,get FeedHandler(){return r("FeedHandler",n(216))},get Stream(){return r("Stream",n(218))},get WritableStream(){return r("WritableStream",n(117))},get ProxyHandler(){return r("ProxyHandler",n(217))},get DomUtils(){return r("DomUtils",n(28))},get CollectingHandler(){return r("CollectingHandler",n(215))},DefaultHandler:s,get RssHandler(){return r("RssHandler",this.FeedHandler)},parseDOM:function(t,e){var n=new s(e);return new o(n,e).end(t),n.dom},parseFeed:function(e,n){var r=new t.exports.FeedHandler(n);return new o(r,n).end(e),r.dom},createDomStream:function(t,e,n){var r=new s(t,e,n);return new o(r,e)},EVENTS:{attribute:2,cdatastart:0,cdataend:0,text:1,processinginstruction:2,comment:1,commentend:0,closetag:1,opentag:2,opentagname:1,error:1,end:0}}},function(t,e,n){function r(t,e,n,r){t=s(t)?t:c(t),n=n&&!r?a(n):0;var l=t.length;return n<0&&(n=u(l+n,0)),i(t)?n<=l&&t.indexOf(e,n)>-1:!!l&&o(t,e,n)>-1}var o=n(123),s=n(74),i=n(273),a=n(278),c=n(280),u=Math.max;t.exports=r},function(t,e,n){(function(t,r){"use strict";function o(){function t(){}try{var e=new Uint8Array(1);return e.foo=function(){return 42},e.constructor=t,42===e.foo()&&e.constructor===t&&"function"==typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(n){return!1}}function s(){return t.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function t(e){return this instanceof t?(t.TYPED_ARRAY_SUPPORT||(this.length=0,this.parent=void 0),"number"==typeof e?i(this,e):"string"==typeof e?a(this,e,arguments.length>1?arguments[1]:"utf8"):c(this,e)):arguments.length>1?new t(e,arguments[1]):new t(e)}function i(e,n){if(e=g(e,n<0?0:0|y(n)),!t.TYPED_ARRAY_SUPPORT)for(var r=0;r<n;r++)e[r]=0;return e}function a(t,e,n){"string"==typeof n&&""!==n||(n="utf8");var r=0|k(e,n);return t=g(t,r),t.write(e,n),t}function c(e,n){if(t.isBuffer(n))return u(e,n);if($(n))return l(e,n);if(null==n)throw new TypeError("must start with number, buffer, array or string");if("undefined"!=typeof ArrayBuffer){if(n.buffer instanceof ArrayBuffer)return d(e,n);if(n instanceof ArrayBuffer)return f(e,n)}return n.length?p(e,n):h(e,n)}function u(t,e){var n=0|y(e.length);return t=g(t,n),e.copy(t,0,0,n),t}function l(t,e){var n=0|y(e.length);t=g(t,n);for(var r=0;r<n;r+=1)t[r]=255&e[r];return t}function d(t,e){var n=0|y(e.length);t=g(t,n);for(var r=0;r<n;r+=1)t[r]=255&e[r];return t}function f(e,n){return t.TYPED_ARRAY_SUPPORT?(n.byteLength,e=t._augment(new Uint8Array(n))):e=d(e,new Uint8Array(n)),e}function p(t,e){var n=0|y(e.length);t=g(t,n);for(var r=0;r<n;r+=1)t[r]=255&e[r];return t}function h(t,e){var n,r=0;"Buffer"===e.type&&$(e.data)&&(n=e.data,r=0|y(n.length)),t=g(t,r);for(var o=0;o<r;o+=1)t[o]=255&n[o];return t}function g(e,n){t.TYPED_ARRAY_SUPPORT?(e=t._augment(new Uint8Array(n)),e.__proto__=t.prototype):(e.length=n,e._isBuffer=!0);var r=0!==n&&n<=t.poolSize>>>1;return r&&(e.parent=X),e}function y(t){if(t>=s())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+s().toString(16)+" bytes");return 0|t}function m(e,n){if(!(this instanceof m))return new m(e,n);var r=new t(e,n);return delete r.parent,r}function k(t,e){"string"!=typeof t&&(t=""+t);var n=t.length;if(0===n)return 0;for(var r=!1;;)switch(e){case"ascii":case"binary":case"raw":case"raws":return n;case"utf8":case"utf-8":return z(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return H(t).length;default:if(r)return z(t).length;e=(""+e).toLowerCase(),r=!0}}function x(t,e,n){var r=!1;if(e=0|e,n=void 0===n||n===1/0?this.length:0|n,t||(t="utf8"),e<0&&(e=0),n>this.length&&(n=this.length),n<=e)return"";for(;;)switch(t){case"hex":return D(this,e,n);case"utf8":case"utf-8":return S(this,e,n);case"ascii":return A(this,e,n);case"binary":return R(this,e,n);case"base64":return E(this,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return I(this,e,n);default:if(r)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),r=!0}}function v(t,e,n,r){n=Number(n)||0;var o=t.length-n;r?(r=Number(r),r>o&&(r=o)):r=o;var s=e.length;if(s%2!==0)throw new Error("Invalid hex string");r>s/2&&(r=s/2);for(var i=0;i<r;i++){var a=parseInt(e.substr(2*i,2),16);if(isNaN(a))throw new Error("Invalid hex string");t[n+i]=a}return i}function b(t,e,n,r){return W(z(e,t.length-n),t,n,r)}function _(t,e,n,r){return W(J(e),t,n,r)}function w(t,e,n,r){return _(t,e,n,r)}function O(t,e,n,r){return W(H(e),t,n,r)}function T(t,e,n,r){return W(V(e,t.length-n),t,n,r)}function E(t,e,n){return 0===e&&n===t.length?Y.fromByteArray(t):Y.fromByteArray(t.slice(e,n))}function S(t,e,n){n=Math.min(t.length,n);for(var r=[],o=e;o<n;){var s=t[o],i=null,a=s>239?4:s>223?3:s>191?2:1;if(o+a<=n){var c,u,l,d;switch(a){case 1:s<128&&(i=s);break;case 2:c=t[o+1],128===(192&c)&&(d=(31&s)<<6|63&c,d>127&&(i=d));break;case 3:c=t[o+1],u=t[o+2],128===(192&c)&&128===(192&u)&&(d=(15&s)<<12|(63&c)<<6|63&u,d>2047&&(d<55296||d>57343)&&(i=d));break;case 4:c=t[o+1],u=t[o+2],l=t[o+3],128===(192&c)&&128===(192&u)&&128===(192&l)&&(d=(15&s)<<18|(63&c)<<12|(63&u)<<6|63&l,d>65535&&d<1114112&&(i=d))}}null===i?(i=65533,a=1):i>65535&&(i-=65536,r.push(i>>>10&1023|55296),i=56320|1023&i),r.push(i),o+=a}return C(r)}function C(t){var e=t.length;if(e<=Q)return String.fromCharCode.apply(String,t);for(var n="",r=0;r<e;)n+=String.fromCharCode.apply(String,t.slice(r,r+=Q));return n}function A(t,e,n){var r="";n=Math.min(t.length,n);for(var o=e;o<n;o++)r+=String.fromCharCode(127&t[o]);return r}function R(t,e,n){var r="";n=Math.min(t.length,n);for(var o=e;o<n;o++)r+=String.fromCharCode(t[o]);return r}function D(t,e,n){var r=t.length;(!e||e<0)&&(e=0),(!n||n<0||n>r)&&(n=r);for(var o="",s=e;s<n;s++)o+=U(t[s]);return o}function I(t,e,n){for(var r=t.slice(e,n),o="",s=0;s<r.length;s+=2)o+=String.fromCharCode(r[s]+256*r[s+1]);return o}function M(t,e,n){if(t%1!==0||t<0)throw new RangeError("offset is not uint");if(t+e>n)throw new RangeError("Trying to access beyond buffer length")}function K(e,n,r,o,s,i){if(!t.isBuffer(e))throw new TypeError("buffer must be a Buffer instance");if(n>s||n<i)throw new RangeError("value is out of bounds");if(r+o>e.length)throw new RangeError("index out of range")}function P(t,e,n,r){e<0&&(e=65535+e+1);for(var o=0,s=Math.min(t.length-n,2);o<s;o++)t[n+o]=(e&255<<8*(r?o:1-o))>>>8*(r?o:1-o)}function N(t,e,n,r){e<0&&(e=4294967295+e+1);for(var o=0,s=Math.min(t.length-n,4);o<s;o++)t[n+o]=e>>>8*(r?o:3-o)&255}function B(t,e,n,r,o,s){if(e>o||e<s)throw new RangeError("value is out of bounds");if(n+r>t.length)throw new RangeError("index out of range");if(n<0)throw new RangeError("index out of range")}function j(t,e,n,r,o){return o||B(t,e,n,4,3.4028234663852886e38,-3.4028234663852886e38),G.write(t,e,n,r,23,4),n+4}function q(t,e,n,r,o){return o||B(t,e,n,8,1.7976931348623157e308,-1.7976931348623157e308),G.write(t,e,n,r,52,8),n+8}function L(t){if(t=F(t).replace(tt,""),t.length<2)return"";for(;t.length%4!==0;)t+="=";return t}function F(t){return t.trim?t.trim():t.replace(/^\s+|\s+$/g,"")}function U(t){return t<16?"0"+t.toString(16):t.toString(16)}function z(t,e){e=e||1/0;for(var n,r=t.length,o=null,s=[],i=0;i<r;i++){if(n=t.charCodeAt(i),n>55295&&n<57344){if(!o){if(n>56319){(e-=3)>-1&&s.push(239,191,189);continue}if(i+1===r){(e-=3)>-1&&s.push(239,191,189);continue}o=n;continue}if(n<56320){(e-=3)>-1&&s.push(239,191,189),o=n;continue}n=(o-55296<<10|n-56320)+65536}else o&&(e-=3)>-1&&s.push(239,191,189);
if(o=null,n<128){if((e-=1)<0)break;s.push(n)}else if(n<2048){if((e-=2)<0)break;s.push(n>>6|192,63&n|128)}else if(n<65536){if((e-=3)<0)break;s.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;s.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return s}function J(t){for(var e=[],n=0;n<t.length;n++)e.push(255&t.charCodeAt(n));return e}function V(t,e){for(var n,r,o,s=[],i=0;i<t.length&&!((e-=2)<0);i++)n=t.charCodeAt(i),r=n>>8,o=n%256,s.push(o),s.push(r);return s}function H(t){return Y.toByteArray(L(t))}function W(t,e,n,r){for(var o=0;o<r&&!(o+n>=e.length||o>=t.length);o++)e[o+n]=t[o];return o}var Y=n(292),G=n(295),$=n(296);e.Buffer=t,e.SlowBuffer=m,e.INSPECT_MAX_BYTES=50,t.poolSize=8192;var X={};t.TYPED_ARRAY_SUPPORT=void 0!==r.TYPED_ARRAY_SUPPORT?r.TYPED_ARRAY_SUPPORT:o(),t.TYPED_ARRAY_SUPPORT?(t.prototype.__proto__=Uint8Array.prototype,t.__proto__=Uint8Array):(t.prototype.length=void 0,t.prototype.parent=void 0),t.isBuffer=function(t){return!(null==t||!t._isBuffer)},t.compare=function(e,n){if(!t.isBuffer(e)||!t.isBuffer(n))throw new TypeError("Arguments must be Buffers");if(e===n)return 0;for(var r=e.length,o=n.length,s=0,i=Math.min(r,o);s<i&&e[s]===n[s];)++s;return s!==i&&(r=e[s],o=n[s]),r<o?-1:o<r?1:0},t.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"raw":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},t.concat=function(e,n){if(!$(e))throw new TypeError("list argument must be an Array of Buffers.");if(0===e.length)return new t(0);var r;if(void 0===n)for(n=0,r=0;r<e.length;r++)n+=e[r].length;var o=new t(n),s=0;for(r=0;r<e.length;r++){var i=e[r];i.copy(o,s),s+=i.length}return o},t.byteLength=k,t.prototype.toString=function(){var t=0|this.length;return 0===t?"":0===arguments.length?S(this,0,t):x.apply(this,arguments)},t.prototype.equals=function(e){if(!t.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===t.compare(this,e)},t.prototype.inspect=function(){var t="",n=e.INSPECT_MAX_BYTES;return this.length>0&&(t=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(t+=" ... ")),"<Buffer "+t+">"},t.prototype.compare=function(e){if(!t.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e?0:t.compare(this,e)},t.prototype.indexOf=function(e,n){function r(t,e,n){for(var r=-1,o=0;n+o<t.length;o++)if(t[n+o]===e[r===-1?0:o-r]){if(r===-1&&(r=o),o-r+1===e.length)return n+r}else r=-1;return-1}if(n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n>>=0,0===this.length)return-1;if(n>=this.length)return-1;if(n<0&&(n=Math.max(this.length+n,0)),"string"==typeof e)return 0===e.length?-1:String.prototype.indexOf.call(this,e,n);if(t.isBuffer(e))return r(this,e,n);if("number"==typeof e)return t.TYPED_ARRAY_SUPPORT&&"function"===Uint8Array.prototype.indexOf?Uint8Array.prototype.indexOf.call(this,e,n):r(this,[e],n);throw new TypeError("val must be string, number or Buffer")},t.prototype.get=function(t){return console.log(".get() is deprecated. Access using array indexes instead."),this.readUInt8(t)},t.prototype.set=function(t,e){return console.log(".set() is deprecated. Access using array indexes instead."),this.writeUInt8(t,e)},t.prototype.write=function(t,e,n,r){if(void 0===e)r="utf8",n=this.length,e=0;else if(void 0===n&&"string"==typeof e)r=e,n=this.length,e=0;else if(isFinite(e))e=0|e,isFinite(n)?(n=0|n,void 0===r&&(r="utf8")):(r=n,n=void 0);else{var o=r;r=e,e=0|n,n=o}var s=this.length-e;if((void 0===n||n>s)&&(n=s),t.length>0&&(n<0||e<0)||e>this.length)throw new RangeError("attempt to write outside buffer bounds");r||(r="utf8");for(var i=!1;;)switch(r){case"hex":return v(this,t,e,n);case"utf8":case"utf-8":return b(this,t,e,n);case"ascii":return _(this,t,e,n);case"binary":return w(this,t,e,n);case"base64":return O(this,t,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return T(this,t,e,n);default:if(i)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),i=!0}},t.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var Q=4096;t.prototype.slice=function(e,n){var r=this.length;e=~~e,n=void 0===n?r:~~n,e<0?(e+=r,e<0&&(e=0)):e>r&&(e=r),n<0?(n+=r,n<0&&(n=0)):n>r&&(n=r),n<e&&(n=e);var o;if(t.TYPED_ARRAY_SUPPORT)o=t._augment(this.subarray(e,n));else{var s=n-e;o=new t(s,(void 0));for(var i=0;i<s;i++)o[i]=this[i+e]}return o.length&&(o.parent=this.parent||this),o},t.prototype.readUIntLE=function(t,e,n){t=0|t,e=0|e,n||M(t,e,this.length);for(var r=this[t],o=1,s=0;++s<e&&(o*=256);)r+=this[t+s]*o;return r},t.prototype.readUIntBE=function(t,e,n){t=0|t,e=0|e,n||M(t,e,this.length);for(var r=this[t+--e],o=1;e>0&&(o*=256);)r+=this[t+--e]*o;return r},t.prototype.readUInt8=function(t,e){return e||M(t,1,this.length),this[t]},t.prototype.readUInt16LE=function(t,e){return e||M(t,2,this.length),this[t]|this[t+1]<<8},t.prototype.readUInt16BE=function(t,e){return e||M(t,2,this.length),this[t]<<8|this[t+1]},t.prototype.readUInt32LE=function(t,e){return e||M(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},t.prototype.readUInt32BE=function(t,e){return e||M(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},t.prototype.readIntLE=function(t,e,n){t=0|t,e=0|e,n||M(t,e,this.length);for(var r=this[t],o=1,s=0;++s<e&&(o*=256);)r+=this[t+s]*o;return o*=128,r>=o&&(r-=Math.pow(2,8*e)),r},t.prototype.readIntBE=function(t,e,n){t=0|t,e=0|e,n||M(t,e,this.length);for(var r=e,o=1,s=this[t+--r];r>0&&(o*=256);)s+=this[t+--r]*o;return o*=128,s>=o&&(s-=Math.pow(2,8*e)),s},t.prototype.readInt8=function(t,e){return e||M(t,1,this.length),128&this[t]?(255-this[t]+1)*-1:this[t]},t.prototype.readInt16LE=function(t,e){e||M(t,2,this.length);var n=this[t]|this[t+1]<<8;return 32768&n?4294901760|n:n},t.prototype.readInt16BE=function(t,e){e||M(t,2,this.length);var n=this[t+1]|this[t]<<8;return 32768&n?4294901760|n:n},t.prototype.readInt32LE=function(t,e){return e||M(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},t.prototype.readInt32BE=function(t,e){return e||M(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},t.prototype.readFloatLE=function(t,e){return e||M(t,4,this.length),G.read(this,t,!0,23,4)},t.prototype.readFloatBE=function(t,e){return e||M(t,4,this.length),G.read(this,t,!1,23,4)},t.prototype.readDoubleLE=function(t,e){return e||M(t,8,this.length),G.read(this,t,!0,52,8)},t.prototype.readDoubleBE=function(t,e){return e||M(t,8,this.length),G.read(this,t,!1,52,8)},t.prototype.writeUIntLE=function(t,e,n,r){t=+t,e=0|e,n=0|n,r||K(this,t,e,n,Math.pow(2,8*n),0);var o=1,s=0;for(this[e]=255&t;++s<n&&(o*=256);)this[e+s]=t/o&255;return e+n},t.prototype.writeUIntBE=function(t,e,n,r){t=+t,e=0|e,n=0|n,r||K(this,t,e,n,Math.pow(2,8*n),0);var o=n-1,s=1;for(this[e+o]=255&t;--o>=0&&(s*=256);)this[e+o]=t/s&255;return e+n},t.prototype.writeUInt8=function(e,n,r){return e=+e,n=0|n,r||K(this,e,n,1,255,0),t.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[n]=255&e,n+1},t.prototype.writeUInt16LE=function(e,n,r){return e=+e,n=0|n,r||K(this,e,n,2,65535,0),t.TYPED_ARRAY_SUPPORT?(this[n]=255&e,this[n+1]=e>>>8):P(this,e,n,!0),n+2},t.prototype.writeUInt16BE=function(e,n,r){return e=+e,n=0|n,r||K(this,e,n,2,65535,0),t.TYPED_ARRAY_SUPPORT?(this[n]=e>>>8,this[n+1]=255&e):P(this,e,n,!1),n+2},t.prototype.writeUInt32LE=function(e,n,r){return e=+e,n=0|n,r||K(this,e,n,4,4294967295,0),t.TYPED_ARRAY_SUPPORT?(this[n+3]=e>>>24,this[n+2]=e>>>16,this[n+1]=e>>>8,this[n]=255&e):N(this,e,n,!0),n+4},t.prototype.writeUInt32BE=function(e,n,r){return e=+e,n=0|n,r||K(this,e,n,4,4294967295,0),t.TYPED_ARRAY_SUPPORT?(this[n]=e>>>24,this[n+1]=e>>>16,this[n+2]=e>>>8,this[n+3]=255&e):N(this,e,n,!1),n+4},t.prototype.writeIntLE=function(t,e,n,r){if(t=+t,e=0|e,!r){var o=Math.pow(2,8*n-1);K(this,t,e,n,o-1,-o)}var s=0,i=1,a=t<0?1:0;for(this[e]=255&t;++s<n&&(i*=256);)this[e+s]=(t/i>>0)-a&255;return e+n},t.prototype.writeIntBE=function(t,e,n,r){if(t=+t,e=0|e,!r){var o=Math.pow(2,8*n-1);K(this,t,e,n,o-1,-o)}var s=n-1,i=1,a=t<0?1:0;for(this[e+s]=255&t;--s>=0&&(i*=256);)this[e+s]=(t/i>>0)-a&255;return e+n},t.prototype.writeInt8=function(e,n,r){return e=+e,n=0|n,r||K(this,e,n,1,127,-128),t.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[n]=255&e,n+1},t.prototype.writeInt16LE=function(e,n,r){return e=+e,n=0|n,r||K(this,e,n,2,32767,-32768),t.TYPED_ARRAY_SUPPORT?(this[n]=255&e,this[n+1]=e>>>8):P(this,e,n,!0),n+2},t.prototype.writeInt16BE=function(e,n,r){return e=+e,n=0|n,r||K(this,e,n,2,32767,-32768),t.TYPED_ARRAY_SUPPORT?(this[n]=e>>>8,this[n+1]=255&e):P(this,e,n,!1),n+2},t.prototype.writeInt32LE=function(e,n,r){return e=+e,n=0|n,r||K(this,e,n,4,2147483647,-2147483648),t.TYPED_ARRAY_SUPPORT?(this[n]=255&e,this[n+1]=e>>>8,this[n+2]=e>>>16,this[n+3]=e>>>24):N(this,e,n,!0),n+4},t.prototype.writeInt32BE=function(e,n,r){return e=+e,n=0|n,r||K(this,e,n,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),t.TYPED_ARRAY_SUPPORT?(this[n]=e>>>24,this[n+1]=e>>>16,this[n+2]=e>>>8,this[n+3]=255&e):N(this,e,n,!1),n+4},t.prototype.writeFloatLE=function(t,e,n){return j(this,t,e,!0,n)},t.prototype.writeFloatBE=function(t,e,n){return j(this,t,e,!1,n)},t.prototype.writeDoubleLE=function(t,e,n){return q(this,t,e,!0,n)},t.prototype.writeDoubleBE=function(t,e,n){return q(this,t,e,!1,n)},t.prototype.copy=function(e,n,r,o){if(r||(r=0),o||0===o||(o=this.length),n>=e.length&&(n=e.length),n||(n=0),o>0&&o<r&&(o=r),o===r)return 0;if(0===e.length||0===this.length)return 0;if(n<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("sourceStart out of bounds");if(o<0)throw new RangeError("sourceEnd out of bounds");o>this.length&&(o=this.length),e.length-n<o-r&&(o=e.length-n+r);var s,i=o-r;if(this===e&&r<n&&n<o)for(s=i-1;s>=0;s--)e[s+n]=this[s+r];else if(i<1e3||!t.TYPED_ARRAY_SUPPORT)for(s=0;s<i;s++)e[s+n]=this[s+r];else e._set(this.subarray(r,r+i),n);return i},t.prototype.fill=function(t,e,n){if(t||(t=0),e||(e=0),n||(n=this.length),n<e)throw new RangeError("end < start");if(n!==e&&0!==this.length){if(e<0||e>=this.length)throw new RangeError("start out of bounds");if(n<0||n>this.length)throw new RangeError("end out of bounds");var r;if("number"==typeof t)for(r=e;r<n;r++)this[r]=t;else{var o=z(t.toString()),s=o.length;for(r=e;r<n;r++)this[r]=o[r%s]}return this}},t.prototype.toArrayBuffer=function(){if("undefined"!=typeof Uint8Array){if(t.TYPED_ARRAY_SUPPORT)return new t(this).buffer;for(var e=new Uint8Array(this.length),n=0,r=e.length;n<r;n+=1)e[n]=this[n];return e.buffer}throw new TypeError("Buffer.toArrayBuffer not supported in this browser")};var Z=t.prototype;t._augment=function(e){return e.constructor=t,e._isBuffer=!0,e._set=e.set,e.get=Z.get,e.set=Z.set,e.write=Z.write,e.toString=Z.toString,e.toLocaleString=Z.toString,e.toJSON=Z.toJSON,e.equals=Z.equals,e.compare=Z.compare,e.indexOf=Z.indexOf,e.copy=Z.copy,e.slice=Z.slice,e.readUIntLE=Z.readUIntLE,e.readUIntBE=Z.readUIntBE,e.readUInt8=Z.readUInt8,e.readUInt16LE=Z.readUInt16LE,e.readUInt16BE=Z.readUInt16BE,e.readUInt32LE=Z.readUInt32LE,e.readUInt32BE=Z.readUInt32BE,e.readIntLE=Z.readIntLE,e.readIntBE=Z.readIntBE,e.readInt8=Z.readInt8,e.readInt16LE=Z.readInt16LE,e.readInt16BE=Z.readInt16BE,e.readInt32LE=Z.readInt32LE,e.readInt32BE=Z.readInt32BE,e.readFloatLE=Z.readFloatLE,e.readFloatBE=Z.readFloatBE,e.readDoubleLE=Z.readDoubleLE,e.readDoubleBE=Z.readDoubleBE,e.writeUInt8=Z.writeUInt8,e.writeUIntLE=Z.writeUIntLE,e.writeUIntBE=Z.writeUIntBE,e.writeUInt16LE=Z.writeUInt16LE,e.writeUInt16BE=Z.writeUInt16BE,e.writeUInt32LE=Z.writeUInt32LE,e.writeUInt32BE=Z.writeUInt32BE,e.writeIntLE=Z.writeIntLE,e.writeIntBE=Z.writeIntBE,e.writeInt8=Z.writeInt8,e.writeInt16LE=Z.writeInt16LE,e.writeInt16BE=Z.writeInt16BE,e.writeInt32LE=Z.writeInt32LE,e.writeInt32BE=Z.writeInt32BE,e.writeFloatLE=Z.writeFloatLE,e.writeFloatBE=Z.writeFloatBE,e.writeDoubleLE=Z.writeDoubleLE,e.writeDoubleBE=Z.writeDoubleBE,e.fill=Z.fill,e.inspect=Z.inspect,e.toArrayBuffer=Z.toArrayBuffer,e};var tt=/[^+\/0-9A-Za-z-_]/g}).call(e,n(32).Buffer,function(){return this}())},function(t,e,n){"use strict";function r(t){if(y){var e=t.node,n=t.children;if(n.length)for(var r=0;r<n.length;r++)m(e,n[r],null);else null!=t.html?d(e,t.html):null!=t.text&&p(e,t.text)}}function o(t,e){t.parentNode.replaceChild(e.node,t),r(e)}function s(t,e){y?t.children.push(e):t.node.appendChild(e.node)}function i(t,e){y?t.html=e:d(t.node,e)}function a(t,e){y?t.text=e:p(t.node,e)}function c(){return this.node.nodeName}function u(t){return{node:t,children:[],html:null,text:null,toString:c}}var l=n(81),d=n(64),f=n(96),p=n(166),h=1,g=11,y="undefined"!=typeof document&&"number"==typeof document.documentMode||"undefined"!=typeof navigator&&"string"==typeof navigator.userAgent&&/\bEdge\/\d/.test(navigator.userAgent),m=f(function(t,e,n){e.node.nodeType===g||e.node.nodeType===h&&"object"===e.node.nodeName.toLowerCase()&&(null==e.node.namespaceURI||e.node.namespaceURI===l.html)?(r(e),t.insertBefore(e.node,n)):(t.insertBefore(e.node,n),r(e))});u.insertTreeBefore=m,u.replaceChildWithTree=o,u.queueChild=s,u.queueHTML=i,u.queueText=a,t.exports=u},function(t,e,n){"use strict";function r(t,e){return(t&e)===e}var o=n(2),s=(n(1),{MUST_USE_PROPERTY:1,HAS_BOOLEAN_VALUE:4,HAS_NUMERIC_VALUE:8,HAS_POSITIVE_NUMERIC_VALUE:24,HAS_OVERLOADED_BOOLEAN_VALUE:32,injectDOMPropertyConfig:function(t){var e=s,n=t.Properties||{},i=t.DOMAttributeNamespaces||{},c=t.DOMAttributeNames||{},u=t.DOMPropertyNames||{},l=t.DOMMutationMethods||{};t.isCustomAttribute&&a._isCustomAttributeFunctions.push(t.isCustomAttribute);for(var d in n){a.properties.hasOwnProperty(d)?o("48",d):void 0;var f=d.toLowerCase(),p=n[d],h={attributeName:f,attributeNamespace:null,propertyName:d,mutationMethod:null,mustUseProperty:r(p,e.MUST_USE_PROPERTY),hasBooleanValue:r(p,e.HAS_BOOLEAN_VALUE),hasNumericValue:r(p,e.HAS_NUMERIC_VALUE),hasPositiveNumericValue:r(p,e.HAS_POSITIVE_NUMERIC_VALUE),hasOverloadedBooleanValue:r(p,e.HAS_OVERLOADED_BOOLEAN_VALUE)};if(h.hasBooleanValue+h.hasNumericValue+h.hasOverloadedBooleanValue<=1?void 0:o("50",d),c.hasOwnProperty(d)){var g=c[d];h.attributeName=g}i.hasOwnProperty(d)&&(h.attributeNamespace=i[d]),u.hasOwnProperty(d)&&(h.propertyName=u[d]),l.hasOwnProperty(d)&&(h.mutationMethod=l[d]),a.properties[d]=h}}}),i=":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD",a={ID_ATTRIBUTE_NAME:"data-reactid",ROOT_ATTRIBUTE_NAME:"data-reactroot",ATTRIBUTE_NAME_START_CHAR:i,ATTRIBUTE_NAME_CHAR:i+"\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040",properties:{},getPossibleStandardName:null,_isCustomAttributeFunctions:[],isCustomAttribute:function(t){for(var e=0;e<a._isCustomAttributeFunctions.length;e++){var n=a._isCustomAttributeFunctions[e];if(n(t))return!0}return!1},injection:s};t.exports=a},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function o(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0});var a=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),c=n(17),u=r(c),l=n(6),d=new l.Record({marks:new l.Set,text:""}),f=function(t){function e(){return o(this,e),s(this,Object.getPrototypeOf(e).apply(this,arguments))}return i(e,t),a(e,[{key:"kind",get:function(){return"character"}}],[{key:"create",value:function(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];return t instanceof e?t:(t.marks=u.default.createSet(t.marks),new e(t))}},{key:"createList",value:function(){var t=arguments.length<=0||void 0===arguments[0]?[]:arguments[0];return l.List.isList(t)?t:new l.List(t.map(e.create))}}]),e}(d);e.default=f},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=n(6),o={create:function(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];return r.Map.isMap(t)?t:new r.Map(t)}};e.default=o},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function o(){return(0,i.default)(4)}Object.defineProperty(e,"__esModule",{value:!0});var s=n(393),i=r(s);e.default=o},function(t,e){t.exports={trueFunc:function(){return!0},falseFunc:function(){return!1}}},function(t,e,n){var r=n(52),o=n(70),s={tag:!0,script:!0,style:!0};e.isTag=function(t){return t.type&&(t=t.type),s[t]||!1},e.camelCase=function(t){return t.replace(/[_.-](\w|$)/g,function(t,e){return e.toUpperCase()})},e.cssCase=function(t){return t.replace(/[A-Z]/g,"-$&").toLowerCase()},e.domEach=function(t,e){for(var n=0,r=t.length;n<r&&e.call(t,n,t[n])!==!1;)++n;return t},e.cloneDom=function(t,e){return r(o(t,e),e).children};var i=/^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/;e.isHtml=function(t){if("<"===t.charAt(0)&&">"===t.charAt(t.length-1)&&t.length>=3)return!0;var e=i.exec(t);return!(!e||!e[1])}},function(t,e,n){function r(){return"WebkitAppearance"in document.documentElement.style||window.console&&(console.firebug||console.exception&&console.table)||navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31}function o(){var t=arguments,n=this.useColors;if(t[0]=(n?"%c":"")+this.namespace+(n?" %c":" ")+t[0]+(n?"%c ":" ")+"+"+e.humanize(this.diff),!n)return t;var r="color: "+this.color;t=[t[0],r,"color: inherit"].concat(Array.prototype.slice.call(t,1));var o=0,s=0;return t[0].replace(/%[a-z%]/g,function(t){"%%"!==t&&(o++,"%c"===t&&(s=o))}),t.splice(s,0,r),t}function s(){return"object"==typeof console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)}function i(t){try{null==t?e.storage.removeItem("debug"):e.storage.debug=t}catch(n){}}function a(){var t;try{t=e.storage.debug}catch(n){}return t}function c(){try{return window.localStorage}catch(t){}}e=t.exports=n(182),e.log=s,e.formatArgs=o,e.save=i,e.load=a,e.useColors=r,e.storage="undefined"!=typeof chrome&&"undefined"!=typeof chrome.storage?chrome.storage.local:c(),e.colors=["lightseagreen","forestgreen","goldenrod","dodgerblue","darkorchid","crimson"],e.formatters.j=function(t){return JSON.stringify(t)},e.enable(a())},function(t,e){t.exports={Text:"text",Directive:"directive",Comment:"comment",Script:"script",Style:"style",Tag:"tag",CDATA:"cdata",Doctype:"doctype",isTag:function(t){return"tag"===t.type||"script"===t.type||"style"===t.type}}},function(t,e,n){(function(t){function n(t){return Array.isArray?Array.isArray(t):"[object Array]"===y(t)}function r(t){return"boolean"==typeof t}function o(t){return null===t}function s(t){return null==t}function i(t){return"number"==typeof t}function a(t){return"string"==typeof t}function c(t){return"symbol"==typeof t}function u(t){return void 0===t}function l(t){return"[object RegExp]"===y(t)}function d(t){return"object"==typeof t&&null!==t}function f(t){return"[object Date]"===y(t)}function p(t){return"[object Error]"===y(t)||t instanceof Error}function h(t){return"function"==typeof t}function g(t){return null===t||"boolean"==typeof t||"number"==typeof t||"string"==typeof t||"symbol"==typeof t||"undefined"==typeof t}function y(t){return Object.prototype.toString.call(t)}e.isArray=n,e.isBoolean=r,e.isNull=o,e.isNullOrUndefined=s,e.isNumber=i,e.isString=a,e.isSymbol=c,e.isUndefined=u,e.isRegExp=l,e.isObject=d,e.isDate=f,e.isError=p,e.isFunction=h,e.isPrimitive=g,e.isBuffer=t.isBuffer}).call(e,n(32).Buffer)},function(t,e,n){function r(){o.call(this)}t.exports=r;var o=n(77).EventEmitter,s=n(24);s(r,o),r.Readable=n(310),r.Writable=n(312),r.Duplex=n(308),r.Transform=n(311),r.PassThrough=n(309),r.Stream=r,r.prototype.pipe=function(t,e){function n(e){t.writable&&!1===t.write(e)&&u.pause&&u.pause()}function r(){u.readable&&u.resume&&u.resume()}function s(){l||(l=!0,t.end())}function i(){l||(l=!0,"function"==typeof t.destroy&&t.destroy())}function a(t){if(c(),0===o.listenerCount(this,"error"))throw t}function c(){u.removeListener("data",n),t.removeListener("drain",r),u.removeListener("end",s),u.removeListener("close",i),u.removeListener("error",a),t.removeListener("error",a),u.removeListener("end",c),u.removeListener("close",c),t.removeListener("close",c)}var u=this;u.on("data",n),t.on("drain",r),t._isStdio||e&&e.end===!1||(u.on("end",s),u.on("close",i));var l=!1;return u.on("error",a),t.on("error",a),u.on("end",c),u.on("close",c),t.on("close",c),t.emit("pipe",u),t}},function(t,e,n){"use strict";var r=n(2),o=n(82),s=n(83),i=n(89),a=n(159),c=n(161),u=(n(1),{}),l=null,d=function(t,e){t&&(s.executeDispatchesInOrder(t,e),t.isPersistent()||t.constructor.release(t))},f=function(t){return d(t,!0)},p=function(t){return d(t,!1)},h=function(t){return"."+t._rootNodeID},g={injection:{injectEventPluginOrder:o.injectEventPluginOrder,injectEventPluginsByName:o.injectEventPluginsByName},putListener:function(t,e,n){"function"!=typeof n?r("94",e,typeof n):void 0;var s=h(t),i=u[e]||(u[e]={});i[s]=n;var a=o.registrationNameModules[e];a&&a.didPutListener&&a.didPutListener(t,e,n)},getListener:function(t,e){var n=u[e],r=h(t);return n&&n[r]},deleteListener:function(t,e){var n=o.registrationNameModules[e];n&&n.willDeleteListener&&n.willDeleteListener(t,e);var r=u[e];if(r){var s=h(t);delete r[s]}},deleteAllListeners:function(t){var e=h(t);for(var n in u)if(u.hasOwnProperty(n)&&u[n][e]){var r=o.registrationNameModules[n];r&&r.willDeleteListener&&r.willDeleteListener(t,n),delete u[n][e]}},extractEvents:function(t,e,n,r){for(var s,i=o.plugins,c=0;c<i.length;c++){var u=i[c];if(u){var l=u.extractEvents(t,e,n,r);l&&(s=a(s,l))}}return s},enqueueEvents:function(t){t&&(l=a(l,t))},processEventQueue:function(t){var e=l;l=null,t?c(e,f):c(e,p),l?r("95"):void 0,i.rethrowCaughtError()},__purge:function(){u={}},__getListenerBank:function(){return u}};t.exports=g},function(t,e,n){"use strict";function r(t,e,n){var r=e.dispatchConfig.phasedRegistrationNames[n];return x(t,r)}function o(t,e,n){var o=e?k.bubbled:k.captured,s=r(t,n,o);s&&(n._dispatchListeners=y(n._dispatchListeners,s),n._dispatchInstances=y(n._dispatchInstances,t))}function s(t){t&&t.dispatchConfig.phasedRegistrationNames&&g.traverseTwoPhase(t._targetInst,o,t)}function i(t){if(t&&t.dispatchConfig.phasedRegistrationNames){var e=t._targetInst,n=e?g.getParentInstance(e):null;g.traverseTwoPhase(n,o,t)}}function a(t,e,n){if(n&&n.dispatchConfig.registrationName){var r=n.dispatchConfig.registrationName,o=x(t,r);o&&(n._dispatchListeners=y(n._dispatchListeners,o),n._dispatchInstances=y(n._dispatchInstances,t))}}function c(t){t&&t.dispatchConfig.registrationName&&a(t._targetInst,null,t)}function u(t){m(t,s)}function l(t){m(t,i)}function d(t,e,n,r){g.traverseEnterLeave(n,r,a,t,e)}function f(t){m(t,c)}var p=n(14),h=n(44),g=n(83),y=n(159),m=n(161),k=(n(3),p.PropagationPhases),x=h.getListener,v={accumulateTwoPhaseDispatches:u,accumulateTwoPhaseDispatchesSkipTarget:l,accumulateDirectDispatches:f,accumulateEnterLeaveDispatches:d};t.exports=v},function(t,e){"use strict";var n={remove:function(t){t._reactInternalInstance=void 0},get:function(t){return t._reactInternalInstance},has:function(t){return void 0!==t._reactInternalInstance},set:function(t,e){t._reactInternalInstance=e}};t.exports=n},function(t,e,n){"use strict";function r(t,e,n,r){return o.call(this,t,e,n,r)}var o=n(15),s=n(99),i={view:function(t){if(t.view)return t.view;var e=s(t);if(e.window===e)return e;var n=e.ownerDocument;return n?n.defaultView||n.parentWindow:window},detail:function(t){return t.detail||0}};o.augmentClass(r,i),t.exports=r},function(t,e,n){"use strict";var r=n(2),o=(n(1),{reinitializeTransaction:function(){this.transactionWrappers=this.getTransactionWrappers(),this.wrapperInitData?this.wrapperInitData.length=0:this.wrapperInitData=[],this._isInTransaction=!1},_isInTransaction:!1,getTransactionWrappers:null,isInTransaction:function(){return!!this._isInTransaction},perform:function(t,e,n,o,s,i,a,c){this.isInTransaction()?r("27"):void 0;var u,l;try{this._isInTransaction=!0,u=!0,this.initializeAll(0),l=t.call(e,n,o,s,i,a,c),u=!1}finally{try{if(u)try{this.closeAll(0)}catch(d){}else this.closeAll(0)}finally{this._isInTransaction=!1}}return l},initializeAll:function(t){for(var e=this.transactionWrappers,n=t;n<e.length;n++){var r=e[n];try{this.wrapperInitData[n]=s.OBSERVED_ERROR,this.wrapperInitData[n]=r.initialize?r.initialize.call(this):null}finally{if(this.wrapperInitData[n]===s.OBSERVED_ERROR)try{this.initializeAll(n+1)}catch(o){}}}},closeAll:function(t){this.isInTransaction()?void 0:r("28");for(var e=this.transactionWrappers,n=t;n<e.length;n++){var o,i=e[n],a=this.wrapperInitData[n];try{o=!0,a!==s.OBSERVED_ERROR&&i.close&&i.close.call(this,a),o=!1}finally{if(o)try{this.closeAll(n+1)}catch(c){}}}this.wrapperInitData.length=0}}),s={Mixin:o,OBSERVED_ERROR:{}};t.exports=s},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function o(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0});var a=function(){function t(t,e){var n=[],r=!0,o=!1,s=void 0;try{for(var i,a=t[Symbol.iterator]();!(r=(i=a.next()).done)&&(n.push(i.value),!e||n.length!==e);r=!0);}catch(c){o=!0,s=c}finally{try{!r&&a.return&&a.return()}finally{if(o)throw s}}return n}return function(e,n){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),c=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),u=n(31),l=r(u),d=n(51),f=r(d),p=n(6),h=["collapseTo%"],g=["has%AtStartOf","has%AtEndOf","has%Between","has%In"],y={anchorKey:null,anchorOffset:0,focusKey:null,focusOffset:0,isBackward:null,isFocused:!1},m=function(t){function e(){return o(this,e),s(this,Object.getPrototypeOf(e).apply(this,arguments))}return i(e,t),c(e,[{key:"hasAnchorAtStartOf",value:function(t){if(0!=this.anchorOffset)return!1;var e="text"==t.kind?t:t.getTexts().first();return this.anchorKey==e.key}},{key:"hasAnchorAtEndOf",value:function(t){var e="text"==t.kind?t:t.getTexts().last();return this.anchorKey==e.key&&this.anchorOffset==e.length}},{key:"hasAnchorBetween",value:function(t,e,n){return this.anchorOffset<=n&&e<=this.anchorOffset&&this.hasAnchorIn(t)}},{key:"hasAnchorIn",value:function(t){var e=this,n="text"==t.kind?[t]:t.getTexts();return n.some(function(t){return t.key==e.anchorKey})}},{key:"hasFocusAtEndOf",value:function(t){var e="text"==t.kind?t:t.getTexts().last();return this.focusKey==e.key&&this.focusOffset==e.length}},{key:"hasFocusAtStartOf",value:function(t){if(0!=this.focusOffset)return!1;var e="text"==t.kind?t:t.getTexts().first();return this.focusKey==e.key}},{key:"hasFocusBetween",value:function(t,e,n){return e<=this.focusOffset&&this.focusOffset<=n&&this.hasFocusIn(t)}},{key:"hasFocusIn",value:function(t){var e=this,n="text"==t.kind?[t]:t.getTexts();return n.some(function(t){return t.key==e.focusKey})}},{key:"isAtStartOf",value:function(t){var e=this.isExpanded,n=this.startKey,r=this.startOffset;if(e)return!1;if(0!=r)return!1;var o="text"==t.kind?t:t.getTexts().first();return n==o.key}},{key:"isAtEndOf",value:function(t){var e=this.endKey,n=this.endOffset,r=this.isExpanded;if(r)return!1;var o="text"==t.kind?t:t.getTexts().last();return e==o.key&&n==o.length}},{key:"normalize",value:function(t){var e=this,n=(e.isCollapsed,e.anchorKey),r=e.anchorOffset,o=e.focusKey,s=e.focusOffset,i=e.isBackward;if(null==n||null==o||!t.hasDescendant(n)||!t.hasDescendant(o)){var a=t.getTexts().first();return e.merge({anchorKey:a.key,anchorOffset:0,focusKey:a.key,focusOffset:0,isBackward:!1})}var c=t.getDescendant(n),u=t.getDescendant(o);if("text"!=c.kind){var l=c.getTextAtOffset(r),d=c.getOffset(l);r-=d,c=l}if("text"!=u.kind){var f=u.getTextAtOffset(s),p=u.getOffset(f);s-=p,u=f}if(null==i){var h=t.getTexts(),g=h.indexOf(c),y=h.indexOf(u);i=g==y?r>s:g>y}return e.merge({anchorKey:c.key,anchorOffset:r,focusKey:u.key,focusOffset:s,isBackward:i})}},{key:"focus",value:function(){return this.merge({isFocused:!0})}},{key:"blur",value:function(){return this.merge({isFocused:!1})}},{key:"collapseToAnchor",value:function(){return this.merge({focusKey:this.anchorKey,focusOffset:this.anchorOffset,isBackward:!1})}},{key:"collapseToFocus",value:function(){return this.merge({anchorKey:this.focusKey,anchorOffset:this.focusOffset,isBackward:!1})}},{key:"collapseToStartOf",value:function(t){return this.merge({anchorKey:t.key,anchorOffset:0,focusKey:t.key,focusOffset:0,isBackward:!1})}},{key:"collapseToEndOf",value:function(t){return this.merge({anchorKey:t.key,anchorOffset:t.length,focusKey:t.key,focusOffset:t.length,isBackward:!1})}},{key:"moveToRangeOf",value:function(t){var e=arguments.length<=1||void 0===arguments[1]?t:arguments[1];return this.merge({anchorKey:t.key,anchorOffset:0,focusKey:e.key,focusOffset:e.length,isBackward:t!=e&&null})}},{key:"moveForward",value:function(){var t=arguments.length<=0||void 0===arguments[0]?1:arguments[0];return this.merge({anchorOffset:this.anchorOffset+t,focusOffset:this.focusOffset+t})}},{key:"moveBackward",value:function(){var t=arguments.length<=0||void 0===arguments[0]?1:arguments[0];return this.merge({anchorOffset:this.anchorOffset-t,focusOffset:this.focusOffset-t})}},{key:"moveToOffsets",value:function(t){var e=arguments.length<=1||void 0===arguments[1]?t:arguments[1];return this.merge({anchorOffset:t,focusOffset:e,isBackward:null})}},{key:"extendForward",value:function(){var t=arguments.length<=0||void 0===arguments[0]?1:arguments[0];return this.merge({focusOffset:this.focusOffset+t,isBackward:null})}},{key:"extendBackward",value:function(){var t=arguments.length<=0||void 0===arguments[0]?1:arguments[0];return this.merge({focusOffset:this.focusOffset-t,isBackward:null})}},{key:"extendToStartOf",value:function(t){return this.merge({focusKey:t.key,focusOffset:0,isBackward:null})}},{key:"extendToEndOf",value:function(t){return this.merge({focusKey:t.key,focusOffset:t.length,isBackward:null})}},{key:"kind",get:function(){return"selection"}},{key:"isBlurred",get:function(){return!this.isFocused}},{key:"isCollapsed",get:function(){return this.anchorKey==this.focusKey&&this.anchorOffset==this.focusOffset}},{key:"isExpanded",get:function(){return!this.isCollapsed}},{key:"isForward",get:function(){return null==this.isBackward?null:!this.isBackward}},{key:"startKey",get:function(){return this.isBackward?this.focusKey:this.anchorKey}},{key:"startOffset",get:function(){return this.isBackward?this.focusOffset:this.anchorOffset}},{key:"endKey",get:function(){return this.isBackward?this.anchorKey:this.focusKey}},{key:"endOffset",get:function(){return this.isBackward?this.anchorOffset:this.focusOffset;
}}],[{key:"create",value:function(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];return t instanceof e?t:new e(t)}}]),e}(new p.Record(y));h.concat(g).forEach(function(t){var e=t.split("%"),n=a(e,2),r=n[0],o=n[1],s=r+"Anchor"+o,i=r+"Edge"+o,c=r+"End"+o,u=r+"Focus"+o,d=r+"Start"+o;m.prototype[d]=function(){return this.isBackward?this[u].apply(this,arguments):this[s].apply(this,arguments)},m.prototype[c]=function(){return this.isBackward?this[s].apply(this,arguments):this[u].apply(this,arguments)},(0,l.default)(g,t)&&(m.prototype[i]=function(){return this[s].apply(this,arguments)||this[u].apply(this,arguments)})}),(0,f.default)(m.prototype,["hasAnchorAtStartOf","hasAnchorAtEndOf","hasAnchorBetween","hasAnchorIn","hasFocusAtEndOf","hasFocusAtStartOf","hasFocusBetween","hasFocusIn","isAtStartOf","isAtEndOf"]),e.default=m},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function o(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function a(t){return"string"==typeof t?p.default.create({type:t}):p.default.create(t)}Object.defineProperty(e,"__esModule",{value:!0});var c=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},u=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),l=n(16),d=r(l),f=n(17),p=r(f),h=n(49),g=r(h),y=n(383),m=r(y),k=n(37),x=(r(k),n(6)),v=new x.Record({undos:new x.Stack,redos:new x.Stack}),b={cursorMarks:null,document:new d.default,selection:new g.default,history:new v,isNative:!1},_=function(t){function e(){return o(this,e),s(this,Object.getPrototypeOf(e).apply(this,arguments))}return i(e,t),u(e,[{key:"normalize",value:function(t){var e=this,n=this.document,r=(this.selection,this.transform()),o=void 0;if(n.filterDescendantsDeep(function(e){if(o=e.validate(t)){var n=o,s=n.value,i=n.rule;r=i.normalize(r,e,s)}}),o=n.validate(t)){var s=o,i=s.value,a=s.rule;r=a.normalize(r,n,i)}return r.steps.size?r.apply({snapshot:!1}):e}},{key:"transform",value:function(){var t=this;return new m.default({state:t})}},{key:"addMark",value:function(t){t=a(t);var e=this,n=e,r=(n.cursorMarks,n.document),o=n.selection;if(o.isCollapsed){var s=r.getMarksAtRange(o);return e=e.merge({cursorMarks:s.add(t)})}return r=r.addMarkAtRange(o,t),e=e.merge({document:r})}},{key:"collapseToStartOfPreviousBlock",value:function(){var t=this,e=t,n=e.document,r=e.selection,o=n.getBlocksAtRange(r),s=o.first();if(!s)return t;var i=n.getPreviousBlock(s);return i?(r=r.collapseToStartOf(i),r=r.normalize(n),t=t.merge({selection:r})):t}},{key:"collapseToEndOfPreviousBlock",value:function(){var t=this,e=t,n=e.document,r=e.selection,o=n.getBlocksAtRange(r),s=o.first();if(!s)return t;var i=n.getPreviousBlock(s);return i?(r=r.collapseToEndOf(i),r=r.normalize(n),t=t.merge({selection:r})):t}},{key:"collapseToStartOfNextBlock",value:function(){var t=this,e=t,n=e.document,r=e.selection,o=n.getBlocksAtRange(r),s=o.last();if(!s)return t;var i=n.getNextBlock(s);return i?(r=r.collapseToStartOf(i),r=r.normalize(n),t=t.merge({selection:r})):t}},{key:"collapseToEndOfNextBlock",value:function(){var t=this,e=t,n=e.document,r=e.selection,o=n.getBlocksAtRange(r),s=o.last();if(!s)return t;var i=n.getNextBlock(s);return i?(r=r.collapseToEndOf(i),r=r.normalize(n),t=t.merge({selection:r})):t}},{key:"collapseToStartOfPreviousText",value:function(){var t=this,e=t,n=e.document,r=e.selection,o=n.getTextsAtRange(r),s=o.first();if(!s)return t;var i=n.getPreviousText(s);return i?(r=r.collapseToStartOf(i),r=r.normalize(n),t=t.merge({selection:r})):t}},{key:"collapseToEndOfPreviousText",value:function(){var t=this,e=t,n=e.document,r=e.selection,o=n.getTextsAtRange(r),s=o.first();if(!s)return t;var i=n.getPreviousText(s);return i?(r=r.collapseToEndOf(i),r=r.normalize(n),t=t.merge({selection:r})):t}},{key:"collapseToStartOfNextText",value:function(){var t=this,e=t,n=e.document,r=e.selection,o=n.getTextsAtRange(r),s=o.last();if(!s)return t;var i=n.getNextText(s);return i?(r=r.collapseToStartOf(i),r=r.normalize(n),t=t.merge({selection:r})):t}},{key:"collapseToEndOfNextText",value:function(){var t=this,e=t,n=e.document,r=e.selection,o=n.getTextsAtRange(r),s=o.last();if(!s)return t;var i=n.getNextText(s);return i?(r=r.collapseToEndOf(i),r=r.normalize(n),t=t.merge({selection:r})):t}},{key:"delete",value:function(){var t=this,e=t,n=e.document,r=e.selection,o=void 0;if(r.isCollapsed)return t;var s=this.startText,i=r,a=i.startKey,c=i.startOffset,u=i.endKey,l=i.endOffset,d=n.getClosestBlock(s),f=d.getHighestChild(s),p=d.getPreviousSibling(f),h=d.getNextSibling(f);if(!p||0!=c||u==a&&l!=s.length)o=r.collapseToStart();else if("text"==p.kind)o=h&&"text"==h.kind?r.merge({anchorKey:p.key,anchorOffset:p.length,focusKey:p.key,focusOffset:p.length}):r.collapseToEndOf(p);else{var g=p.getTexts().last();o=r.collapseToEndOf(g)}return n=n.deleteAtRange(r),r=o,t=t.merge({document:n,selection:r})}},{key:"deleteBackward",value:function(){var t=arguments.length<=0||void 0===arguments[0]?1:arguments[0],e=this,n=e,r=n.document,o=n.selection,s=o,i=o,a=i.startKey,c=r.getDescendant(a);if(o.isExpanded)s=o.collapseToStart();else if(o.isAtStartOf(r))s=o;else if(o.isAtStartOf(c)){var u=r.getPreviousText(c),l=r.getClosestBlock(u),d=r.getClosestInline(u);s=l&&l.isVoid?o:d&&d.isVoid?o:o.collapseToEndOf(u)}else if(o.isAtEndOf(c)&&1==c.length){var f=r.getClosestBlock(a),p=f.getHighestChild(a),h=f.getPreviousSibling(p),g=f.getNextSibling(p);if(h)if("text"==h.kind)s=g&&"text"==g.kind?o.merge({anchorKey:h.key,anchorOffset:h.length,focusKey:h.key,focusOffset:h.length}):o.collapseToEndOf(h);else{var y=h.getTexts().last();s=o.collapseToEndOf(y)}else s=o.moveBackward(t)}else s=o.moveBackward(t);return r=r.deleteBackwardAtRange(o,t),o=s,e=e.merge({document:r,selection:o})}},{key:"deleteForward",value:function(){var t=arguments.length<=0||void 0===arguments[0]?1:arguments[0],e=this,n=e,r=n.document,o=n.selection,s=n.startText,i=o,a=i.startKey,c=i.startOffset,u=o,l=r.getClosestBlock(a),d=r.getClosestInline(a),f=l.getHighestChild(a),p=l.getPreviousSibling(f),h=l.getNextSibling(f);if(o.isExpanded)u=o.collapseToStart();else if(l&&l.isVoid||d&&d.isVoid){var g=r.getNextText(a),y=r.getPreviousText(a);u=h?o.collapseToStartOf(g):o.collapseToEndOf(y)}else if(p&&0==c&&1==s.length)if("text"==p.kind)u=h&&"text"==h.kind?o.merge({anchorKey:p.key,anchorOffset:p.length,focusKey:p.key,focusOffset:p.length}):o.collapseToEndOf(p);else{var m=p.getTexts().last();u=o.collapseToEndOf(m)}return r=r.deleteForwardAtRange(o,t),o=u,e=e.merge({document:r,selection:o})}},{key:"insertBlock",value:function(t){var e=this,n=e,r=n.document,o=n.selection;r=r.insertBlockAtRange(o,t);var s=e.document.getTexts().map(function(t){return t.key}),i=r.getTexts().find(function(t){return!s.includes(t.key)});return o=o.collapseToEndOf(i),e=e.merge({document:r,selection:o})}},{key:"insertFragment",value:function(t){var e=this,n=e,r=n.document,o=n.selection,s=o;if(!t.length)return e;var i=t.getTexts().last(),a=t.getClosestInline(i),c=r.getTexts();r=r.insertFragmentAtRange(o,t);var u=c.map(function(t){return t.key}),l=r.getTexts().findLast(function(t){return!u.includes(t.key)}),d=l?r.getPreviousText(l):null;return s=l&&a&&d?o.collapseToEndOf(d):l&&a?o.collapseToStart():l?o.collapseToStartOf(l).moveForward(i.length):o.collapseToStart().moveForward(i.length),o=s,e=e.merge({document:r,selection:o})}},{key:"insertInline",value:function(t){var e=this,n=e,r=n.document,o=n.selection,s=n.startText,i=r.hasVoidParent(s);return r=r.insertInlineAtRange(o,t),i?o=o:!function(){var t=e.document.getTexts().map(function(t){return t.key}),n=r.getTexts().find(function(e){return!t.includes(e.key)});o=o.collapseToEndOf(n)}(),e=e.merge({document:r,selection:o})}},{key:"insertText",value:function(t,e){var n=this,r=n,o=r.cursorMarks,s=r.document,i=r.selection,a=void 0,c=s.hasVoidParent(n.startText);return a=c?i:i.isExpanded?i.collapseToStart().moveForward(t.length):i.moveForward(t.length),s=s.insertTextAtRange(i,t,e||o),i=a,n=n.merge({document:s,selection:i})}},{key:"moveTo",value:function(t){var e=this,n=e,r=n.document,o=n.selection;return t instanceof g.default&&(t={anchorKey:t.anchorKey,anchorOffset:t.anchorOffset,focusKey:t.focusKey,focusOffset:t.focusOffset,isFocused:t.isFocused}),o=o.merge(c({},t,{isBackward:null})),o=o.normalize(r),e=e.merge({selection:o})}},{key:"setBlock",value:function(t){var e=this,n=e,r=n.document,o=n.selection;return r=r.setBlockAtRange(o,t),e=e.merge({document:r})}},{key:"setInline",value:function(t){var e=this,n=e,r=n.document,o=n.selection;return r=r.setInlineAtRange(o,t),e=e.merge({document:r})}},{key:"splitBlock",value:function(){var t=arguments.length<=0||void 0===arguments[0]?1:arguments[0],e=this,n=e,r=n.document,o=n.selection;r=r.splitBlockAtRange(o,t);var s=o,i=s.startKey,a=r.getDescendant(i),c=r.getNextText(a);return o=o.collapseToStartOf(c),e=e.merge({document:r,selection:o})}},{key:"splitInline",value:function(){var t=arguments.length<=0||void 0===arguments[0]?1/0:arguments[0],e=this,n=e,r=n.document,o=n.selection;r=r.splitInlineAtRange(o,t);var s=o,i=s.startKey,a=r.getClosestInline(i);if(a){var c=r.getDescendant(i),u=r.getNextText(c);o=o.collapseToStartOf(u)}return e=e.merge({document:r,selection:o})}},{key:"removeMark",value:function(t){t=a(t);var e=this,n=e,r=(n.cursorMarks,n.document),o=n.selection;if(o.isCollapsed){var s=r.getMarksAtRange(o);return e=e.merge({cursorMarks:s.remove(t)})}return r=r.removeMarkAtRange(o,t),e=e.merge({document:r})}},{key:"toggleMark",value:function(t){t=a(t);var e=this,n=e.marks,r=(e.document,e.selection,n.some(function(e){return e.equals(t)}));return r?e.removeMark(t):e.addMark(t)}},{key:"wrapBlock",value:function(t){var e=this,n=e,r=n.document,o=n.selection;return r=r.wrapBlockAtRange(o,t),e=e.merge({document:r})}},{key:"unwrapBlock",value:function(t){var e=this,n=e,r=n.document,o=n.selection;return r=r.unwrapBlockAtRange(o,t),e=e.merge({document:r,selection:o})}},{key:"wrapInline",value:function(t){var e=this,n=e,r=n.document,o=n.selection,s=o,i=s.startKey,a=r.getPreviousText(i);if(r=r.wrapInlineAtRange(o,t),o.isCollapsed)o=o;else if(0==o.startOffset){var c=a?r.getNextText(a):r.getTexts().first();o=o.moveToRangeOf(c)}else if(o.startKey==o.endKey){var u=r.getNextText(o.startKey);o=o.moveToRangeOf(u)}else{var l=r.getNextText(o.anchorKey),d=r.getDescendant(o.focusKey);o=o.merge({anchorKey:l.key,anchorOffset:0,focusKey:d.key,focusOffset:o.focusOffset})}return e=e.merge({document:r,selection:o})}},{key:"wrapText",value:function(t){var e=arguments.length<=1||void 0===arguments[1]?t:arguments[1],n=this,r=n,o=r.document,s=r.selection,i=s,a=i.anchorOffset,c=i.anchorKey,u=i.focusOffset,l=i.focusKey,d=i.isBackward,f=void 0;return f=c==l?s.moveForward(t.length):s.merge({anchorOffset:d?a:a+t.length,focusOffset:d?u+t.length:u}),o=o.wrapTextAtRange(s,t,e),s=f,n=n.merge({document:o,selection:s})}},{key:"unwrapInline",value:function(t){var e=this,n=e,r=n.document,o=n.selection;return r=r.unwrapInlineAtRange(o,t),e=e.merge({document:r,selection:o})}},{key:"kind",get:function(){return"state"}},{key:"hasUndos",get:function(){return this.history.undos.size>0}},{key:"hasRedos",get:function(){return this.history.redos.size>0}},{key:"isBlurred",get:function(){return this.selection.isBlurred}},{key:"isFocused",get:function(){return this.selection.isFocused}},{key:"isCollapsed",get:function(){return this.selection.isCollapsed}},{key:"isExpanded",get:function(){return this.selection.isExpanded}},{key:"isBackward",get:function(){return this.selection.isBackward}},{key:"isForward",get:function(){return this.selection.isForward}},{key:"startKey",get:function(){return this.selection.startKey}},{key:"endKey",get:function(){return this.selection.endKey}},{key:"startOffset",get:function(){return this.selection.startOffset}},{key:"endOffset",get:function(){return this.selection.endOffset}},{key:"anchorKey",get:function(){return this.selection.anchorKey}},{key:"focusKey",get:function(){return this.selection.focusKey}},{key:"anchorOffset",get:function(){return this.selection.anchorOffset}},{key:"focusOffset",get:function(){return this.selection.focusOffset}},{key:"startText",get:function(){return this.document.getDescendant(this.selection.startKey)}},{key:"endText",get:function(){return this.document.getDescendant(this.selection.endKey)}},{key:"anchorText",get:function(){return this.document.getDescendant(this.selection.anchorKey)}},{key:"focusText",get:function(){return this.document.getDescendant(this.selection.focusKey)}},{key:"startBlock",get:function(){return this.document.getClosestBlock(this.selection.startKey)}},{key:"endBlock",get:function(){return this.document.getClosestBlock(this.selection.endKey)}},{key:"anchorBlock",get:function(){return this.document.getClosestBlock(this.selection.anchorKey)}},{key:"focusBlock",get:function(){return this.document.getClosestBlock(this.selection.focusKey)}},{key:"characters",get:function(){return this.document.getCharactersAtRange(this.selection)}},{key:"marks",get:function(){return this.cursorMarks||this.document.getMarksAtRange(this.selection)}},{key:"blocks",get:function(){return this.document.getBlocksAtRange(this.selection)}},{key:"fragment",get:function(){return this.document.getFragmentAtRange(this.selection)}},{key:"inlines",get:function(){return this.document.getInlinesAtRange(this.selection)}},{key:"texts",get:function(){return this.document.getTextsAtRange(this.selection)}}],[{key:"create",value:function(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];return t instanceof e?t:(t.document=d.default.create(t.document),t.selection=g.default.create(t.selection).normalize(t.document),new e(t))}}]),e}(new x.Record(b));e.default=_},function(t,e,n){"use strict";function r(t,e){var n=!0,r=!1,i=void 0;try{for(var a,c=function(){var e=a.value,n=t[e];if(!n)throw new Error('Object does not have a property named "'+e+'".');t[e]=function(){for(var t=arguments.length,r=Array(t),i=0;i<t;i++)r[i]=arguments[i];var a=[e].concat(r,[s]),c=this.__cache=this.__cache||new o.Map;if(c.hasIn(a))return c.getIn(a);var u=n.apply(this,r);return this.__cache=c.setIn(a,u),u}},u=e[Symbol.iterator]();!(n=(a=u.next()).done);n=!0)c()}catch(l){r=!0,i=l}finally{try{!n&&u.return&&u.return()}finally{if(r)throw i}}}Object.defineProperty(e,"__esModule",{value:!0});var o=n(6),s={};e.default=r},function(t,e,n){(function(r){var o=n(30);e=t.exports=function(t,n){var r=e.evaluate(t,n),o=e.evaluate("<root></root>",n)[0];return o.type="root",e.update(r,o),o},e.evaluate=function(t,e){var n;return n="string"==typeof t||r.isBuffer(t)?o.parseDOM(t,e):t},e.update=function(t,e){Array.isArray(t)||(t=[t]),e?e.children=t:e=null;for(var n=0;n<t.length;n++){var r=t[n],o=r.parent||r.root,s=o&&o.children;s&&s!==t&&(s.splice(s.indexOf(r),1),r.prev&&(r.prev.next=r.next),r.next&&(r.next.prev=r.prev)),e?(r.prev=t[n-1]||null,r.next=t[n+1]||null):r.prev=r.next=null,e&&"root"===e.type?(r.root=e,r.parent=null):(r.root=null,r.parent=e)}return e}}).call(e,n(32).Buffer)},function(t,e,n){"use strict";var r=n(1),o=function(t){var e,n={};t instanceof Object&&!Array.isArray(t)?void 0:r(!1);for(e in t)t.hasOwnProperty(e)&&(n[e]=e);return n};t.exports=o},function(t,e,n){function r(t){return t&&t.window===t}function o(t){if(r(t))return t;var e=s(t);if(i){e.parentWindow.execScript("document._parentWindow = window;","Javascript");var n=e._parentWindow;return e._parentWindow=null,n}return e.defaultView||e.parentWindow}var s=n(213);t.exports=o;var i=n(214)},function(t,e,n){function r(t,e){for(var n=t.length;n--;)if(o(t[n][0],e))return n;return-1}var o=n(270);t.exports=r},function(t,e,n){function r(t,e){var n=t.__data__;return o(e)?n["string"==typeof e?"string":"hash"]:n.map}var o=n(252);t.exports=r},function(t,e,n){var r=n(72),o=r(Object,"create");t.exports=o},function(t,e,n){"use strict";t.exports=n(328)},function(t,e,n){(function(t,r){function o(t,n){var r={seen:[],stylize:i};return arguments.length>=3&&(r.depth=arguments[2]),arguments.length>=4&&(r.colors=arguments[3]),g(n)?r.showHidden=n:n&&e._extend(r,n),b(r.showHidden)&&(r.showHidden=!1),b(r.depth)&&(r.depth=2),b(r.colors)&&(r.colors=!1),b(r.customInspect)&&(r.customInspect=!0),r.colors&&(r.stylize=s),c(r,t,r.depth)}function s(t,e){var n=o.styles[e];return n?"["+o.colors[n][0]+"m"+t+"["+o.colors[n][1]+"m":t}function i(t,e){return t}function a(t){var e={};return t.forEach(function(t,n){e[t]=!0}),e}function c(t,n,r){if(t.customInspect&&n&&E(n.inspect)&&n.inspect!==e.inspect&&(!n.constructor||n.constructor.prototype!==n)){var o=n.inspect(r,t);return x(o)||(o=c(t,o,r)),o}var s=u(t,n);if(s)return s;var i=Object.keys(n),g=a(i);if(t.showHidden&&(i=Object.getOwnPropertyNames(n)),T(n)&&(i.indexOf("message")>=0||i.indexOf("description")>=0))return l(n);if(0===i.length){if(E(n)){var y=n.name?": "+n.name:"";return t.stylize("[Function"+y+"]","special")}if(_(n))return t.stylize(RegExp.prototype.toString.call(n),"regexp");if(O(n))return t.stylize(Date.prototype.toString.call(n),"date");if(T(n))return l(n)}var m="",k=!1,v=["{","}"];if(h(n)&&(k=!0,v=["[","]"]),E(n)){var b=n.name?": "+n.name:"";m=" [Function"+b+"]"}if(_(n)&&(m=" "+RegExp.prototype.toString.call(n)),O(n)&&(m=" "+Date.prototype.toUTCString.call(n)),T(n)&&(m=" "+l(n)),0===i.length&&(!k||0==n.length))return v[0]+m+v[1];if(r<0)return _(n)?t.stylize(RegExp.prototype.toString.call(n),"regexp"):t.stylize("[Object]","special");t.seen.push(n);var w;return w=k?d(t,n,r,g,i):i.map(function(e){return f(t,n,r,g,e,k)}),t.seen.pop(),p(w,m,v)}function u(t,e){if(b(e))return t.stylize("undefined","undefined");if(x(e)){var n="'"+JSON.stringify(e).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return t.stylize(n,"string")}return k(e)?t.stylize(""+e,"number"):g(e)?t.stylize(""+e,"boolean"):y(e)?t.stylize("null","null"):void 0}function l(t){return"["+Error.prototype.toString.call(t)+"]"}function d(t,e,n,r,o){for(var s=[],i=0,a=e.length;i<a;++i)D(e,String(i))?s.push(f(t,e,n,r,String(i),!0)):s.push("");return o.forEach(function(o){o.match(/^\d+$/)||s.push(f(t,e,n,r,o,!0))}),s}function f(t,e,n,r,o,s){var i,a,u;if(u=Object.getOwnPropertyDescriptor(e,o)||{value:e[o]},u.get?a=u.set?t.stylize("[Getter/Setter]","special"):t.stylize("[Getter]","special"):u.set&&(a=t.stylize("[Setter]","special")),D(r,o)||(i="["+o+"]"),a||(t.seen.indexOf(u.value)<0?(a=y(n)?c(t,u.value,null):c(t,u.value,n-1),a.indexOf("\n")>-1&&(a=s?a.split("\n").map(function(t){return"  "+t}).join("\n").substr(2):"\n"+a.split("\n").map(function(t){return"   "+t}).join("\n"))):a=t.stylize("[Circular]","special")),b(i)){if(s&&o.match(/^\d+$/))return a;i=JSON.stringify(""+o),i.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(i=i.substr(1,i.length-2),i=t.stylize(i,"name")):(i=i.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),i=t.stylize(i,"string"))}return i+": "+a}function p(t,e,n){var r=0,o=t.reduce(function(t,e){return r++,e.indexOf("\n")>=0&&r++,t+e.replace(/\u001b\[\d\d?m/g,"").length+1},0);return o>60?n[0]+(""===e?"":e+"\n ")+" "+t.join(",\n  ")+" "+n[1]:n[0]+e+" "+t.join(", ")+" "+n[1]}function h(t){return Array.isArray(t)}function g(t){return"boolean"==typeof t}function y(t){return null===t}function m(t){return null==t}function k(t){return"number"==typeof t}function x(t){return"string"==typeof t}function v(t){return"symbol"==typeof t}function b(t){return void 0===t}function _(t){return w(t)&&"[object RegExp]"===C(t)}function w(t){return"object"==typeof t&&null!==t}function O(t){return w(t)&&"[object Date]"===C(t)}function T(t){return w(t)&&("[object Error]"===C(t)||t instanceof Error)}function E(t){return"function"==typeof t}function S(t){return null===t||"boolean"==typeof t||"number"==typeof t||"string"==typeof t||"symbol"==typeof t||"undefined"==typeof t}function C(t){return Object.prototype.toString.call(t)}function A(t){return t<10?"0"+t.toString(10):t.toString(10)}function R(){var t=new Date,e=[A(t.getHours()),A(t.getMinutes()),A(t.getSeconds())].join(":");return[t.getDate(),P[t.getMonth()],e].join(" ")}function D(t,e){return Object.prototype.hasOwnProperty.call(t,e)}var I=/%[sdj%]/g;e.format=function(t){if(!x(t)){for(var e=[],n=0;n<arguments.length;n++)e.push(o(arguments[n]));return e.join(" ")}for(var n=1,r=arguments,s=r.length,i=String(t).replace(I,function(t){if("%%"===t)return"%";if(n>=s)return t;switch(t){case"%s":return String(r[n++]);case"%d":return Number(r[n++]);case"%j":try{return JSON.stringify(r[n++])}catch(e){return"[Circular]"}default:return t}}),a=r[n];n<s;a=r[++n])i+=y(a)||!w(a)?" "+a:" "+o(a);return i},e.deprecate=function(n,o){function s(){if(!i){if(r.throwDeprecation)throw new Error(o);r.traceDeprecation?console.trace(o):console.error(o),i=!0}return n.apply(this,arguments)}if(b(t.process))return function(){return e.deprecate(n,o).apply(this,arguments)};if(r.noDeprecation===!0)return n;var i=!1;return s};var M,K={};e.debuglog=function(t){if(b(M)&&(M=r.env.NODE_DEBUG||""),t=t.toUpperCase(),!K[t])if(new RegExp("\\b"+t+"\\b","i").test(M)){var n=r.pid;K[t]=function(){var r=e.format.apply(e,arguments);console.error("%s %d: %s",t,n,r)}}else K[t]=function(){};return K[t]},e.inspect=o,o.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},o.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"},e.isArray=h,e.isBoolean=g,e.isNull=y,e.isNullOrUndefined=m,e.isNumber=k,e.isString=x,e.isSymbol=v,e.isUndefined=b,e.isRegExp=_,e.isObject=w,e.isDate=O,e.isError=T,e.isFunction=E,e.isPrimitive=S,e.isBuffer=n(313);var P=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];e.log=function(){console.log("%s - %s",R(),e.format.apply(e,arguments))},e.inherits=n(24),e._extend=function(t,e){if(!e||!w(e))return t;for(var n=Object.keys(e),r=n.length;r--;)t[n[r]]=e[n[r]];return t}}).call(e,function(){return this}(),n(13))},function(t,e){"use strict";var n={onClick:!0,onDoubleClick:!0,onMouseDown:!0,onMouseMove:!0,onMouseUp:!0,onClickCapture:!0,onDoubleClickCapture:!0,onMouseDownCapture:!0,onMouseMoveCapture:!0,onMouseUpCapture:!0},r={getHostProps:function(t,e){if(!e.disabled)return e;var r={};for(var o in e)!n[o]&&e.hasOwnProperty(o)&&(r[o]=e[o]);return r}};t.exports=r},function(t,e,n){"use strict";function r(t){return Object.prototype.hasOwnProperty.call(t,y)||(t[y]=h++,f[t[y]]={}),f[t[y]]}var o,s=n(4),i=n(14),a=n(82),c=n(343),u=n(158),l=n(374),d=n(101),f={},p=!1,h=0,g={topAbort:"abort",topAnimationEnd:l("animationend")||"animationend",topAnimationIteration:l("animationiteration")||"animationiteration",topAnimationStart:l("animationstart")||"animationstart",topBlur:"blur",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topChange:"change",topClick:"click",topCompositionEnd:"compositionend",topCompositionStart:"compositionstart",topCompositionUpdate:"compositionupdate",topContextMenu:"contextmenu",topCopy:"copy",topCut:"cut",topDoubleClick:"dblclick",topDrag:"drag",topDragEnd:"dragend",topDragEnter:"dragenter",topDragExit:"dragexit",topDragLeave:"dragleave",topDragOver:"dragover",topDragStart:"dragstart",topDrop:"drop",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topFocus:"focus",topInput:"input",topKeyDown:"keydown",topKeyPress:"keypress",topKeyUp:"keyup",topLoadedData:"loadeddata",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",topMouseDown:"mousedown",topMouseMove:"mousemove",topMouseOut:"mouseout",topMouseOver:"mouseover",topMouseUp:"mouseup",topPaste:"paste",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topScroll:"scroll",topSeeked:"seeked",topSeeking:"seeking",topSelectionChange:"selectionchange",topStalled:"stalled",topSuspend:"suspend",topTextInput:"textInput",topTimeUpdate:"timeupdate",topTouchCancel:"touchcancel",topTouchEnd:"touchend",topTouchMove:"touchmove",topTouchStart:"touchstart",topTransitionEnd:l("transitionend")||"transitionend",topVolumeChange:"volumechange",topWaiting:"waiting",topWheel:"wheel"},y="_reactListenersID"+String(Math.random()).slice(2),m=s({},c,{ReactEventListener:null,injection:{injectReactEventListener:function(t){t.setHandleTopLevel(m.handleTopLevel),m.ReactEventListener=t}},setEnabled:function(t){m.ReactEventListener&&m.ReactEventListener.setEnabled(t)},isEnabled:function(){return!(!m.ReactEventListener||!m.ReactEventListener.isEnabled())},listenTo:function(t,e){for(var n=e,o=r(n),s=a.registrationNameDependencies[t],c=i.topLevelTypes,u=0;u<s.length;u++){var l=s[u];o.hasOwnProperty(l)&&o[l]||(l===c.topWheel?d("wheel")?m.ReactEventListener.trapBubbledEvent(c.topWheel,"wheel",n):d("mousewheel")?m.ReactEventListener.trapBubbledEvent(c.topWheel,"mousewheel",n):m.ReactEventListener.trapBubbledEvent(c.topWheel,"DOMMouseScroll",n):l===c.topScroll?d("scroll",!0)?m.ReactEventListener.trapCapturedEvent(c.topScroll,"scroll",n):m.ReactEventListener.trapBubbledEvent(c.topScroll,"scroll",m.ReactEventListener.WINDOW_HANDLE):l===c.topFocus||l===c.topBlur?(d("focus",!0)?(m.ReactEventListener.trapCapturedEvent(c.topFocus,"focus",n),m.ReactEventListener.trapCapturedEvent(c.topBlur,"blur",n)):d("focusin")&&(m.ReactEventListener.trapBubbledEvent(c.topFocus,"focusin",n),m.ReactEventListener.trapBubbledEvent(c.topBlur,"focusout",n)),o[c.topBlur]=!0,o[c.topFocus]=!0):g.hasOwnProperty(l)&&m.ReactEventListener.trapBubbledEvent(l,g[l],n),o[l]=!0)}},trapBubbledEvent:function(t,e,n){return m.ReactEventListener.trapBubbledEvent(t,e,n)},trapCapturedEvent:function(t,e,n){return m.ReactEventListener.trapCapturedEvent(t,e,n)},ensureScrollValueMonitoring:function(){if(void 0===o&&(o=document.createEvent&&"pageX"in document.createEvent("MouseEvent")),!o&&!p){var t=u.refreshScrollValues;m.ReactEventListener.monitorScrollValue(t),p=!0}}});t.exports=m},function(t,e,n){"use strict";function r(t,e,n,r){return o.call(this,t,e,n,r)}var o=n(47),s=n(158),i=n(98),a={screenX:null,screenY:null,clientX:null,clientY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:i,button:function(t){var e=t.button;return"which"in t?e:2===e?2:4===e?1:0},buttons:null,relatedTarget:function(t){return t.relatedTarget||(t.fromElement===t.srcElement?t.toElement:t.fromElement)},pageX:function(t){return"pageX"in t?t.pageX:t.clientX+s.currentScrollLeft},pageY:function(t){return"pageY"in t?t.pageY:t.clientY+s.currentScrollTop}};o.augmentClass(r,a),t.exports=r},function(t,e){"use strict";function n(t){var e=""+t,n=o.exec(e);if(!n)return e;var r,s="",i=0,a=0;for(i=n.index;i<e.length;i++){switch(e.charCodeAt(i)){case 34:r="&quot;";break;case 38:r="&amp;";break;case 39:r="&#x27;";break;case 60:r="&lt;";break;case 62:r="&gt;";break;default:continue}a!==i&&(s+=e.substring(a,i)),a=i+1,s+=r}return a!==i?s+e.substring(a,i):s}function r(t){return"boolean"==typeof t||"number"==typeof t?""+t:n(t)}var o=/["'&<>]/;t.exports=r},function(t,e,n){"use strict";var r,o=n(7),s=n(81),i=/^[ \r\n\t\f]/,a=/<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/,c=n(96),u=c(function(t,e){if(t.namespaceURI!==s.svg||"innerHTML"in t)t.innerHTML=e;else{r=r||document.createElement("div"),r.innerHTML="<svg>"+e+"</svg>";for(var n=r.firstChild.childNodes,o=0;o<n.length;o++)t.appendChild(n[o])}});if(o.canUseDOM){var l=document.createElement("div");l.innerHTML=" ",""===l.innerHTML&&(u=function(t,e){if(t.parentNode&&t.parentNode.replaceChild(t,t),i.test(e)||"<"===e[0]&&a.test(e)){t.innerHTML=String.fromCharCode(65279)+e;var n=t.firstChild;1===n.data.length?t.removeChild(n):n.deleteData(0,1)}else t.innerHTML=e}),l=null}t.exports=u},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function o(t){var e=JSON.stringify(t),n=window.btoa(window.encodeURIComponent(e));return n}function s(t){var e=window.decodeURIComponent(window.atob(t)),n=JSON.parse(e);return n}function i(t){var e=s(t),n=d.default.deserialize(e);return n}function a(t){var e=s(t),n=d.default.deserializeNode(e);return n}function c(t){var e=d.default.serialize(t),n=o(e);return n}function u(t){var e=d.default.serializeNode(t),n=o(e);return n}Object.defineProperty(e,"__esModule",{value:!0});var l=n(107),d=r(l);e.default={deserialize:i,deserializeNode:a,serialize:c,serializeNode:u}},function(t,e){var n=Object.prototype.toString;t.exports=function(t){switch(n.call(t)){case"[object Function]":return"function";case"[object Date]":return"date";case"[object RegExp]":return"regexp";case"[object Arguments]":return"arguments";case"[object Array]":return"array";case"[object String]":return"string"}if("object"==typeof t&&t&&"number"==typeof t.length)try{if("function"==typeof t.callee)return"arguments"}catch(e){if(e instanceof TypeError)return"arguments"}return null===t?"null":void 0===t?"undefined":t&&1===t.nodeType?"element":t===Object(t)?"object":typeof t}},function(t,e,n){var r=n(52),o=n(39).isHtml,s=n(23),i=[n(173),n(177),n(176),n(174),n(175)],a=t.exports=function(t,e,n,i){return this instanceof a?(this.options=s.defaults(i||{},this.options),t?(n&&("string"==typeof n&&(n=r(n,this.options)),this._root=a.call(this,n)),t.cheerio?t:(c(t)&&(t=[t]),Array.isArray(t)?(s.forEach(t,s.bind(function(t,e){this[e]=t},this)),this.length=t.length,this):"string"==typeof t&&o(t)?a.call(this,r(t,this.options).children):(e?"string"==typeof e?o(e)?(e=r(e,this.options),e=a.call(this,e)):(t=[e,t].join(" "),e=this._root):e.cheerio||(e=a.call(this,e)):e=this._root,e?e.find(t):this))):this):new a(t,e,n,i)};s.extend(a,n(68)),a.prototype.cheerio="[cheerio object]",a.prototype.options={withDomLvl1:!0,normalizeWhitespace:!1,xmlMode:!1,decodeEntities:!0},a.prototype.length=0,a.prototype.splice=Array.prototype.splice,a.prototype._make=function(t,e){var n=new this.constructor(t,e,this._root,this.options);return n.prevObject=this,n},a.prototype.toArray=function(){return this.get()},i.forEach(function(t){s.extend(a.prototype,t)});var c=function(t){return t.name||"text"===t.type||"comment"===t.type}},function(t,e,n){function r(t,e,n){if(e)"string"==typeof e&&(e=o(e,t._root,n));else{if(!t._root||!t._root.children)return"";e=t._root.children}return i(e,n)}var o=n(109),s=n(52),i=n(70),a=n(23);e.load=function(t,r){var o=n(67);r=a.defaults(r||{},o.prototype.options);var i=s(t,r),c=function(t,e,n,s){return this instanceof c?(s=a.defaults(s||{},r),o.call(this,t,e,n||i,s)):new c(t,e,n,s)};return c.prototype=Object.create(o.prototype),c.prototype.constructor=c,c.fn=c.prototype,c.prototype._originalRoot=i,a.merge(c,e),c._root=i,c._options=r,c},e.html=function(t,e){var o=n(67);return"[object Object]"!==Object.prototype.toString.call(t)||e||"length"in t||"type"in t||(e=t,t=void 0),e=a.defaults(e||{},this._options,o.prototype.options),r(this,t,e)},e.xml=function(t){var e=a.defaults({xmlMode:!0},this._options);return r(this,t,e)},e.text=function(t){if(!t)return"";for(var n,r="",o=t.length,s=0;s<o;s++)n=t[s],"text"===n.type?r+=n.data:n.children&&"comment"!==n.type&&(r+=e.text(n.children));return r},e.parseHTML=function(t,e,n){var r;return t&&"string"==typeof t?("boolean"==typeof e&&(n=e),r=this.load(t),n||r("script").remove(),r.root()[0].children.slice()):null},e.root=function(){return this(this._root);
},e.contains=function(t,e){if(e===t)return!1;for(;e&&e!==e.parent;)if(e=e.parent,e===t)return!0;return!1}},function(t,e,n){function r(t){for(var e=0;t&&e<t.length;e++)if(c(t[e]))return t[e]}function o(t,e){var n={name:t,value:e};return function(t){return m(t,n)}}function s(t){return function(e){return!!l(e)&&t(e)}}function i(t,e,n){if(null===n){if(t.length>1&&"scope"!==e)throw new SyntaxError("pseudo-selector :"+e+" requires an argument")}else if(1===t.length)throw new SyntaxError("pseudo-selector :"+e+" doesn't have any arguments")}var a=n(28),c=a.isTag,u=a.getText,l=a.getParent,d=a.getChildren,f=a.getSiblings,p=a.hasAttrib,h=a.getName,g=a.getAttributeValue,y=n(284),m=n(110).rules.equals,k=n(38),x=k.trueFunc,v=k.falseFunc,b={contains:function(t,e){return function(n){return t(n)&&u(n).indexOf(e)>=0}},icontains:function(t,e){var n=e.toLowerCase();return function(e){return t(e)&&u(e).toLowerCase().indexOf(n)>=0}},"nth-child":function(t,e){var n=y(e);return n===v?n:n===x?s(t):function(e){for(var r=f(e),o=0,s=0;o<r.length;o++)if(c(r[o])){if(r[o]===e)break;s++}return n(s)&&t(e)}},"nth-last-child":function(t,e){var n=y(e);return n===v?n:n===x?s(t):function(e){for(var r=f(e),o=0,s=r.length-1;s>=0;s--)if(c(r[s])){if(r[s]===e)break;o++}return n(o)&&t(e)}},"nth-of-type":function(t,e){var n=y(e);return n===v?n:n===x?s(t):function(e){for(var r=f(e),o=0,s=0;s<r.length;s++)if(c(r[s])){if(r[s]===e)break;h(r[s])===h(e)&&o++}return n(o)&&t(e)}},"nth-last-of-type":function(t,e){var n=y(e);return n===v?n:n===x?s(t):function(e){for(var r=f(e),o=0,s=r.length-1;s>=0;s--)if(c(r[s])){if(r[s]===e)break;h(r[s])===h(e)&&o++}return n(o)&&t(e)}},root:function(t){return function(e){return!l(e)&&t(e)}},scope:function(t,e,n,r){return r&&0!==r.length?1===r.length?function(e){return r[0]===e&&t(e)}:function(e){return r.indexOf(e)>=0&&t(e)}:b.root(t)},checkbox:o("type","checkbox"),file:o("type","file"),password:o("type","password"),radio:o("type","radio"),reset:o("type","reset"),image:o("type","image"),submit:o("type","submit")},_={empty:function(t){return!d(t).some(function(t){return c(t)||"text"===t.type})},"first-child":function(t){return r(f(t))===t},"last-child":function(t){for(var e=f(t),n=e.length-1;n>=0;n--){if(e[n]===t)return!0;if(c(e[n]))break}return!1},"first-of-type":function(t){for(var e=f(t),n=0;n<e.length;n++)if(c(e[n])){if(e[n]===t)return!0;if(h(e[n])===h(t))break}return!1},"last-of-type":function(t){for(var e=f(t),n=e.length-1;n>=0;n--)if(c(e[n])){if(e[n]===t)return!0;if(h(e[n])===h(t))break}return!1},"only-of-type":function(t){for(var e=f(t),n=0,r=e.length;n<r;n++)if(c(e[n])){if(e[n]===t)continue;if(h(e[n])===h(t))return!1}return!0},"only-child":function(t){for(var e=f(t),n=0;n<e.length;n++)if(c(e[n])&&e[n]!==t)return!1;return!0},link:function(t){return p(t,"href")},visited:v,selected:function(t){if(p(t,"selected"))return!0;if("option"!==h(t))return!1;var e=l(t);if(!e||"select"!==h(e)||p(e,"multiple"))return!1;for(var n=d(e),r=!1,o=0;o<n.length;o++)if(c(n[o]))if(n[o]===t)r=!0;else{if(!r)return!1;if(p(n[o],"selected"))return!1}return r},disabled:function(t){return p(t,"disabled")},enabled:function(t){return!p(t,"disabled")},checked:function(t){return p(t,"checked")||_.selected(t)},required:function(t){return p(t,"required")},optional:function(t){return!p(t,"required")},parent:function(t){return!_.empty(t)},header:function(t){var e=h(t);return"h1"===e||"h2"===e||"h3"===e||"h4"===e||"h5"===e||"h6"===e},button:function(t){var e=h(t);return"button"===e||"input"===e&&"button"===g(t,"type")},input:function(t){var e=h(t);return"input"===e||"textarea"===e||"select"===e||"button"===e},text:function(t){var e;return"input"===h(t)&&(!(e=g(t,"type"))||"text"===e.toLowerCase())}},w=/^(?:(?:nth|last|first|only)-(?:child|of-type)|root|empty|(?:en|dis)abled|checked|not)$/;t.exports={compile:function(t,e,n,r){var o=e.name,s=e.data;if(n&&n.strict&&!w.test(o))throw SyntaxError(":"+o+" isn't part of CSS3");if("function"==typeof b[o])return i(b[o],o,s),b[o](t,s,n,r);if("function"==typeof _[o]){var a=_[o];return i(a,o,s),t===x?a:function(e){return a(e,s)&&t(e)}}throw new SyntaxError("unmatched pseudo-class :"+o)},filters:b,pseudos:_}},function(t,e,n){function r(t,e){if(t){var n,r="";for(var o in t)n=t[o],r&&(r+=" "),r+=!n&&d[o]?o:o+'="'+(e.decodeEntities?l.encodeXML(n):n)+'"';return r}}function o(t,e){"svg"===t.name&&(e={decodeEntities:e.decodeEntities,xmlMode:!0});var n="<"+t.name,o=r(t.attribs,e);return o&&(n+=" "+o),!e.xmlMode||t.children&&0!==t.children.length?(n+=">",t.children&&(n+=h(t.children,e)),p[t.name]&&!e.xmlMode||(n+="</"+t.name+">")):n+="/>",n}function s(t){return"<"+t.data+">"}function i(t,e){var n=t.data||"";return!e.decodeEntities||t.parent&&t.parent.name in f||(n=l.encodeXML(n)),n}function a(t){return"<![CDATA["+t.children[0].data+"]]>"}function c(t){return"<!--"+t.data+"-->"}var u=n(186),l=n(195),d={__proto__:null,allowfullscreen:!0,async:!0,autofocus:!0,autoplay:!0,checked:!0,controls:!0,default:!0,defer:!0,disabled:!0,hidden:!0,ismap:!0,loop:!0,multiple:!0,muted:!0,open:!0,readonly:!0,required:!0,reversed:!0,scoped:!0,seamless:!0,selected:!0,typemustmatch:!0},f={__proto__:null,style:!0,script:!0,xmp:!0,iframe:!0,noembed:!0,noframes:!0,plaintext:!0,noscript:!0},p={__proto__:null,area:!0,base:!0,basefont:!0,br:!0,col:!0,command:!0,embed:!0,frame:!0,hr:!0,img:!0,input:!0,isindex:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0},h=t.exports=function(t,e){Array.isArray(t)||t.cheerio||(t=[t]),e=e||{};for(var n="",r=0;r<t.length;r++){var l=t[r];n+="root"===l.type?h(l.children,e):u.isTag(l)?o(l,e):l.type===u.Directive?s(l):l.type===u.Comment?c(l):l.type===u.CDATA?a(l):i(l,e)}return n}},function(t,e){"use strict";function n(t,e){return t===e?0!==t||1/t===1/e:t!==t&&e!==e}function r(t,e){if(n(t,e))return!0;if("object"!=typeof t||null===t||"object"!=typeof e||null===e)return!1;var r=Object.keys(t),s=Object.keys(e);if(r.length!==s.length)return!1;for(var i=0;i<r.length;i++)if(!o.call(e,r[i])||!n(t[r[i]],e[r[i]]))return!1;return!0}var o=Object.prototype.hasOwnProperty;t.exports=r},function(t,e,n){function r(t,e){var n=s(t,e);return o(n)?n:void 0}var o=n(233),s=n(244);t.exports=r},function(t,e,n){var r=n(243),o="object"==typeof self&&self&&self.Object===Object&&self,s=r||o||Function("return this")();t.exports=s},function(t,e,n){function r(t){return null!=t&&s(t.length)&&!o(t)}var o=n(128),s=n(272);t.exports=r},function(t,e){function n(t){var e=typeof t;return!!t&&("object"==e||"function"==e)}t.exports=n},function(t,e){function n(t){return!!t&&"object"==typeof t}t.exports=n},function(t,e){function n(){this._events=this._events||{},this._maxListeners=this._maxListeners||void 0}function r(t){return"function"==typeof t}function o(t){return"number"==typeof t}function s(t){return"object"==typeof t&&null!==t}function i(t){return void 0===t}t.exports=n,n.EventEmitter=n,n.prototype._events=void 0,n.prototype._maxListeners=void 0,n.defaultMaxListeners=10,n.prototype.setMaxListeners=function(t){if(!o(t)||t<0||isNaN(t))throw TypeError("n must be a positive number");return this._maxListeners=t,this},n.prototype.emit=function(t){var e,n,o,a,c,u;if(this._events||(this._events={}),"error"===t&&(!this._events.error||s(this._events.error)&&!this._events.error.length)){if(e=arguments[1],e instanceof Error)throw e;var l=new Error('Uncaught, unspecified "error" event. ('+e+")");throw l.context=e,l}if(n=this._events[t],i(n))return!1;if(r(n))switch(arguments.length){case 1:n.call(this);break;case 2:n.call(this,arguments[1]);break;case 3:n.call(this,arguments[1],arguments[2]);break;default:a=Array.prototype.slice.call(arguments,1),n.apply(this,a)}else if(s(n))for(a=Array.prototype.slice.call(arguments,1),u=n.slice(),o=u.length,c=0;c<o;c++)u[c].apply(this,a);return!0},n.prototype.addListener=function(t,e){var o;if(!r(e))throw TypeError("listener must be a function");return this._events||(this._events={}),this._events.newListener&&this.emit("newListener",t,r(e.listener)?e.listener:e),this._events[t]?s(this._events[t])?this._events[t].push(e):this._events[t]=[this._events[t],e]:this._events[t]=e,s(this._events[t])&&!this._events[t].warned&&(o=i(this._maxListeners)?n.defaultMaxListeners:this._maxListeners,o&&o>0&&this._events[t].length>o&&(this._events[t].warned=!0,console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.",this._events[t].length),"function"==typeof console.trace&&console.trace())),this},n.prototype.on=n.prototype.addListener,n.prototype.once=function(t,e){function n(){this.removeListener(t,n),o||(o=!0,e.apply(this,arguments))}if(!r(e))throw TypeError("listener must be a function");var o=!1;return n.listener=e,this.on(t,n),this},n.prototype.removeListener=function(t,e){var n,o,i,a;if(!r(e))throw TypeError("listener must be a function");if(!this._events||!this._events[t])return this;if(n=this._events[t],i=n.length,o=-1,n===e||r(n.listener)&&n.listener===e)delete this._events[t],this._events.removeListener&&this.emit("removeListener",t,e);else if(s(n)){for(a=i;a-- >0;)if(n[a]===e||n[a].listener&&n[a].listener===e){o=a;break}if(o<0)return this;1===n.length?(n.length=0,delete this._events[t]):n.splice(o,1),this._events.removeListener&&this.emit("removeListener",t,e)}return this},n.prototype.removeAllListeners=function(t){var e,n;if(!this._events)return this;if(!this._events.removeListener)return 0===arguments.length?this._events={}:this._events[t]&&delete this._events[t],this;if(0===arguments.length){for(e in this._events)"removeListener"!==e&&this.removeAllListeners(e);return this.removeAllListeners("removeListener"),this._events={},this}if(n=this._events[t],r(n))this.removeListener(t,n);else if(n)for(;n.length;)this.removeListener(t,n[n.length-1]);return delete this._events[t],this},n.prototype.listeners=function(t){var e;return e=this._events&&this._events[t]?r(this._events[t])?[this._events[t]]:this._events[t].slice():[]},n.prototype.listenerCount=function(t){if(this._events){var e=this._events[t];if(r(e))return 1;if(e)return e.length}return 0},n.listenerCount=function(t,e){return t.listenerCount(e)}},function(t,e,n){function r(t,e){this.afterTransform=function(t,n){return o(e,t,n)},this.needTransform=!1,this.transforming=!1,this.writecb=null,this.writechunk=null}function o(t,e,n){var r=t._transformState;r.transforming=!1;var o=r.writecb;if(!o)return t.emit("error",new Error("no writecb in Transform class"));r.writechunk=null,r.writecb=null,c.isNullOrUndefined(n)||t.push(n),o&&o(e);var s=t._readableState;s.reading=!1,(s.needReadable||s.length<s.highWaterMark)&&t._read(s.highWaterMark)}function s(t){if(!(this instanceof s))return new s(t);a.call(this,t),this._transformState=new r(t,this);var e=this;this._readableState.needReadable=!0,this._readableState.sync=!1,this.once("prefinish",function(){c.isFunction(this._flush)?this._flush(function(t){i(e,t)}):i(e)})}function i(t,e){if(e)return t.emit("error",e);var n=t._writableState,r=t._transformState;if(n.length)throw new Error("calling transform done when ws.length != 0");if(r.transforming)throw new Error("calling transform done when still transforming");return t.push(null)}t.exports=s;var a=n(25),c=n(42);c.inherits=n(24),c.inherits(s,a),s.prototype.push=function(t,e){return this._transformState.needTransform=!1,a.prototype.push.call(this,t,e)},s.prototype._transform=function(t,e,n){throw new Error("not implemented")},s.prototype._write=function(t,e,n){var r=this._transformState;if(r.writecb=n,r.writechunk=t,r.writeencoding=e,!r.transforming){var o=this._readableState;(r.needTransform||o.needReadable||o.length<o.highWaterMark)&&this._read(o.highWaterMark)}},s.prototype._read=function(t){var e=this._transformState;c.isNull(e.writechunk)||!e.writecb||e.transforming?e.needTransform=!0:(e.transforming=!0,this._transform(e.writechunk,e.writeencoding,e.afterTransform))}},function(t,e,n){(function(e){function r(t,e,n){this.chunk=t,this.encoding=e,this.callback=n}function o(t,e){var r=n(25);t=t||{};var o=t.highWaterMark,s=t.objectMode?16:16384;this.highWaterMark=o||0===o?o:s,this.objectMode=!!t.objectMode,e instanceof r&&(this.objectMode=this.objectMode||!!t.writableObjectMode),this.highWaterMark=~~this.highWaterMark,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1;var i=t.decodeStrings===!1;this.decodeStrings=!i,this.defaultEncoding=t.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(t){p(e,t)},this.writecb=null,this.writelen=0,this.buffer=[],this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1}function s(t){var e=n(25);return this instanceof s||this instanceof e?(this._writableState=new o(t,this),this.writable=!0,void w.call(this)):new s(t)}function i(t,n,r){var o=new Error("write after end");t.emit("error",o),e.nextTick(function(){r(o)})}function a(t,n,r,o){var s=!0;if(!(_.isBuffer(r)||_.isString(r)||_.isNullOrUndefined(r)||n.objectMode)){var i=new TypeError("Invalid non-string/buffer chunk");t.emit("error",i),e.nextTick(function(){o(i)}),s=!1}return s}function c(t,e,n){return!t.objectMode&&t.decodeStrings!==!1&&_.isString(e)&&(e=new b(e,n)),e}function u(t,e,n,o,s){n=c(e,n,o),_.isBuffer(n)&&(o="buffer");var i=e.objectMode?1:n.length;e.length+=i;var a=e.length<e.highWaterMark;return a||(e.needDrain=!0),e.writing||e.corked?e.buffer.push(new r(n,o,s)):l(t,e,!1,i,n,o,s),a}function l(t,e,n,r,o,s,i){e.writelen=r,e.writecb=i,e.writing=!0,e.sync=!0,n?t._writev(o,e.onwrite):t._write(o,s,e.onwrite),e.sync=!1}function d(t,n,r,o,s){r?e.nextTick(function(){n.pendingcb--,s(o)}):(n.pendingcb--,s(o)),t._writableState.errorEmitted=!0,t.emit("error",o)}function f(t){t.writing=!1,t.writecb=null,t.length-=t.writelen,t.writelen=0}function p(t,n){var r=t._writableState,o=r.sync,s=r.writecb;if(f(r),n)d(t,r,o,n,s);else{var i=m(t,r);i||r.corked||r.bufferProcessing||!r.buffer.length||y(t,r),o?e.nextTick(function(){h(t,r,i,s)}):h(t,r,i,s)}}function h(t,e,n,r){n||g(t,e),e.pendingcb--,r(),x(t,e)}function g(t,e){0===e.length&&e.needDrain&&(e.needDrain=!1,t.emit("drain"))}function y(t,e){if(e.bufferProcessing=!0,t._writev&&e.buffer.length>1){for(var n=[],r=0;r<e.buffer.length;r++)n.push(e.buffer[r].callback);e.pendingcb++,l(t,e,!0,e.length,e.buffer,"",function(t){for(var r=0;r<n.length;r++)e.pendingcb--,n[r](t)}),e.buffer=[]}else{for(var r=0;r<e.buffer.length;r++){var o=e.buffer[r],s=o.chunk,i=o.encoding,a=o.callback,c=e.objectMode?1:s.length;if(l(t,e,!1,c,s,i,a),e.writing){r++;break}}r<e.buffer.length?e.buffer=e.buffer.slice(r):e.buffer.length=0}e.bufferProcessing=!1}function m(t,e){return e.ending&&0===e.length&&!e.finished&&!e.writing}function k(t,e){e.prefinished||(e.prefinished=!0,t.emit("prefinish"))}function x(t,e){var n=m(t,e);return n&&(0===e.pendingcb?(k(t,e),e.finished=!0,t.emit("finish")):k(t,e)),n}function v(t,n,r){n.ending=!0,x(t,n),r&&(n.finished?e.nextTick(r):t.once("finish",r)),n.ended=!0}t.exports=s;var b=n(32).Buffer;s.WritableState=o;var _=n(42);_.inherits=n(24);var w=n(43);_.inherits(s,w),s.prototype.pipe=function(){this.emit("error",new Error("Cannot pipe. Not readable."))},s.prototype.write=function(t,e,n){var r=this._writableState,o=!1;return _.isFunction(e)&&(n=e,e=null),_.isBuffer(t)?e="buffer":e||(e=r.defaultEncoding),_.isFunction(n)||(n=function(){}),r.ended?i(this,r,n):a(this,r,t,n)&&(r.pendingcb++,o=u(this,r,t,e,n)),o},s.prototype.cork=function(){var t=this._writableState;t.corked++},s.prototype.uncork=function(){var t=this._writableState;t.corked&&(t.corked--,t.writing||t.corked||t.finished||t.bufferProcessing||!t.buffer.length||y(this,t))},s.prototype._write=function(t,e,n){n(new Error("not implemented"))},s.prototype._writev=null,s.prototype.end=function(t,e,n){var r=this._writableState;_.isFunction(t)?(n=t,t=null,e=null):_.isFunction(e)&&(n=e,e=null),_.isNullOrUndefined(t)||this.write(t,e),r.corked&&(r.corked=1,this.uncork()),r.ending||r.finished||v(this,r,n)}}).call(e,n(13))},function(t,e,n){"use strict";function r(t,e){return Array.isArray(e)&&(e=e[1]),e?e.nextSibling:t.firstChild}function o(t,e,n){l.insertTreeBefore(t,e,n)}function s(t,e,n){Array.isArray(e)?a(t,e[0],e[1],n):y(t,e,n)}function i(t,e){if(Array.isArray(e)){var n=e[1];e=e[0],c(t,e,n),t.removeChild(n)}t.removeChild(e)}function a(t,e,n,r){for(var o=e;;){var s=o.nextSibling;if(y(t,o,r),o===n)break;o=s}}function c(t,e,n){for(;;){var r=e.nextSibling;if(r===n)break;t.removeChild(r)}}function u(t,e,n){var r=t.parentNode,o=t.nextSibling;o===e?n&&y(r,document.createTextNode(n),o):n?(g(o,n),c(r,o,e)):c(r,t,e)}var l=n(33),d=n(320),f=n(154),p=(n(5),n(8),n(96)),h=n(64),g=n(166),y=p(function(t,e,n){t.insertBefore(e,n)}),m=d.dangerouslyReplaceNodeWithMarkup,k={dangerouslyReplaceNodeWithMarkup:m,replaceDelimitedText:u,processUpdates:function(t,e){for(var n=0;n<e.length;n++){var a=e[n];switch(a.type){case f.INSERT_MARKUP:o(t,a.content,r(t,a.afterNode));break;case f.MOVE_EXISTING:s(t,a.fromNode,r(t,a.afterNode));break;case f.SET_MARKUP:h(t,a.content);break;case f.TEXT_CONTENT:g(t,a.content);break;case f.REMOVE_NODE:i(t,a.fromNode)}}}};t.exports=k},function(t,e){"use strict";var n={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};t.exports=n},function(t,e,n){"use strict";function r(){if(a)for(var t in c){var e=c[t],n=a.indexOf(t);if(n>-1?void 0:i("96",t),!u.plugins[n]){e.extractEvents?void 0:i("97",t),u.plugins[n]=e;var r=e.eventTypes;for(var s in r)o(r[s],e,s)?void 0:i("98",s,t)}}}function o(t,e,n){u.eventNameDispatchConfigs.hasOwnProperty(n)?i("99",n):void 0,u.eventNameDispatchConfigs[n]=t;var r=t.phasedRegistrationNames;if(r){for(var o in r)if(r.hasOwnProperty(o)){var a=r[o];s(a,e,n)}return!0}return!!t.registrationName&&(s(t.registrationName,e,n),!0)}function s(t,e,n){u.registrationNameModules[t]?i("100",t):void 0,u.registrationNameModules[t]=e,u.registrationNameDependencies[t]=e.eventTypes[n].dependencies}var i=n(2),a=(n(1),null),c={},u={plugins:[],eventNameDispatchConfigs:{},registrationNameModules:{},registrationNameDependencies:{},possibleRegistrationNames:null,injectEventPluginOrder:function(t){a?i("101"):void 0,a=Array.prototype.slice.call(t),r()},injectEventPluginsByName:function(t){var e=!1;for(var n in t)if(t.hasOwnProperty(n)){var o=t[n];c.hasOwnProperty(n)&&c[n]===o||(c[n]?i("102",n):void 0,c[n]=o,e=!0)}e&&r()},getPluginModuleForEvent:function(t){var e=t.dispatchConfig;if(e.registrationName)return u.registrationNameModules[e.registrationName]||null;for(var n in e.phasedRegistrationNames)if(e.phasedRegistrationNames.hasOwnProperty(n)){var r=u.registrationNameModules[e.phasedRegistrationNames[n]];if(r)return r}return null},_resetEventPlugins:function(){a=null;for(var t in c)c.hasOwnProperty(t)&&delete c[t];u.plugins.length=0;var e=u.eventNameDispatchConfigs;for(var n in e)e.hasOwnProperty(n)&&delete e[n];var r=u.registrationNameModules;for(var o in r)r.hasOwnProperty(o)&&delete r[o]}};t.exports=u},function(t,e,n){"use strict";function r(t){return t===k.topMouseUp||t===k.topTouchEnd||t===k.topTouchCancel}function o(t){return t===k.topMouseMove||t===k.topTouchMove}function s(t){return t===k.topMouseDown||t===k.topTouchStart}function i(t,e,n,r){var o=t.type||"unknown-event";t.currentTarget=x.getNodeFromInstance(r),e?y.invokeGuardedCallbackWithCatch(o,n,t):y.invokeGuardedCallback(o,n,t),t.currentTarget=null}function a(t,e){var n=t._dispatchListeners,r=t._dispatchInstances;if(Array.isArray(n))for(var o=0;o<n.length&&!t.isPropagationStopped();o++)i(t,e,n[o],r[o]);else n&&i(t,e,n,r);t._dispatchListeners=null,t._dispatchInstances=null}function c(t){var e=t._dispatchListeners,n=t._dispatchInstances;if(Array.isArray(e)){for(var r=0;r<e.length&&!t.isPropagationStopped();r++)if(e[r](t,n[r]))return n[r]}else if(e&&e(t,n))return n;return null}function u(t){var e=c(t);return t._dispatchInstances=null,t._dispatchListeners=null,e}function l(t){var e=t._dispatchListeners,n=t._dispatchInstances;Array.isArray(e)?h("103"):void 0,t.currentTarget=e?x.getNodeFromInstance(n):null;var r=e?e(t):null;return t.currentTarget=null,t._dispatchListeners=null,t._dispatchInstances=null,r}function d(t){return!!t._dispatchListeners}var f,p,h=n(2),g=n(14),y=n(89),m=(n(1),n(3),{injectComponentTree:function(t){f=t},injectTreeTraversal:function(t){p=t}}),k=g.topLevelTypes,x={isEndish:r,isMoveish:o,isStartish:s,executeDirectDispatch:l,executeDispatchesInOrder:a,executeDispatchesInOrderStopAtTrue:u,hasDispatches:d,getInstanceFromNode:function(t){return f.getInstanceFromNode(t)},getNodeFromInstance:function(t){return f.getNodeFromInstance(t)},isAncestor:function(t,e){return p.isAncestor(t,e)},getLowestCommonAncestor:function(t,e){return p.getLowestCommonAncestor(t,e)},getParentInstance:function(t){return p.getParentInstance(t)},traverseTwoPhase:function(t,e,n){return p.traverseTwoPhase(t,e,n)},traverseEnterLeave:function(t,e,n,r,o){return p.traverseEnterLeave(t,e,n,r,o)},injection:m};t.exports=x},function(t,e){"use strict";function n(t){var e=/[=:]/g,n={"=":"=0",":":"=2"},r=(""+t).replace(e,function(t){return n[t]});return"$"+r}function r(t){var e=/(=0|=2)/g,n={"=0":"=","=2":":"},r="."===t[0]&&"$"===t[1]?t.substring(2):t.substring(1);return(""+r).replace(e,function(t){return n[t]})}var o={escape:n,unescape:r};t.exports=o},function(t,e,n){"use strict";function r(t){null!=t.checkedLink&&null!=t.valueLink?a("87"):void 0}function o(t){r(t),null!=t.value||null!=t.onChange?a("88"):void 0}function s(t){r(t),null!=t.checked||null!=t.onChange?a("89"):void 0}function i(t){if(t){var e=t.getName();if(e)return" Check the render method of `"+e+"`."}return""}var a=n(2),c=n(156),u=n(92),l=n(93),d=(n(1),n(3),{button:!0,checkbox:!0,image:!0,hidden:!0,radio:!0,reset:!0,submit:!0}),f={value:function(t,e,n){return!t[e]||d[t.type]||t.onChange||t.readOnly||t.disabled?null:new Error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.")},checked:function(t,e,n){return!t[e]||t.onChange||t.readOnly||t.disabled?null:new Error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.")},onChange:c.func},p={},h={checkPropTypes:function(t,e,n){for(var r in f){if(f.hasOwnProperty(r))var o=f[r](e,r,t,u.prop,null,l);if(o instanceof Error&&!(o.message in p)){p[o.message]=!0;i(n)}}},getValue:function(t){return t.valueLink?(o(t),t.valueLink.value):t.value},getChecked:function(t){return t.checkedLink?(s(t),t.checkedLink.value):t.checked},executeOnChange:function(t,e){return t.valueLink?(o(t),t.valueLink.requestChange(e.target.value)):t.checkedLink?(s(t),t.checkedLink.requestChange(e.target.checked)):t.onChange?t.onChange.call(void 0,e):void 0}};t.exports=h},function(t,e,n){"use strict";function r(t,e,n){this.props=t,this.context=e,this.refs=i,this.updater=n||s}var o=n(2),s=n(90),i=(n(160),n(29));n(1),n(3);r.prototype.isReactComponent={},r.prototype.setState=function(t,e){"object"!=typeof t&&"function"!=typeof t&&null!=t?o("85"):void 0,this.updater.enqueueSetState(this,t),e&&this.updater.enqueueCallback(this,e,"setState")},r.prototype.forceUpdate=function(t){this.updater.enqueueForceUpdate(this),t&&this.updater.enqueueCallback(this,t,"forceUpdate")};t.exports=r},function(t,e,n){"use strict";var r=n(2),o=(n(1),!1),s={unmountIDFromEnvironment:null,replaceNodeWithMarkup:null,processChildrenUpdates:null,injection:{injectEnvironment:function(t){o?r("104"):void 0,s.unmountIDFromEnvironment=t.unmountIDFromEnvironment,s.replaceNodeWithMarkup=t.replaceNodeWithMarkup,s.processChildrenUpdates=t.processChildrenUpdates,o=!0}}};t.exports=s},function(t,e,n){"use strict";function r(t,e){u[t]||(u[t]={element:null,parentID:null,ownerID:null,text:null,childIDs:[],displayName:"Unknown",isMounted:!1,updateCount:0}),e(u[t])}function o(t){var e=u[t];if(e){var n=e.childIDs;delete u[t],n.forEach(o)}}function s(t,e,n){return"\n    in "+t+(e?" (at "+e.fileName.replace(/^.*[\\\/]/,"")+":"+e.lineNumber+")":n?" (created by "+n+")":"")}function i(t){var e,n=f.getDisplayName(t),r=f.getElement(t),o=f.getOwnerID(t);return o&&(e=f.getDisplayName(o)),s(n,r&&r._source,e)}var a=n(2),c=n(20),u=(n(1),n(3),{}),l={},d={},f={onSetDisplayName:function(t,e){r(t,function(t){return t.displayName=e})},onSetChildren:function(t,e){r(t,function(n){n.childIDs=e,e.forEach(function(e){var n=u[e];n?void 0:a("68"),null==n.displayName?a("69"):void 0,null==n.childIDs&&null==n.text?a("70"):void 0,n.isMounted?void 0:a("71"),null==n.parentID&&(n.parentID=t),n.parentID!==t?a("72",e,n.parentID,t):void 0})})},onSetOwner:function(t,e){r(t,function(t){return t.ownerID=e})},onSetParent:function(t,e){r(t,function(t){return t.parentID=e})},onSetText:function(t,e){r(t,function(t){return t.text=e})},onBeforeMountComponent:function(t,e){r(t,function(t){return t.element=e})},onBeforeUpdateComponent:function(t,e){r(t,function(t){return t.element=e})},onMountComponent:function(t){r(t,function(t){return t.isMounted=!0})},onMountRootComponent:function(t){d[t]=!0},onUpdateComponent:function(t){r(t,function(t){return t.updateCount++})},onUnmountComponent:function(t){r(t,function(t){return t.isMounted=!1}),l[t]=!0,delete d[t]},purgeUnmountedComponents:function(){if(!f._preventPurging){for(var t in l)o(t);l={}}},isMounted:function(t){var e=u[t];return!!e&&e.isMounted},getCurrentStackAddendum:function(t){var e="";if(t){var n=t.type,r="function"==typeof n?n.displayName||n.name:n,o=t._owner;e+=s(r||"Unknown",t._source,o&&o.getName())}var i=c.current,a=i&&i._debugID;return e+=f.getStackAddendumByID(a)},getStackAddendumByID:function(t){for(var e="";t;)e+=i(t),t=f.getParentID(t);return e},getChildIDs:function(t){var e=u[t];return e?e.childIDs:[]},getDisplayName:function(t){var e=u[t];return e?e.displayName:"Unknown"},getElement:function(t){var e=u[t];return e?e.element:null},getOwnerID:function(t){var e=u[t];return e?e.ownerID:null},getParentID:function(t){var e=u[t];return e?e.parentID:null},getSource:function(t){var e=u[t],n=e?e.element:null,r=null!=n?n._source:null;return r},getText:function(t){var e=u[t];return e?e.text:null},getUpdateCount:function(t){var e=u[t];return e?e.updateCount:0},getRootIDs:function(){return Object.keys(d)},getRegisteredIDs:function(){return Object.keys(u)}};t.exports=f},function(t,e,n){"use strict";function r(t,e,n,r){try{return e(n,r)}catch(s){return void(null===o&&(o=s))}}var o=null,s={invokeGuardedCallback:r,invokeGuardedCallbackWithCatch:r,rethrowCaughtError:function(){if(o){var t=o;throw o=null,t}}};t.exports=s},function(t,e,n){"use strict";function r(t,e){}var o=(n(3),{isMounted:function(t){return!1},enqueueCallback:function(t,e){},enqueueForceUpdate:function(t){r(t,"forceUpdate")},enqueueReplaceState:function(t,e){r(t,"replaceState")},enqueueSetState:function(t,e){r(t,"setState")}});t.exports=o},function(t,e,n){"use strict";var r={};t.exports=r},function(t,e,n){"use strict";var r=n(53),o=r({prop:null,context:null,childContext:null});t.exports=o},function(t,e){"use strict";var n="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";t.exports=n},function(t,e,n){"use strict";function r(t){c.enqueueUpdate(t)}function o(t){var e=typeof t;if("object"!==e)return e;var n=t.constructor&&t.constructor.name||e,r=Object.keys(t);return r.length>0&&r.length<20?n+" (keys: "+r.join(", ")+")":n}function s(t,e){var n=a.get(t);if(!n){return null}return n}var i=n(2),a=(n(20),n(46)),c=(n(8),n(12)),u=(n(1),n(3),{isMounted:function(t){var e=a.get(t);return!!e&&!!e._renderedComponent},enqueueCallback:function(t,e,n){u.validateCallback(e,n);var o=s(t);return o?(o._pendingCallbacks?o._pendingCallbacks.push(e):o._pendingCallbacks=[e],void r(o)):null},enqueueCallbackInternal:function(t,e){t._pendingCallbacks?t._pendingCallbacks.push(e):t._pendingCallbacks=[e],r(t)},enqueueForceUpdate:function(t){var e=s(t,"forceUpdate");e&&(e._pendingForceUpdate=!0,r(e))},enqueueReplaceState:function(t,e){var n=s(t,"replaceState");n&&(n._pendingStateQueue=[e],n._pendingReplaceState=!0,r(n))},enqueueSetState:function(t,e){var n=s(t,"setState");if(n){var o=n._pendingStateQueue||(n._pendingStateQueue=[]);o.push(e),r(n)}},enqueueElementInternal:function(t,e,n){t._pendingElement=e,t._context=n,r(t)},validateCallback:function(t,e){t&&"function"!=typeof t?i("122",e,o(t)):void 0}});t.exports=u},function(t,e){"use strict";t.exports="15.3.0"},function(t,e){"use strict";var n=function(t){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,n,r,o){MSApp.execUnsafeLocalFunction(function(){return t(e,n,r,o)})}:t};t.exports=n},function(t,e){"use strict";function n(t){var e,n=t.keyCode;return"charCode"in t?(e=t.charCode,0===e&&13===n&&(e=13)):e=n,e>=32||13===e?e:0}t.exports=n},function(t,e){"use strict";function n(t){var e=this,n=e.nativeEvent;if(n.getModifierState)return n.getModifierState(t);var r=o[t];return!!r&&!!n[r]}function r(t){return n}var o={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};t.exports=r},function(t,e){"use strict";function n(t){var e=t.target||t.srcElement||window;return e.correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}t.exports=n},function(t,e,n){"use strict";function r(t){if(t){var e=t.getName();if(e)return" Check the render method of `"+e+"`."}return""}function o(t){return"function"==typeof t&&"undefined"!=typeof t.prototype&&"function"==typeof t.prototype.mountComponent&&"function"==typeof t.prototype.receiveComponent}function s(t,e){var n;if(null===t||t===!1)n=u.create(s);else if("object"==typeof t){var a=t;!a||"function"!=typeof a.type&&"string"!=typeof a.type?i("130",null==a.type?a.type:typeof a.type,r(a._owner)):void 0,"string"==typeof a.type?n=l.createInternalComponent(a):o(a.type)?(n=new a.type(a),n.getHostNode||(n.getHostNode=n.getNativeNode)):n=new d(a)}else"string"==typeof t||"number"==typeof t?n=l.createInstanceForText(t):i("131",typeof t);n._mountIndex=0,n._mountImage=null;return n}var i=n(2),a=n(4),c=n(327),u=n(148),l=n(150),d=(n(8),n(1),n(3),function(t){this.construct(t)});a(d.prototype,c.Mixin,{_instantiateReactComponent:s});t.exports=s},function(t,e,n){"use strict";function r(t,e){if(!s.canUseDOM||e&&!("addEventListener"in document))return!1;var n="on"+t,r=n in document;if(!r){var i=document.createElement("div");i.setAttribute(n,"return;"),r="function"==typeof i[n]}return!r&&o&&"wheel"===t&&(r=document.implementation.hasFeature("Events.wheel","3.0")),r}var o,s=n(7);s.canUseDOM&&(o=document.implementation&&document.implementation.hasFeature&&document.implementation.hasFeature("","")!==!0),t.exports=r},function(t,e){"use strict";function n(t,e){var n=null===t||t===!1,r=null===e||e===!1;if(n||r)return n===r;var o=typeof t,s=typeof e;return"string"===o||"number"===o?"string"===s||"number"===s:"object"===s&&t.type===e.type&&t.key===e.key}t.exports=n},function(t,e,n){"use strict";function r(t,e){return t&&"object"==typeof t&&null!=t.key?u.escape(t.key):e.toString(36)}function o(t,e,n,s){var f=typeof t;if("undefined"!==f&&"boolean"!==f||(t=null),null===t||"string"===f||"number"===f||a.isValidElement(t))return n(s,t,""===e?l+r(t,0):e),1;var p,h,g=0,y=""===e?l:e+d;if(Array.isArray(t))for(var m=0;m<t.length;m++)p=t[m],h=y+r(p,m),g+=o(p,h,n,s);else{var k=c(t);if(k){var x,v=k.call(t);if(k!==t.entries)for(var b=0;!(x=v.next()).done;)p=x.value,h=y+r(p,b++),g+=o(p,h,n,s);else for(;!(x=v.next()).done;){var _=x.value;_&&(p=_[1],h=y+u.escape(_[0])+d+r(p,0),g+=o(p,h,n,s))}}else if("object"===f){var w="",O=String(t);i("31","[object Object]"===O?"object with keys {"+Object.keys(t).join(", ")+"}":O,w)}}return g}function s(t,e,n){return null==t?0:o(t,"",e,n)}var i=n(2),a=(n(20),n(11)),c=n(163),u=(n(1),n(84)),l=(n(3),"."),d=":";t.exports=s},function(t,e,n){"use strict";var r=(n(4),n(10)),o=(n(3),r);t.exports=o},function(t,e){"use strict";Object.defineProperty(e,"__esModule",{
value:!0});var n={FRAGMENT:"application/x-slate-fragment",NODE:"application/x-slate-node"};e.default=n},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function o(t){return"string"==typeof t?t:t.key}function s(t,e,n){var r=n.startKey,o=n.startOffset,s=n.endKey,i=n.endOffset;return e.key==r&&e.key==s?o<=t&&t<i:e.key==r?o<=t:e.key!=s||t<i}Object.defineProperty(e,"__esModule",{value:!0});var i=n(21),a=r(i),c=n(35),u=r(c),l=n(36),d=(r(l),n(16)),f=r(d),p=n(27),h=(r(p),n(17)),g=r(h),y=n(49),m=(r(y),n(384)),k=r(m),x=n(22),v=r(x),b=n(185),_=r(b),w=n(31),O=(r(w),n(51)),T=r(O),E=n(37),S=r(E),C=n(6),A={assertChild:function(t){var e=this.getChild(t);if(!e)throw t=o(t),new Error('Could not find a child node with key "'+t+'".');return e},assertDescendant:function(t){var e=this.getDescendant(t);if(!e)throw t=o(t),new Error('Could not find a descendant node with key "'+t+'".');return e},concatChildren:function(t){return t=this.nodes.concat(t),this.merge({nodes:t})},decorateTexts:function(t){return this.mapDescendants(function(e){return"text"==e.kind?e.decorateCharacters(t):e})},findDescendant:function(t){return this.nodes.find(t)||this.nodes.map(function(e){return"text"==e.kind?null:e.findDescendant(t)}).find(function(t){return t})},filterDescendants:function(t){return this.nodes.reduce(function(e,n,r,o){return t(n,r,o)&&(e=e.push(n)),"text"!=n.kind&&(e=e.concat(n.filterDescendants(t))),e},a.default.createList())},filterDescendantsDeep:function(t){return this.nodes.reduce(function(e,n,r,o){return"text"!=n.kind&&(e=e.concat(n.filterDescendantsDeep(t))),t(n,r,o)&&(e=e.push(n)),e},a.default.createList())},getBlocks:function(){var t=this;return this.getTexts().map(function(e){return t.getClosestBlock(e)}).toSet().toList()},getBlocksAtRange:function(t){var e=this;return this.getTextsAtRange(t).map(function(t){return e.getClosestBlock(t)})},getCharactersAtRange:function(t){return this.getTextsAtRange(t).reduce(function(e,n){var r=n.characters.filter(function(e,r){return s(r,n,t)});return e.concat(r)},u.default.createList())},getChildrenAfter:function(t){var e=this.assertChild(t),n=this.nodes.indexOf(e);return this.nodes.slice(n+1)},getChildrenAfterIncluding:function(t){var e=this.assertChild(t),n=this.nodes.indexOf(e);return this.nodes.slice(n)},getChildrenBefore:function(t){var e=this.assertChild(t),n=this.nodes.indexOf(e);return this.nodes.slice(0,n)},getChildrenBeforeIncluding:function(t){var e=this.assertChild(t),n=this.nodes.indexOf(e);return this.nodes.slice(0,n+1)},getChildrenBetween:function(t,e){return t=this.assertChild(t),t=this.nodes.indexOf(t),e=this.assertChild(e),e=this.nodes.indexOf(e),this.nodes.slice(t+1,e)},getChildrenBetweenIncluding:function(t,e){return t=this.assertChild(t),t=this.nodes.indexOf(t),e=this.assertChild(e),e=this.nodes.indexOf(e),this.nodes.slice(t,e+1)},getClosest:function(t,e){for(var n=this.assertDescendant(t);n=this.getParent(n);){if(n==this)return null;if(e(n))return n}return null},getClosestBlock:function(t){return this.getClosest(t,function(t){return"block"==t.kind})},getClosestInline:function(t){return this.getClosest(t,function(t){return"inline"==t.kind})},getChild:function(t){return t=o(t),this.nodes.find(function(e){return e.key==t})},getCommonAncestor:function(t,e){this.assertDescendant(t),this.assertDescendant(e);for(var n=new C.List,r=this.getParent(t),o=this.getParent(e);r;)n=n.push(r),r=this.getParent(r);for(;o;){if(n.includes(o))return o;o=this.getParent(o)}},getComponent:function(t){return t.__getComponent(this)},getDecorators:function(t){return t.__getDecorators(this)},getDescendantDecorators:function(t,e){for(var n=this.assertDescendant(t),r=this.getHighestChild(t),o=[];r!=n;)o=o.concat(r.getDecorators(e)),r=r.getHighestChild(t);return o=o.concat(n.getDecorators(e))},getDescendant:function(t){t=o(t);var e=this.getChild(t);return e?e:(this.nodes.find(function(n){return"text"!=n.kind&&(e=n.getDescendant(t))}),e)},getDepth:function(t){var e=arguments.length<=1||void 0===arguments[1]?1:arguments[1];return this.assertDescendant(t),this.hasChild(t)?e:this.getHighestChild(t).getDepth(t,e+1)},getFragmentAtRange:function(t){var e=this,n=a.default.createList();if(t.isCollapsed)return f.default.create({nodes:n});var r=t.startKey,o=t.startOffset,s=t.endKey,i=t.endOffset;e.assertDescendant(r),e.assertDescendant(s);var c=t.collapseToStart();e=e.splitBlockAtRange(c,1/0);var u=e.getNextText(r),l=r==s?t.collapseToStartOf(u).moveForward(i-o):t.collapseToEnd();e=e.splitBlockAtRange(l,1/0);var d=e.getNextSibling(e.getHighestChild(r)),p=r==s?e.getHighestChild(u):e.getHighestChild(s);return n=e.getChildrenBetweenIncluding(d,p),f.default.create({nodes:n})},getFurthest:function(t,e){for(var n=this.assertDescendant(t),r=null;n=this.getClosest(n,e);)r=n;return r},getFurthestBlock:function(t){return this.getFurthest(t,function(t){return"block"==t.kind})},getFurthestInline:function(t){return this.getFurthest(t,function(t){return"inline"==t.kind})},getHighestChild:function(t){return t=o(t),this.nodes.find(function(e){return e.key==t||"text"!=e.kind&&e.hasDescendant(t)})},getHighestOnlyChildParent:function(t){for(var e=this.assertDescendant(t),n=null,r=void 0;r=this.getParent(e);){if(null==r||r.nodes.size>1)return n;n=r,e=r}},getInlines:function(){var t=this;return this.getTexts().map(function(e){return t.getFurthestInline(e)}).filter(function(t){return t}).toSet().toList()},getInlinesAtRange:function(t){var e=this;return this.getTextsAtRange(t).map(function(t){return e.getClosestInline(t)}).filter(function(t){return t}).toSet().toList()},getMarksAtRange:function(t){t=t.normalize(this);var e=t,n=e.startKey,r=e.startOffset,o=g.default.createSet();if(t.isCollapsed&&0==r){var s=(this.getDescendant(n),this.getPreviousText(n));if(!s||!s.length)return o;var i=s.characters.get(s.length-1);return i.marks}if(t.isCollapsed){var a=this.getDescendant(n),c=a.characters.get(t.startOffset-1);return c.marks}return this.getCharactersAtRange(t).reduce(function(t,e){return t.union(e.marks)},new C.Set)},getNextBlock:function(t){var e=this.assertDescendant(t),n=void 0;if("block"==e.kind)n=e.getTexts().last();else{var r=this.getClosestBlock(t);n=r.getTexts().last()}var o=this.getNextText(n);return o?this.getClosestBlock(o):null},getNextSibling:function(t){var e=this.assertDescendant(t);return this.getParent(e).nodes.skipUntil(function(t){return t==e}).get(1)},getNextText:function(t){return t=o(t),this.getTexts().skipUntil(function(e){return e.key==t}).get(1)},getOffset:function(t){this.assertDescendant(t);var e=this.getHighestChild(t),n=this.nodes.takeUntil(function(t){return t==e}).reduce(function(t,e){return t+e.length},0);return this.hasChild(t)?n:n+e.getOffset(t)},getOffsetAtRange:function(t){if(t=t.normalize(this),t.isExpanded)throw new Error("The range must be collapsed to calculcate its offset.");var e=t,n=e.startKey,r=e.startOffset;return this.getOffset(n)+r},getParent:function(t){if(this.hasChild(t))return this;var e=null;return this.nodes.forEach(function(n){if("text"!=n.kind){var r=n.getParent(t);r&&(e=r)}}),e},getPreviousSibling:function(t){var e=this.assertDescendant(t);return this.getParent(e).nodes.takeUntil(function(t){return t==e}).last()},getPreviousText:function(t){return t=o(t),this.getTexts().takeUntil(function(e){return e.key==t}).last()},getPreviousBlock:function(t){var e=this.assertDescendant(t),n=void 0;if("block"==e.kind)n=e.getTexts().first();else{var r=this.getClosestBlock(t);n=r.getTexts().first()}var o=this.getPreviousText(n);return o?this.getClosestBlock(o):null},getTextAtOffset:function(t){var e=0;return this.getTexts().find(function(n){return e+=n.length,e>=t})},getTextDirection:function(){var t=this.text,e=(0,_.default)(t);return"neutral"==e?void 0:e},getTexts:function(){return this.nodes.reduce(function(t,e){return"text"==e.kind?t.push(e):t.concat(e.getTexts())},a.default.createList())},getTextsAtRange:function(t){t=t.normalize(this);var e=t,n=e.startKey,r=e.endKey,o=this.getTexts(),s=this.getDescendant(n),i=this.getDescendant(r),a=o.indexOf(s),c=o.indexOf(i);return o.slice(a,c+1)},hasChild:function(t){return!!this.getChild(t)},hasDescendant:function(t){return!!this.getDescendant(t)},hasVoidParent:function(t){return!!this.getClosest(t,function(t){return t.isVoid})},insertChildrenAfter:function(t,e){var n=this.assertChild(t),r=this.nodes.indexOf(n);return e=this.nodes.slice(0,r+1).concat(e).concat(this.nodes.slice(r+1)),this.merge({nodes:e})},insertChildrenBefore:function(t,e){var n=this.assertChild(t),r=this.nodes.indexOf(n);return e=this.nodes.slice(0,r).concat(e).concat(this.nodes.slice(r)),this.merge({nodes:e})},isInlineSplitAtRange:function(t){if(t=t.normalize(this),t.isExpanded)throw new Error;var e=t,n=e.startKey,r=this.getFurthestInline(n)||this.getDescendant(n);return t.isAtStartOf(r)||t.isAtEndOf(r)},mapChildren:function(t){var e=this,n=this.nodes;return n.forEach(function(r,o){var s=t(r,o,e.nodes);s!=r&&(n=n.set(s.key,s))}),this.merge({nodes:n})},mapDescendants:function(t){var e=this,n=this.nodes;return n.forEach(function(r,o){var s=r;if("text"!=s.kind&&(s=s.mapDescendants(t)),s=t(s,o,e.nodes),s!=r){var i=n.indexOf(r);n=n.set(i,s)}}),this.merge({nodes:n})},normalize:function(){var t=this,e=new C.Set,n=new C.Set;return t=t.mapDescendants(function(t){if(n.has(t.key))return t;if(e.has(t.key)&&(t=t.set("key",(0,S.default)())),e=e.add(t.key),t.isVoid&&" "!=t.text&&(t=t.merge({nodes:v.default.createList([{characters:u.default.createList([{text:" "}])}])})),"text"!=t.kind&&0==t.nodes.size){var r=v.default.create(),o=t.nodes.push(r);t=t.merge({nodes:o})}return"inline"==t.kind&&""==t.text&&(n=n.add(t.key)),t}),n.forEach(function(e){t=t.removeDescendant(e)}),n=n.clear(),t=t.mapDescendants(function(e){if("text"==e.kind){var r=t.getNextSibling(e);if(r&&"text"==r.kind)for(;r&&"text"==r.kind;){var o=e.characters.concat(r.characters);e=e.merge({characters:o}),n=n.add(r.key),r=t.getNextSibling(r)}else if(0==e.length){var s=t.getParent(e);!n.has(s.key)&&s.nodes.size>1&&(n=n.add(e.key))}}return e}),n.forEach(function(e){t=t.removeDescendant(e)}),t},removeChildrenAfter:function(t){var e=this.assertChild(t),n=this.nodes.indexOf(e),r=this.nodes.slice(0,n+1);return this.merge({nodes:r})},removeChildrenAfterIncluding:function(t){var e=this.assertChild(t),n=this.nodes.indexOf(e),r=this.nodes.slice(0,n);return this.merge({nodes:r})},removeDescendant:function(t){var e=this,n=e.assertDescendant(t),r=e.getParent(n),o=r.nodes.indexOf(n),s=e==r,i=r.nodes.splice(o,1);return r=r.merge({nodes:i}),e=s?r:e.updateDescendant(r)},updateDescendant:function(t){return this.assertDescendant(t),this.mapDescendants(function(e){return e.key==t.key?t:e})},validate:function(t){return t.__validate(this)}};(0,T.default)(A,["assertChild","assertDescendant","filterDescendants","filterDescendantsDeep","findDescendant","getBlocks","getBlocksAtRange","getCharactersAtRange","getChild","getChildrenAfter","getChildrenAfterIncluding","getChildrenBefore","getChildrenBeforeIncluding","getChildrenBetween","getChildrenBetweenIncluding","getClosest","getClosestBlock","getClosestInline","getComponent","getDecorators","getDepth","getDescendant","getDescendantDecorators","getFragmentAtRange","getFurthest","getFurthestBlock","getFurthestInline","getHighestChild","getHighestOnlyChildParent","getInlinesAtRange","getMarksAtRange","getNextBlock","getNextSibling","getNextText","getOffset","getOffsetAtRange","getParent","getPreviousBlock","getPreviousSibling","getPreviousText","getTextAtOffset","getTextDirection","getTexts","getTextsAtRange","hasChild","hasDescendant","hasVoidParent","isInlineSplitAtRange","validate"]);for(var R in k.default)A[R]=k.default[R];e.default=A},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,"__esModule",{value:!0});var o=n(21),s=r(o),i=n(35),a=r(i),c=n(16),u=r(c),l=n(27),d=r(l),f=n(17),p=r(f),h=n(50),g=r(h),y=n(22),m=r(y),k=n(220),x=r(k),v={deserialize:function(t,e){return v.deserializeState(t,e)},deserializeBlock:function(t){var e=arguments.length<=1||void 0===arguments[1]?{}:arguments[1];return e.terse&&(t=v.untersifyBlock(t)),s.default.create({key:t.key,type:t.type,data:t.data,isVoid:t.isVoid,nodes:s.default.createList(t.nodes.map(function(t){return v.deserializeNode(t,e)}))})},deserializeDocument:function(t,e){return u.default.create({nodes:s.default.createList(t.nodes.map(function(t){return v.deserializeNode(t,e)}))})},deserializeInline:function(t){var e=arguments.length<=1||void 0===arguments[1]?{}:arguments[1];return e.terse&&(t=v.untersifyInline(t)),d.default.create({key:t.key,type:t.type,data:t.data,isVoid:t.isVoid,nodes:d.default.createList(t.nodes.map(function(t){return v.deserializeNode(t,e)}))})},deserializeMark:function(t,e){return p.default.create(t)},deserializeNode:function(t,e){switch(t.kind){case"block":return v.deserializeBlock(t,e);case"document":return v.deserializeDocument(t,e);case"inline":return v.deserializeInline(t,e);case"text":return v.deserializeText(t,e);default:throw new Error('Unrecognized node kind "'+t.kind+'".')}},deserializeRange:function(t){var e=arguments.length<=1||void 0===arguments[1]?{}:arguments[1];return e.terse&&(t=v.untersifyRange(t)),a.default.createList(t.text.split("").map(function(n){return a.default.create({text:n,marks:p.default.createSet(t.marks.map(function(t){return v.deserializeMark(t,e)}))})}))},deserializeState:function(t){var e=arguments.length<=1||void 0===arguments[1]?{}:arguments[1];return e.terse&&(t=v.untersifyState(t)),g.default.create({document:v.deserializeDocument(t.document,e)})},deserializeText:function(t){var e=arguments.length<=1||void 0===arguments[1]?{}:arguments[1];return e.terse&&(t=v.untersifyText(t)),m.default.create({key:t.key,characters:t.ranges.reduce(function(t,n){return t.concat(v.deserializeRange(n,e))},a.default.createList())})},serialize:function(t,e){return v.serializeState(t,e)},serializeBlock:function(t){var e=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],n={data:t.data.toJSON(),key:t.key,kind:t.kind,isVoid:t.isVoid,type:t.type,nodes:t.nodes.toArray().map(function(t){return v.serializeNode(t,e)})};return e.terse?v.tersifyBlock(n):n},serializeDocument:function(t){var e=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],n={kind:t.kind,nodes:t.nodes.toArray().map(function(t){return v.serializeNode(t,e)})};return e.terse?v.tersifyDocument(n):n},serializeInline:function(t){var e=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],n={data:t.data.toJSON(),key:t.key,kind:t.kind,isVoid:t.isVoid,type:t.type,nodes:t.nodes.toArray().map(function(t){return v.serializeNode(t,e)})};return e.terse?v.tersifyInline(n):n},serializeMark:function(t){var e=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],n={data:t.data.toJSON(),kind:t.kind,type:t.type};return e.terse?v.tersifyMark(n):n},serializeNode:function(t,e){switch(t.kind){case"block":return v.serializeBlock(t,e);case"document":return v.serializeDocument(t,e);case"inline":return v.serializeInline(t,e);case"text":return v.serializeText(t,e);default:throw new Error('Unrecognized node kind "'+t.kind+'".')}},serializeRange:function(t){var e=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],n={kind:t.kind,text:t.text,marks:t.marks.toArray().map(function(t){return v.serializeMark(t,e)})};return e.terse?v.tersifyRange(n):n},serializeState:function(t){var e=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],n={document:v.serializeDocument(t.document,e),kind:t.kind};return e.terse?v.tersifyState(n):n},serializeText:function(t){var e=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],n={key:t.key,kind:t.kind,ranges:t.getRanges().toArray().map(function(t){return v.serializeRange(t,e)})};return e.terse?v.tersifyText(n):n},tersifyBlock:function(t){var e={};return e.kind=t.kind,e.type=t.type,t.isVoid||(e.nodes=t.nodes),t.isVoid&&(e.isVoid=t.isVoid),(0,x.default)(t.data)||(e.data=t.data),e},tersifyDocument:function(t){return{nodes:t.nodes}},tersifyInline:function(t){var e={};return e.kind=t.kind,e.type=t.type,t.isVoid||(e.nodes=t.nodes),t.isVoid&&(e.isVoid=t.isVoid),(0,x.default)(t.data)||(e.data=t.data),e},tersifyMark:function(t){var e={};return e.type=t.type,(0,x.default)(t.data)||(e.data=t.data),e},tersifyRange:function(t){var e={};return e.text=t.text,(0,x.default)(t.marks)||(e.marks=t.marks),e},tersifyState:function(t){return t.document},tersifyText:function(t){return 1==t.ranges.length&&null==t.ranges[0].marks?{kind:t.kind,text:t.ranges[0].text}:{kind:t.kind,ranges:t.ranges}},untersifyBlock:function(t){return!t.isVoid&&t.nodes&&t.nodes.length?t:{data:t.data,kind:t.kind,type:t.type,isVoid:t.isVoid,nodes:[{kind:"text",text:""}]}},untersifyInline:function(t){return!t.isVoid&&t.nodes&&t.nodes.length?t:{data:t.data,kind:t.kind,type:t.type,isVoid:t.isVoid,nodes:[{kind:"text",text:""}]}},untersifyRange:function(t){return{kind:"range",text:t.text,marks:t.marks||[]}},untersifyState:function(t){return{kind:"state",document:{kind:"document",nodes:t.nodes}}},untersifyText:function(t){return t.ranges?t:{kind:t.kind,ranges:[{text:t.text}]}}};e.default=v},function(t,e){"use strict";function n(t,e){var n=e.get(t),r=e.slice(0,t).reduce(function(t,e){return t+=e.text.length},0);return{start:r,end:r+n.text.length}}function r(t,e){3==t.nodeType&&(t=t.parentNode);var n=t.closest(l),r=t.querySelectorAll(l),o=void 0;if(n)o=n.getAttribute(u);else if(r.length){var i=r[0];0!=e&&(i=r[r.length-1],e=i.textContent.length),o=i.getAttribute(u)}else for(;t=t.parentNode;){var a=t.querySelector(l);if(a){o=a.getAttribute(u),e=a.textContent.length;break}}if(!o)throw new Error("Unable to find offset key for "+t+' with offset "'+e+'".');var c=s(o);return{key:c.key,index:c.index,offset:e}}function o(t,e){var r=t.key,o=t.index,s=t.offset,i=n(o,e),a=i.start,c=i.end;return s=a+s,s=Math.max(s,a),s=Math.min(s,c),{key:r,index:o,start:a,end:c,offset:s}}function s(t){var e=c.exec(t);if(!e)throw new Error('Invalid offset key string "'+t+'".');var n=a(e,3),r=(n[0],n[1]),o=n[2];return{key:r,index:parseInt(o,10)}}function i(t){return t.key+"-"+t.index}Object.defineProperty(e,"__esModule",{value:!0});var a=function(){function t(t,e){var n=[],r=!0,o=!1,s=void 0;try{for(var i,a=t[Symbol.iterator]();!(r=(i=a.next()).done)&&(n.push(i.value),!e||n.length!==e);r=!0);}catch(c){o=!0,s=c}finally{try{!r&&a.return&&a.return()}finally{if(o)throw s}}return n}return function(e,n){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),c=/^(\w+)(?:-(\d+))?$/,u="data-offset-key",l="["+u+"]";e.default={findBounds:n,findKey:r,findPoint:o,parse:s,stringify:i}},function(t,e,n){"use strict";function r(t){return function(e,n,r){return"function"!=typeof e&&(e=h(e,r,n)),n=Array.isArray(n)?d(n):l(n),t(e,n)}}function o(t,e,n){return("function"==typeof e?e:p(e,n))(t)}function s(t,e,n){return y(t,e,n)}t.exports=s;var i=n(69),a=n(28),c=a.findOne,u=a.findAll,l=a.getChildren,d=a.removeSubsets,f=n(38).falseFunc,p=n(178),h=p.compileUnsafe,g=p.compileToken,y=r(function(t,e){return t!==f&&e&&0!==e.length?u(t,e):[]}),m=r(function(t,e){return t!==f&&e&&0!==e.length?c(t,e):null});s.compile=p,s.filters=i.filters,s.pseudos=i.pseudos,s.selectAll=y,s.selectOne=m,s.is=o,s.parse=p,s.iterate=y,s._compileUnsafe=h,s._compileToken=g},function(t,e,n){var r=n(28),o=r.hasAttrib,s=r.getAttributeValue,i=n(38).falseFunc,a=/[-[\]{}()*+?.,\\^$|#\s]/g,c={__proto__:null,equals:function(t,e){var n=e.name,r=e.value;return e.ignoreCase?(r=r.toLowerCase(),function(e){var o=s(e,n);return null!=o&&o.toLowerCase()===r&&t(e)}):function(e){return s(e,n)===r&&t(e)}},hyphen:function(t,e){var n=e.name,r=e.value,o=r.length;return e.ignoreCase?(r=r.toLowerCase(),function(e){var i=s(e,n);return null!=i&&(i.length===o||"-"===i.charAt(o))&&i.substr(0,o).toLowerCase()===r&&t(e)}):function(e){var i=s(e,n);return null!=i&&i.substr(0,o)===r&&(i.length===o||"-"===i.charAt(o))&&t(e)}},element:function(t,e){var n=e.name,r=e.value;if(/\s/.test(r))return i;r=r.replace(a,"\\$&");var o="(?:^|\\s)"+r+"(?:$|\\s)",c=e.ignoreCase?"i":"",u=new RegExp(o,c);return function(e){var r=s(e,n);return null!=r&&u.test(r)&&t(e)}},exists:function(t,e){var n=e.name;return function(e){return o(e,n)&&t(e)}},start:function(t,e){var n=e.name,r=e.value,o=r.length;return 0===o?i:e.ignoreCase?(r=r.toLowerCase(),function(e){var i=s(e,n);return null!=i&&i.substr(0,o).toLowerCase()===r&&t(e)}):function(e){var i=s(e,n);return null!=i&&i.substr(0,o)===r&&t(e)}},end:function(t,e){var n=e.name,r=e.value,o=-r.length;return 0===o?i:e.ignoreCase?(r=r.toLowerCase(),function(e){var i=s(e,n);return null!=i&&i.substr(o).toLowerCase()===r&&t(e)}):function(e){var i=s(e,n);return null!=i&&i.substr(o)===r&&t(e)}},any:function(t,e){var n=e.name,r=e.value;if(""===r)return i;if(e.ignoreCase){var o=new RegExp(r.replace(a,"\\$&"),"i");return function(e){var r=s(e,n);return null!=r&&o.test(r)&&t(e)}}return function(e){var o=s(e,n);return null!=o&&o.indexOf(r)>=0&&t(e)}},not:function(t,e){var n=e.name,r=e.value;return""===r?function(e){return!!s(e,n)&&t(e)}:e.ignoreCase?(r=r.toLowerCase(),function(e){var o=s(e,n);return null!=o&&o.toLowerCase()!==r&&t(e)}):function(e){return s(e,n)!==r&&t(e)}}};t.exports={compile:function(t,e,n){if(n&&n.strict&&(e.ignoreCase||"not"===e.action))throw SyntaxError("Unsupported attribute selector");return c[e.action](t,e)},rules:c}},function(t,e){var n=t.exports={get firstChild(){var t=this.children;return t&&t[0]||null},get lastChild(){var t=this.children;return t&&t[t.length-1]||null},get nodeType(){return o[this.type]||o.element}},r={tagName:"name",childNodes:"children",parentNode:"parent",previousSibling:"prev",nextSibling:"next",nodeValue:"data"},o={element:1,text:3,cdata:4,comment:8};Object.keys(r).forEach(function(t){var e=r[t];Object.defineProperty(n,t,{get:function(){return this[e]||null},set:function(t){return this[e]=t,t}})})},function(t,e,n){"use strict";var r=n(10),o={listen:function(t,e,n){return t.addEventListener?(t.addEventListener(e,n,!1),{remove:function(){t.removeEventListener(e,n,!1)}}):t.attachEvent?(t.attachEvent("on"+e,n),{remove:function(){t.detachEvent("on"+e,n)}}):void 0},capture:function(t,e,n){return t.addEventListener?(t.addEventListener(e,n,!0),{remove:function(){t.removeEventListener(e,n,!0)}}):{remove:r}},registerDefault:function(){}};t.exports=o},function(t,e){"use strict";function n(t){try{t.focus()}catch(e){}}t.exports=n},function(t,e){"use strict";function n(){if("undefined"==typeof document)return null;try{return document.activeElement||document.body}catch(t){return document.body}}t.exports=n},function(t,e,n){function r(t,e){this._options=e||{},this._cbs=t||{},this._tagname="",this._attribname="",this._attribvalue="",this._attribs=null,this._stack=[],this.startIndex=0,this.endIndex=null,this._lowerCaseTagNames="lowerCaseTags"in this._options?!!this._options.lowerCaseTags:!this._options.xmlMode,this._lowerCaseAttributeNames="lowerCaseAttributeNames"in this._options?!!this._options.lowerCaseAttributeNames:!this._options.xmlMode,this._tokenizer=new o(this._options,this),this._cbs.onparserinit&&this._cbs.onparserinit(this)}var o=n(116),s={input:!0,option:!0,optgroup:!0,select:!0,button:!0,datalist:!0,textarea:!0},i={tr:{tr:!0,th:!0,td:!0},th:{th:!0},td:{thead:!0,th:!0,td:!0},body:{head:!0,link:!0,script:!0},li:{li:!0},p:{p:!0},h1:{p:!0},h2:{p:!0},h3:{p:!0},h4:{p:!0},h5:{p:!0},h6:{p:!0},select:s,input:s,output:s,button:s,datalist:s,textarea:s,option:{option:!0},optgroup:{optgroup:!0}},a={__proto__:null,area:!0,base:!0,basefont:!0,br:!0,col:!0,command:!0,embed:!0,frame:!0,hr:!0,img:!0,input:!0,isindex:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0,path:!0,circle:!0,ellipse:!0,line:!0,rect:!0,use:!0,stop:!0,polyline:!0,polygon:!0},c=/\s|\//;n(59).inherits(r,n(77).EventEmitter),r.prototype._updatePosition=function(t){null===this.endIndex?this._tokenizer._sectionStart<=t?this.startIndex=0:this.startIndex=this._tokenizer._sectionStart-t:this.startIndex=this.endIndex+1,this.endIndex=this._tokenizer.getAbsoluteIndex()},r.prototype.ontext=function(t){this._updatePosition(1),this.endIndex--,this._cbs.ontext&&this._cbs.ontext(t)},r.prototype.onopentagname=function(t){if(this._lowerCaseTagNames&&(t=t.toLowerCase()),this._tagname=t,!this._options.xmlMode&&t in i)for(var e;(e=this._stack[this._stack.length-1])in i[t];this.onclosetag(e));!this._options.xmlMode&&t in a||this._stack.push(t),this._cbs.onopentagname&&this._cbs.onopentagname(t),this._cbs.onopentag&&(this._attribs={})},r.prototype.onopentagend=function(){this._updatePosition(1),this._attribs&&(this._cbs.onopentag&&this._cbs.onopentag(this._tagname,this._attribs),this._attribs=null),!this._options.xmlMode&&this._cbs.onclosetag&&this._tagname in a&&this._cbs.onclosetag(this._tagname),this._tagname=""},r.prototype.onclosetag=function(t){if(this._updatePosition(1),this._lowerCaseTagNames&&(t=t.toLowerCase()),!this._stack.length||t in a&&!this._options.xmlMode)this._options.xmlMode||"br"!==t&&"p"!==t||(this.onopentagname(t),this._closeCurrentTag());else{var e=this._stack.lastIndexOf(t);if(e!==-1)if(this._cbs.onclosetag)for(e=this._stack.length-e;e--;)this._cbs.onclosetag(this._stack.pop());else this._stack.length=e;else"p"!==t||this._options.xmlMode||(this.onopentagname(t),this._closeCurrentTag())}},r.prototype.onselfclosingtag=function(){this._options.xmlMode||this._options.recognizeSelfClosing?this._closeCurrentTag():this.onopentagend()},r.prototype._closeCurrentTag=function(){var t=this._tagname;this.onopentagend(),this._stack[this._stack.length-1]===t&&(this._cbs.onclosetag&&this._cbs.onclosetag(t),this._stack.pop())},r.prototype.onattribname=function(t){this._lowerCaseAttributeNames&&(t=t.toLowerCase()),this._attribname=t},r.prototype.onattribdata=function(t){this._attribvalue+=t},r.prototype.onattribend=function(){this._cbs.onattribute&&this._cbs.onattribute(this._attribname,this._attribvalue),this._attribs&&!Object.prototype.hasOwnProperty.call(this._attribs,this._attribname)&&(this._attribs[this._attribname]=this._attribvalue),this._attribname="",this._attribvalue=""},r.prototype._getInstructionName=function(t){var e=t.search(c),n=e<0?t:t.substr(0,e);return this._lowerCaseTagNames&&(n=n.toLowerCase()),n},r.prototype.ondeclaration=function(t){if(this._cbs.onprocessinginstruction){var e=this._getInstructionName(t);this._cbs.onprocessinginstruction("!"+e,"!"+t)}},r.prototype.onprocessinginstruction=function(t){if(this._cbs.onprocessinginstruction){var e=this._getInstructionName(t);this._cbs.onprocessinginstruction("?"+e,"?"+t)}},r.prototype.oncomment=function(t){this._updatePosition(4),this._cbs.oncomment&&this._cbs.oncomment(t),this._cbs.oncommentend&&this._cbs.oncommentend()},r.prototype.oncdata=function(t){this._updatePosition(1),this._options.xmlMode||this._options.recognizeCDATA?(this._cbs.oncdatastart&&this._cbs.oncdatastart(),this._cbs.ontext&&this._cbs.ontext(t),this._cbs.oncdataend&&this._cbs.oncdataend()):this.oncomment("[CDATA["+t+"]]")},r.prototype.onerror=function(t){this._cbs.onerror&&this._cbs.onerror(t)},r.prototype.onend=function(){if(this._cbs.onclosetag)for(var t=this._stack.length;t>0;this._cbs.onclosetag(this._stack[--t]));this._cbs.onend&&this._cbs.onend()},r.prototype.reset=function(){this._cbs.onreset&&this._cbs.onreset(),this._tokenizer.reset(),this._tagname="",this._attribname="",this._attribs=null,this._stack=[],this._cbs.onparserinit&&this._cbs.onparserinit(this)},r.prototype.parseComplete=function(t){this.reset(),this.end(t)},r.prototype.write=function(t){this._tokenizer.write(t)},r.prototype.end=function(t){this._tokenizer.end(t)},r.prototype.pause=function(){this._tokenizer.pause()},r.prototype.resume=function(){this._tokenizer.resume()},r.prototype.parseChunk=r.prototype.write,r.prototype.done=r.prototype.end,t.exports=r},function(t,e,n){function r(t){return" "===t||"\n"===t||"\t"===t||"\f"===t||"\r"===t}function o(t,e){return function(n){n===t&&(this._state=e)}}function s(t,e,n){var r=t.toLowerCase();return t===r?function(t){t===r?this._state=e:(this._state=n,this._index--)}:function(o){o===r||o===t?this._state=e:(this._state=n,this._index--)}}function i(t,e){var n=t.toLowerCase();return function(r){r===n||r===t?this._state=e:(this._state=g,this._index--)}}function a(t,e){this._state=p,this._buffer="",this._sectionStart=0,this._index=0,this._bufferOffset=0,this._baseState=p,this._special=gt,this._cbs=e,this._running=!0,this._ended=!1,this._xmlMode=!(!t||!t.xmlMode),this._decodeEntities=!(!t||!t.decodeEntities)}t.exports=a;var c=n(219),u=n(301),l=n(302),d=n(303),f=0,p=f++,h=f++,g=f++,y=f++,m=f++,k=f++,x=f++,v=f++,b=f++,_=f++,w=f++,O=f++,T=f++,E=f++,S=f++,C=f++,A=f++,R=f++,D=f++,I=f++,M=f++,K=f++,P=f++,N=f++,B=f++,j=f++,q=f++,L=f++,F=f++,U=f++,z=f++,J=f++,V=f++,H=f++,W=f++,Y=f++,G=f++,$=f++,X=f++,Q=f++,Z=f++,tt=f++,et=f++,nt=f++,rt=f++,ot=f++,st=f++,it=f++,at=f++,ct=f++,ut=f++,lt=f++,dt=f++,ft=f++,pt=f++,ht=0,gt=ht++,yt=ht++,mt=ht++;a.prototype._stateText=function(t){"<"===t?(this._index>this._sectionStart&&this._cbs.ontext(this._getSection()),this._state=h,this._sectionStart=this._index):this._decodeEntities&&this._special===gt&&"&"===t&&(this._index>this._sectionStart&&this._cbs.ontext(this._getSection()),this._baseState=p,this._state=ut,this._sectionStart=this._index)},a.prototype._stateBeforeTagName=function(t){"/"===t?this._state=m:">"===t||this._special!==gt||r(t)?this._state=p:"!"===t?(this._state=S,this._sectionStart=this._index+1):"?"===t?(this._state=A,this._sectionStart=this._index+1):"<"===t?(this._cbs.ontext(this._getSection()),this._sectionStart=this._index):(this._state=this._xmlMode||"s"!==t&&"S"!==t?g:z,this._sectionStart=this._index)},a.prototype._stateInTagName=function(t){("/"===t||">"===t||r(t))&&(this._emitToken("onopentagname"),this._state=v,this._index--)},a.prototype._stateBeforeCloseingTagName=function(t){r(t)||(">"===t?this._state=p:this._special!==gt?"s"===t||"S"===t?this._state=J:(this._state=p,this._index--):(this._state=k,this._sectionStart=this._index))},a.prototype._stateInCloseingTagName=function(t){(">"===t||r(t))&&(this._emitToken("onclosetag"),this._state=x,this._index--)},a.prototype._stateAfterCloseingTagName=function(t){">"===t&&(this._state=p,this._sectionStart=this._index+1)},a.prototype._stateBeforeAttributeName=function(t){">"===t?(this._cbs.onopentagend(),this._state=p,this._sectionStart=this._index+1):"/"===t?this._state=y:r(t)||(this._state=b,this._sectionStart=this._index)},a.prototype._stateInSelfClosingTag=function(t){">"===t?(this._cbs.onselfclosingtag(),this._state=p,this._sectionStart=this._index+1):r(t)||(this._state=v,this._index--)},a.prototype._stateInAttributeName=function(t){("="===t||"/"===t||">"===t||r(t))&&(this._cbs.onattribname(this._getSection()),this._sectionStart=-1,this._state=_,this._index--)},a.prototype._stateAfterAttributeName=function(t){"="===t?this._state=w:"/"===t||">"===t?(this._cbs.onattribend(),this._state=v,this._index--):r(t)||(this._cbs.onattribend(),this._state=b,this._sectionStart=this._index)},a.prototype._stateBeforeAttributeValue=function(t){'"'===t?(this._state=O,this._sectionStart=this._index+1):"'"===t?(this._state=T,this._sectionStart=this._index+1):r(t)||(this._state=E,this._sectionStart=this._index,this._index--)},a.prototype._stateInAttributeValueDoubleQuotes=function(t){'"'===t?(this._emitToken("onattribdata"),this._cbs.onattribend(),this._state=v):this._decodeEntities&&"&"===t&&(this._emitToken("onattribdata"),this._baseState=this._state,this._state=ut,this._sectionStart=this._index)},a.prototype._stateInAttributeValueSingleQuotes=function(t){"'"===t?(this._emitToken("onattribdata"),this._cbs.onattribend(),this._state=v):this._decodeEntities&&"&"===t&&(this._emitToken("onattribdata"),this._baseState=this._state,this._state=ut,this._sectionStart=this._index)},a.prototype._stateInAttributeValueNoQuotes=function(t){r(t)||">"===t?(this._emitToken("onattribdata"),this._cbs.onattribend(),
this._state=v,this._index--):this._decodeEntities&&"&"===t&&(this._emitToken("onattribdata"),this._baseState=this._state,this._state=ut,this._sectionStart=this._index)},a.prototype._stateBeforeDeclaration=function(t){this._state="["===t?K:"-"===t?R:C},a.prototype._stateInDeclaration=function(t){">"===t&&(this._cbs.ondeclaration(this._getSection()),this._state=p,this._sectionStart=this._index+1)},a.prototype._stateInProcessingInstruction=function(t){">"===t&&(this._cbs.onprocessinginstruction(this._getSection()),this._state=p,this._sectionStart=this._index+1)},a.prototype._stateBeforeComment=function(t){"-"===t?(this._state=D,this._sectionStart=this._index+1):this._state=C},a.prototype._stateInComment=function(t){"-"===t&&(this._state=I)},a.prototype._stateAfterComment1=function(t){"-"===t?this._state=M:this._state=D},a.prototype._stateAfterComment2=function(t){">"===t?(this._cbs.oncomment(this._buffer.substring(this._sectionStart,this._index-2)),this._state=p,this._sectionStart=this._index+1):"-"!==t&&(this._state=D)},a.prototype._stateBeforeCdata1=s("C",P,C),a.prototype._stateBeforeCdata2=s("D",N,C),a.prototype._stateBeforeCdata3=s("A",B,C),a.prototype._stateBeforeCdata4=s("T",j,C),a.prototype._stateBeforeCdata5=s("A",q,C),a.prototype._stateBeforeCdata6=function(t){"["===t?(this._state=L,this._sectionStart=this._index+1):(this._state=C,this._index--)},a.prototype._stateInCdata=function(t){"]"===t&&(this._state=F)},a.prototype._stateAfterCdata1=o("]",U),a.prototype._stateAfterCdata2=function(t){">"===t?(this._cbs.oncdata(this._buffer.substring(this._sectionStart,this._index-2)),this._state=p,this._sectionStart=this._index+1):"]"!==t&&(this._state=L)},a.prototype._stateBeforeSpecial=function(t){"c"===t||"C"===t?this._state=V:"t"===t||"T"===t?this._state=et:(this._state=g,this._index--)},a.prototype._stateBeforeSpecialEnd=function(t){this._special!==yt||"c"!==t&&"C"!==t?this._special!==mt||"t"!==t&&"T"!==t?this._state=p:this._state=st:this._state=$},a.prototype._stateBeforeScript1=i("R",H),a.prototype._stateBeforeScript2=i("I",W),a.prototype._stateBeforeScript3=i("P",Y),a.prototype._stateBeforeScript4=i("T",G),a.prototype._stateBeforeScript5=function(t){("/"===t||">"===t||r(t))&&(this._special=yt),this._state=g,this._index--},a.prototype._stateAfterScript1=s("R",X,p),a.prototype._stateAfterScript2=s("I",Q,p),a.prototype._stateAfterScript3=s("P",Z,p),a.prototype._stateAfterScript4=s("T",tt,p),a.prototype._stateAfterScript5=function(t){">"===t||r(t)?(this._special=gt,this._state=k,this._sectionStart=this._index-6,this._index--):this._state=p},a.prototype._stateBeforeStyle1=i("Y",nt),a.prototype._stateBeforeStyle2=i("L",rt),a.prototype._stateBeforeStyle3=i("E",ot),a.prototype._stateBeforeStyle4=function(t){("/"===t||">"===t||r(t))&&(this._special=mt),this._state=g,this._index--},a.prototype._stateAfterStyle1=s("Y",it,p),a.prototype._stateAfterStyle2=s("L",at,p),a.prototype._stateAfterStyle3=s("E",ct,p),a.prototype._stateAfterStyle4=function(t){">"===t||r(t)?(this._special=gt,this._state=k,this._sectionStart=this._index-5,this._index--):this._state=p},a.prototype._stateBeforeEntity=s("#",lt,dt),a.prototype._stateBeforeNumericEntity=s("X",pt,ft),a.prototype._parseNamedEntityStrict=function(){if(this._sectionStart+1<this._index){var t=this._buffer.substring(this._sectionStart+1,this._index),e=this._xmlMode?d:u;e.hasOwnProperty(t)&&(this._emitPartial(e[t]),this._sectionStart=this._index+1)}},a.prototype._parseLegacyEntity=function(){var t=this._sectionStart+1,e=this._index-t;for(e>6&&(e=6);e>=2;){var n=this._buffer.substr(t,e);if(l.hasOwnProperty(n))return this._emitPartial(l[n]),void(this._sectionStart+=e+1);e--}},a.prototype._stateInNamedEntity=function(t){";"===t?(this._parseNamedEntityStrict(),this._sectionStart+1<this._index&&!this._xmlMode&&this._parseLegacyEntity(),this._state=this._baseState):(t<"a"||t>"z")&&(t<"A"||t>"Z")&&(t<"0"||t>"9")&&(this._xmlMode||this._sectionStart+1===this._index||(this._baseState!==p?"="!==t&&this._parseNamedEntityStrict():this._parseLegacyEntity()),this._state=this._baseState,this._index--)},a.prototype._decodeNumericEntity=function(t,e){var n=this._sectionStart+t;if(n!==this._index){var r=this._buffer.substring(n,this._index),o=parseInt(r,e);this._emitPartial(c(o)),this._sectionStart=this._index}else this._sectionStart--;this._state=this._baseState},a.prototype._stateInNumericEntity=function(t){";"===t?(this._decodeNumericEntity(2,10),this._sectionStart++):(t<"0"||t>"9")&&(this._xmlMode?this._state=this._baseState:this._decodeNumericEntity(2,10),this._index--)},a.prototype._stateInHexEntity=function(t){";"===t?(this._decodeNumericEntity(3,16),this._sectionStart++):(t<"a"||t>"f")&&(t<"A"||t>"F")&&(t<"0"||t>"9")&&(this._xmlMode?this._state=this._baseState:this._decodeNumericEntity(3,16),this._index--)},a.prototype._cleanup=function(){this._sectionStart<0?(this._buffer="",this._index=0,this._bufferOffset+=this._index):this._running&&(this._state===p?(this._sectionStart!==this._index&&this._cbs.ontext(this._buffer.substr(this._sectionStart)),this._buffer="",this._index=0,this._bufferOffset+=this._index):this._sectionStart===this._index?(this._buffer="",this._index=0,this._bufferOffset+=this._index):(this._buffer=this._buffer.substr(this._sectionStart),this._index-=this._sectionStart,this._bufferOffset+=this._sectionStart),this._sectionStart=0)},a.prototype.write=function(t){this._ended&&this._cbs.onerror(Error(".write() after done!")),this._buffer+=t,this._parse()},a.prototype._parse=function(){for(;this._index<this._buffer.length&&this._running;){var t=this._buffer.charAt(this._index);this._state===p?this._stateText(t):this._state===h?this._stateBeforeTagName(t):this._state===g?this._stateInTagName(t):this._state===m?this._stateBeforeCloseingTagName(t):this._state===k?this._stateInCloseingTagName(t):this._state===x?this._stateAfterCloseingTagName(t):this._state===y?this._stateInSelfClosingTag(t):this._state===v?this._stateBeforeAttributeName(t):this._state===b?this._stateInAttributeName(t):this._state===_?this._stateAfterAttributeName(t):this._state===w?this._stateBeforeAttributeValue(t):this._state===O?this._stateInAttributeValueDoubleQuotes(t):this._state===T?this._stateInAttributeValueSingleQuotes(t):this._state===E?this._stateInAttributeValueNoQuotes(t):this._state===S?this._stateBeforeDeclaration(t):this._state===C?this._stateInDeclaration(t):this._state===A?this._stateInProcessingInstruction(t):this._state===R?this._stateBeforeComment(t):this._state===D?this._stateInComment(t):this._state===I?this._stateAfterComment1(t):this._state===M?this._stateAfterComment2(t):this._state===K?this._stateBeforeCdata1(t):this._state===P?this._stateBeforeCdata2(t):this._state===N?this._stateBeforeCdata3(t):this._state===B?this._stateBeforeCdata4(t):this._state===j?this._stateBeforeCdata5(t):this._state===q?this._stateBeforeCdata6(t):this._state===L?this._stateInCdata(t):this._state===F?this._stateAfterCdata1(t):this._state===U?this._stateAfterCdata2(t):this._state===z?this._stateBeforeSpecial(t):this._state===J?this._stateBeforeSpecialEnd(t):this._state===V?this._stateBeforeScript1(t):this._state===H?this._stateBeforeScript2(t):this._state===W?this._stateBeforeScript3(t):this._state===Y?this._stateBeforeScript4(t):this._state===G?this._stateBeforeScript5(t):this._state===$?this._stateAfterScript1(t):this._state===X?this._stateAfterScript2(t):this._state===Q?this._stateAfterScript3(t):this._state===Z?this._stateAfterScript4(t):this._state===tt?this._stateAfterScript5(t):this._state===et?this._stateBeforeStyle1(t):this._state===nt?this._stateBeforeStyle2(t):this._state===rt?this._stateBeforeStyle3(t):this._state===ot?this._stateBeforeStyle4(t):this._state===st?this._stateAfterStyle1(t):this._state===it?this._stateAfterStyle2(t):this._state===at?this._stateAfterStyle3(t):this._state===ct?this._stateAfterStyle4(t):this._state===ut?this._stateBeforeEntity(t):this._state===lt?this._stateBeforeNumericEntity(t):this._state===dt?this._stateInNamedEntity(t):this._state===ft?this._stateInNumericEntity(t):this._state===pt?this._stateInHexEntity(t):this._cbs.onerror(Error("unknown _state"),this._state),this._index++}this._cleanup()},a.prototype.pause=function(){this._running=!1},a.prototype.resume=function(){this._running=!0,this._index<this._buffer.length&&this._parse(),this._ended&&this._finish()},a.prototype.end=function(t){this._ended&&this._cbs.onerror(Error(".end() after done!")),t&&this.write(t),this._ended=!0,this._running&&this._finish()},a.prototype._finish=function(){this._sectionStart<this._index&&this._handleTrailingData(),this._cbs.onend()},a.prototype._handleTrailingData=function(){var t=this._buffer.substr(this._sectionStart);this._state===L||this._state===F||this._state===U?this._cbs.oncdata(t):this._state===D||this._state===I||this._state===M?this._cbs.oncomment(t):this._state!==dt||this._xmlMode?this._state!==ft||this._xmlMode?this._state!==pt||this._xmlMode?this._state!==g&&this._state!==v&&this._state!==w&&this._state!==_&&this._state!==b&&this._state!==T&&this._state!==O&&this._state!==E&&this._state!==k&&this._cbs.ontext(t):(this._decodeNumericEntity(3,16),this._sectionStart<this._index&&(this._state=this._baseState,this._handleTrailingData())):(this._decodeNumericEntity(2,10),this._sectionStart<this._index&&(this._state=this._baseState,this._handleTrailingData())):(this._parseLegacyEntity(),this._sectionStart<this._index&&(this._state=this._baseState,this._handleTrailingData()))},a.prototype.reset=function(){a.call(this,{xmlMode:this._xmlMode,decodeEntities:this._decodeEntities},this._cbs)},a.prototype.getAbsoluteIndex=function(){return this._bufferOffset+this._index},a.prototype._getSection=function(){return this._buffer.substring(this._sectionStart,this._index)},a.prototype._emitToken=function(t){this._cbs[t](this._getSection()),this._sectionStart=-1},a.prototype._emitPartial=function(t){this._baseState!==p?this._cbs.onattribdata(t):this._cbs.ontext(t)}},function(t,e,n){function r(t,e){var n=this._parser=new o(t,e);s.call(this,{decodeStrings:!1}),this.once("finish",function(){n.end()})}t.exports=r;var o=n(115),s=n(43).Writable||n(394).Writable;n(59).inherits(r,s),s.prototype._write=function(t,e,n){this._parser.write(t),n()}},function(t,e){e=t.exports=function(t){if(t&&"object"==typeof t){var e=t.which||t.keyCode||t.charCode;e&&(t=e)}if("number"==typeof t)return s[t];var o=String(t),i=n[o.toLowerCase()];if(i)return i;var i=r[o.toLowerCase()];return i?i:1===o.length?o.charCodeAt(0):void 0};var n=e.code=e.codes={backspace:8,tab:9,enter:13,shift:16,ctrl:17,alt:18,"pause/break":19,"caps lock":20,esc:27,space:32,"page up":33,"page down":34,end:35,home:36,left:37,up:38,right:39,down:40,insert:45,delete:46,command:91,"left command":91,"right command":93,"numpad *":106,"numpad +":107,"numpad -":109,"numpad .":110,"numpad /":111,"num lock":144,"scroll lock":145,"my computer":182,"my calculator":183,";":186,"=":187,",":188,"-":189,".":190,"/":191,"`":192,"[":219,"\\":220,"]":221,"'":222},r=e.aliases={windows:91,"⇧":16,"⌥":18,"⌃":17,"⌘":91,ctl:17,control:17,option:18,pause:19,break:19,caps:20,return:13,escape:27,spc:32,pgup:33,pgdn:34,ins:45,del:46,cmd:91};for(o=97;o<123;o++)n[String.fromCharCode(o)]=o-32;for(var o=48;o<58;o++)n[o-48]=o;for(o=1;o<13;o++)n["f"+o]=o+111;for(o=0;o<10;o++)n["numpad "+o]=o+96;var s=e.names=e.title={};for(o in n)s[n[o]]=o;for(var i in r)n[i]=r[i]},function(t,e,n){function r(t){var e=-1,n=t?t.length:0;for(this.__data__=new o;++e<n;)this.add(t[e])}var o=n(224),s=n(267),i=n(268);r.prototype.add=r.prototype.push=s,r.prototype.has=i,t.exports=r},function(t,e,n){function r(t,e){var n=t?t.length:0;return!!n&&o(t,e,0)>-1}var o=n(123);t.exports=r},function(t,e){function n(t,e,n){for(var r=-1,o=t?t.length:0;++r<o;)if(n(e,t[r]))return!0;return!1}t.exports=n},function(t,e){function n(t,e){for(var n=-1,r=t?t.length:0,o=Array(r);++n<r;)o[n]=e(t[n],n,t);return o}t.exports=n},function(t,e,n){function r(t,e,n){if(e!==e)return o(t,s,n);for(var r=n-1,i=t.length;++r<i;)if(t[r]===e)return r;return-1}var o=n(231),s=n(232);t.exports=r},function(t,e){function n(t,e){return t.has(e)}t.exports=n},function(t,e){function n(t){var e=-1,n=Array(t.size);return t.forEach(function(t){n[++e]=t}),n}t.exports=n},function(t,e){var n=Array.isArray;t.exports=n},function(t,e,n){function r(t){return s(t)&&o(t)}var o=n(74),s=n(76);t.exports=r},function(t,e,n){function r(t){var e=o(t)?c.call(t):"";return e==s||e==i}var o=n(75),s="[object Function]",i="[object GeneratorFunction]",a=Object.prototype,c=a.toString;t.exports=r},function(t,e){t.exports={universal:50,tag:30,attribute:1,pseudo:0,descendant:-1,child:-1,parent:-1,sibling:-1,adjacent:-1}},function(t,e){t.exports={Aacute:"Á",aacute:"á",Abreve:"Ă",abreve:"ă",ac:"∾",acd:"∿",acE:"∾̳",Acirc:"Â",acirc:"â",acute:"´",Acy:"А",acy:"а",AElig:"Æ",aelig:"æ",af:"⁡",Afr:"𝔄",afr:"𝔞",Agrave:"À",agrave:"à",alefsym:"ℵ",aleph:"ℵ",Alpha:"Α",alpha:"α",Amacr:"Ā",amacr:"ā",amalg:"⨿",amp:"&",AMP:"&",andand:"⩕",And:"⩓",and:"∧",andd:"⩜",andslope:"⩘",andv:"⩚",ang:"∠",ange:"⦤",angle:"∠",angmsdaa:"⦨",angmsdab:"⦩",angmsdac:"⦪",angmsdad:"⦫",angmsdae:"⦬",angmsdaf:"⦭",angmsdag:"⦮",angmsdah:"⦯",angmsd:"∡",angrt:"∟",angrtvb:"⊾",angrtvbd:"⦝",angsph:"∢",angst:"Å",angzarr:"⍼",Aogon:"Ą",aogon:"ą",Aopf:"𝔸",aopf:"𝕒",apacir:"⩯",ap:"≈",apE:"⩰",ape:"≊",apid:"≋",apos:"'",ApplyFunction:"⁡",approx:"≈",approxeq:"≊",Aring:"Å",aring:"å",Ascr:"𝒜",ascr:"𝒶",Assign:"≔",ast:"*",asymp:"≈",asympeq:"≍",Atilde:"Ã",atilde:"ã",Auml:"Ä",auml:"ä",awconint:"∳",awint:"⨑",backcong:"≌",backepsilon:"϶",backprime:"‵",backsim:"∽",backsimeq:"⋍",Backslash:"∖",Barv:"⫧",barvee:"⊽",barwed:"⌅",Barwed:"⌆",barwedge:"⌅",bbrk:"⎵",bbrktbrk:"⎶",bcong:"≌",Bcy:"Б",bcy:"б",bdquo:"„",becaus:"∵",because:"∵",Because:"∵",bemptyv:"⦰",bepsi:"϶",bernou:"ℬ",Bernoullis:"ℬ",Beta:"Β",beta:"β",beth:"ℶ",between:"≬",Bfr:"𝔅",bfr:"𝔟",bigcap:"⋂",bigcirc:"◯",bigcup:"⋃",bigodot:"⨀",bigoplus:"⨁",bigotimes:"⨂",bigsqcup:"⨆",bigstar:"★",bigtriangledown:"▽",bigtriangleup:"△",biguplus:"⨄",bigvee:"⋁",bigwedge:"⋀",bkarow:"⤍",blacklozenge:"⧫",blacksquare:"▪",blacktriangle:"▴",blacktriangledown:"▾",blacktriangleleft:"◂",blacktriangleright:"▸",blank:"␣",blk12:"▒",blk14:"░",blk34:"▓",block:"█",bne:"=⃥",bnequiv:"≡⃥",bNot:"⫭",bnot:"⌐",Bopf:"𝔹",bopf:"𝕓",bot:"⊥",bottom:"⊥",bowtie:"⋈",boxbox:"⧉",boxdl:"┐",boxdL:"╕",boxDl:"╖",boxDL:"╗",boxdr:"┌",boxdR:"╒",boxDr:"╓",boxDR:"╔",boxh:"─",boxH:"═",boxhd:"┬",boxHd:"╤",boxhD:"╥",boxHD:"╦",boxhu:"┴",boxHu:"╧",boxhU:"╨",boxHU:"╩",boxminus:"⊟",boxplus:"⊞",boxtimes:"⊠",boxul:"┘",boxuL:"╛",boxUl:"╜",boxUL:"╝",boxur:"└",boxuR:"╘",boxUr:"╙",boxUR:"╚",boxv:"│",boxV:"║",boxvh:"┼",boxvH:"╪",boxVh:"╫",boxVH:"╬",boxvl:"┤",boxvL:"╡",boxVl:"╢",boxVL:"╣",boxvr:"├",boxvR:"╞",boxVr:"╟",boxVR:"╠",bprime:"‵",breve:"˘",Breve:"˘",brvbar:"¦",bscr:"𝒷",Bscr:"ℬ",bsemi:"⁏",bsim:"∽",bsime:"⋍",bsolb:"⧅",bsol:"\\",bsolhsub:"⟈",bull:"•",bullet:"•",bump:"≎",bumpE:"⪮",bumpe:"≏",Bumpeq:"≎",bumpeq:"≏",Cacute:"Ć",cacute:"ć",capand:"⩄",capbrcup:"⩉",capcap:"⩋",cap:"∩",Cap:"⋒",capcup:"⩇",capdot:"⩀",CapitalDifferentialD:"ⅅ",caps:"∩︀",caret:"⁁",caron:"ˇ",Cayleys:"ℭ",ccaps:"⩍",Ccaron:"Č",ccaron:"č",Ccedil:"Ç",ccedil:"ç",Ccirc:"Ĉ",ccirc:"ĉ",Cconint:"∰",ccups:"⩌",ccupssm:"⩐",Cdot:"Ċ",cdot:"ċ",cedil:"¸",Cedilla:"¸",cemptyv:"⦲",cent:"¢",centerdot:"·",CenterDot:"·",cfr:"𝔠",Cfr:"ℭ",CHcy:"Ч",chcy:"ч",check:"✓",checkmark:"✓",Chi:"Χ",chi:"χ",circ:"ˆ",circeq:"≗",circlearrowleft:"↺",circlearrowright:"↻",circledast:"⊛",circledcirc:"⊚",circleddash:"⊝",CircleDot:"⊙",circledR:"®",circledS:"Ⓢ",CircleMinus:"⊖",CirclePlus:"⊕",CircleTimes:"⊗",cir:"○",cirE:"⧃",cire:"≗",cirfnint:"⨐",cirmid:"⫯",cirscir:"⧂",ClockwiseContourIntegral:"∲",CloseCurlyDoubleQuote:"”",CloseCurlyQuote:"’",clubs:"♣",clubsuit:"♣",colon:":",Colon:"∷",Colone:"⩴",colone:"≔",coloneq:"≔",comma:",",commat:"@",comp:"∁",compfn:"∘",complement:"∁",complexes:"ℂ",cong:"≅",congdot:"⩭",Congruent:"≡",conint:"∮",Conint:"∯",ContourIntegral:"∮",copf:"𝕔",Copf:"ℂ",coprod:"∐",Coproduct:"∐",copy:"©",COPY:"©",copysr:"℗",CounterClockwiseContourIntegral:"∳",crarr:"↵",cross:"✗",Cross:"⨯",Cscr:"𝒞",cscr:"𝒸",csub:"⫏",csube:"⫑",csup:"⫐",csupe:"⫒",ctdot:"⋯",cudarrl:"⤸",cudarrr:"⤵",cuepr:"⋞",cuesc:"⋟",cularr:"↶",cularrp:"⤽",cupbrcap:"⩈",cupcap:"⩆",CupCap:"≍",cup:"∪",Cup:"⋓",cupcup:"⩊",cupdot:"⊍",cupor:"⩅",cups:"∪︀",curarr:"↷",curarrm:"⤼",curlyeqprec:"⋞",curlyeqsucc:"⋟",curlyvee:"⋎",curlywedge:"⋏",curren:"¤",curvearrowleft:"↶",curvearrowright:"↷",cuvee:"⋎",cuwed:"⋏",cwconint:"∲",cwint:"∱",cylcty:"⌭",dagger:"†",Dagger:"‡",daleth:"ℸ",darr:"↓",Darr:"↡",dArr:"⇓",dash:"‐",Dashv:"⫤",dashv:"⊣",dbkarow:"⤏",dblac:"˝",Dcaron:"Ď",dcaron:"ď",Dcy:"Д",dcy:"д",ddagger:"‡",ddarr:"⇊",DD:"ⅅ",dd:"ⅆ",DDotrahd:"⤑",ddotseq:"⩷",deg:"°",Del:"∇",Delta:"Δ",delta:"δ",demptyv:"⦱",dfisht:"⥿",Dfr:"𝔇",dfr:"𝔡",dHar:"⥥",dharl:"⇃",dharr:"⇂",DiacriticalAcute:"´",DiacriticalDot:"˙",DiacriticalDoubleAcute:"˝",DiacriticalGrave:"`",DiacriticalTilde:"˜",diam:"⋄",diamond:"⋄",Diamond:"⋄",diamondsuit:"♦",diams:"♦",die:"¨",DifferentialD:"ⅆ",digamma:"ϝ",disin:"⋲",div:"÷",divide:"÷",divideontimes:"⋇",divonx:"⋇",DJcy:"Ђ",djcy:"ђ",dlcorn:"⌞",dlcrop:"⌍",dollar:"$",Dopf:"𝔻",dopf:"𝕕",Dot:"¨",dot:"˙",DotDot:"⃜",doteq:"≐",doteqdot:"≑",DotEqual:"≐",dotminus:"∸",dotplus:"∔",dotsquare:"⊡",doublebarwedge:"⌆",DoubleContourIntegral:"∯",DoubleDot:"¨",DoubleDownArrow:"⇓",DoubleLeftArrow:"⇐",DoubleLeftRightArrow:"⇔",DoubleLeftTee:"⫤",DoubleLongLeftArrow:"⟸",DoubleLongLeftRightArrow:"⟺",DoubleLongRightArrow:"⟹",DoubleRightArrow:"⇒",DoubleRightTee:"⊨",DoubleUpArrow:"⇑",DoubleUpDownArrow:"⇕",DoubleVerticalBar:"∥",DownArrowBar:"⤓",downarrow:"↓",DownArrow:"↓",Downarrow:"⇓",DownArrowUpArrow:"⇵",DownBreve:"̑",downdownarrows:"⇊",downharpoonleft:"⇃",downharpoonright:"⇂",DownLeftRightVector:"⥐",DownLeftTeeVector:"⥞",DownLeftVectorBar:"⥖",DownLeftVector:"↽",DownRightTeeVector:"⥟",DownRightVectorBar:"⥗",DownRightVector:"⇁",DownTeeArrow:"↧",DownTee:"⊤",drbkarow:"⤐",drcorn:"⌟",drcrop:"⌌",Dscr:"𝒟",dscr:"𝒹",DScy:"Ѕ",dscy:"ѕ",dsol:"⧶",Dstrok:"Đ",dstrok:"đ",dtdot:"⋱",dtri:"▿",dtrif:"▾",duarr:"⇵",duhar:"⥯",dwangle:"⦦",DZcy:"Џ",dzcy:"џ",dzigrarr:"⟿",Eacute:"É",eacute:"é",easter:"⩮",Ecaron:"Ě",ecaron:"ě",Ecirc:"Ê",ecirc:"ê",ecir:"≖",ecolon:"≕",Ecy:"Э",ecy:"э",eDDot:"⩷",Edot:"Ė",edot:"ė",eDot:"≑",ee:"ⅇ",efDot:"≒",Efr:"𝔈",efr:"𝔢",eg:"⪚",Egrave:"È",egrave:"è",egs:"⪖",egsdot:"⪘",el:"⪙",Element:"∈",elinters:"⏧",ell:"ℓ",els:"⪕",elsdot:"⪗",Emacr:"Ē",emacr:"ē",empty:"∅",emptyset:"∅",EmptySmallSquare:"◻",emptyv:"∅",EmptyVerySmallSquare:"▫",emsp13:" ",emsp14:" ",emsp:" ",ENG:"Ŋ",eng:"ŋ",ensp:" ",Eogon:"Ę",eogon:"ę",Eopf:"𝔼",eopf:"𝕖",epar:"⋕",eparsl:"⧣",eplus:"⩱",epsi:"ε",Epsilon:"Ε",epsilon:"ε",epsiv:"ϵ",eqcirc:"≖",eqcolon:"≕",eqsim:"≂",eqslantgtr:"⪖",eqslantless:"⪕",Equal:"⩵",equals:"=",EqualTilde:"≂",equest:"≟",Equilibrium:"⇌",equiv:"≡",equivDD:"⩸",eqvparsl:"⧥",erarr:"⥱",erDot:"≓",escr:"ℯ",Escr:"ℰ",esdot:"≐",Esim:"⩳",esim:"≂",Eta:"Η",eta:"η",ETH:"Ð",eth:"ð",Euml:"Ë",euml:"ë",euro:"€",excl:"!",exist:"∃",Exists:"∃",expectation:"ℰ",exponentiale:"ⅇ",ExponentialE:"ⅇ",fallingdotseq:"≒",Fcy:"Ф",fcy:"ф",female:"♀",ffilig:"ﬃ",fflig:"ﬀ",ffllig:"ﬄ",Ffr:"𝔉",ffr:"𝔣",filig:"ﬁ",FilledSmallSquare:"◼",FilledVerySmallSquare:"▪",fjlig:"fj",flat:"♭",fllig:"ﬂ",fltns:"▱",fnof:"ƒ",Fopf:"𝔽",fopf:"𝕗",forall:"∀",ForAll:"∀",fork:"⋔",forkv:"⫙",Fouriertrf:"ℱ",fpartint:"⨍",frac12:"½",frac13:"⅓",frac14:"¼",frac15:"⅕",frac16:"⅙",frac18:"⅛",frac23:"⅔",frac25:"⅖",frac34:"¾",frac35:"⅗",frac38:"⅜",frac45:"⅘",frac56:"⅚",frac58:"⅝",frac78:"⅞",frasl:"⁄",frown:"⌢",fscr:"𝒻",Fscr:"ℱ",gacute:"ǵ",Gamma:"Γ",gamma:"γ",Gammad:"Ϝ",gammad:"ϝ",gap:"⪆",Gbreve:"Ğ",gbreve:"ğ",Gcedil:"Ģ",Gcirc:"Ĝ",gcirc:"ĝ",Gcy:"Г",gcy:"г",Gdot:"Ġ",gdot:"ġ",ge:"≥",gE:"≧",gEl:"⪌",gel:"⋛",geq:"≥",geqq:"≧",geqslant:"⩾",gescc:"⪩",ges:"⩾",gesdot:"⪀",gesdoto:"⪂",gesdotol:"⪄",gesl:"⋛︀",gesles:"⪔",Gfr:"𝔊",gfr:"𝔤",gg:"≫",Gg:"⋙",ggg:"⋙",gimel:"ℷ",GJcy:"Ѓ",gjcy:"ѓ",gla:"⪥",gl:"≷",glE:"⪒",glj:"⪤",gnap:"⪊",gnapprox:"⪊",gne:"⪈",gnE:"≩",gneq:"⪈",gneqq:"≩",gnsim:"⋧",Gopf:"𝔾",gopf:"𝕘",grave:"`",GreaterEqual:"≥",GreaterEqualLess:"⋛",GreaterFullEqual:"≧",GreaterGreater:"⪢",GreaterLess:"≷",GreaterSlantEqual:"⩾",GreaterTilde:"≳",Gscr:"𝒢",gscr:"ℊ",gsim:"≳",gsime:"⪎",gsiml:"⪐",gtcc:"⪧",gtcir:"⩺",gt:">",GT:">",Gt:"≫",gtdot:"⋗",gtlPar:"⦕",gtquest:"⩼",gtrapprox:"⪆",gtrarr:"⥸",gtrdot:"⋗",gtreqless:"⋛",gtreqqless:"⪌",gtrless:"≷",gtrsim:"≳",gvertneqq:"≩︀",gvnE:"≩︀",Hacek:"ˇ",hairsp:" ",half:"½",hamilt:"ℋ",HARDcy:"Ъ",hardcy:"ъ",harrcir:"⥈",harr:"↔",hArr:"⇔",harrw:"↭",Hat:"^",hbar:"ℏ",Hcirc:"Ĥ",hcirc:"ĥ",hearts:"♥",heartsuit:"♥",hellip:"…",hercon:"⊹",hfr:"𝔥",Hfr:"ℌ",HilbertSpace:"ℋ",hksearow:"⤥",hkswarow:"⤦",hoarr:"⇿",homtht:"∻",hookleftarrow:"↩",hookrightarrow:"↪",hopf:"𝕙",Hopf:"ℍ",horbar:"―",HorizontalLine:"─",hscr:"𝒽",Hscr:"ℋ",hslash:"ℏ",Hstrok:"Ħ",hstrok:"ħ",HumpDownHump:"≎",HumpEqual:"≏",hybull:"⁃",hyphen:"‐",Iacute:"Í",iacute:"í",ic:"⁣",Icirc:"Î",icirc:"î",Icy:"И",icy:"и",Idot:"İ",IEcy:"Е",iecy:"е",iexcl:"¡",iff:"⇔",ifr:"𝔦",Ifr:"ℑ",Igrave:"Ì",igrave:"ì",ii:"ⅈ",iiiint:"⨌",iiint:"∭",iinfin:"⧜",iiota:"℩",IJlig:"Ĳ",ijlig:"ĳ",Imacr:"Ī",imacr:"ī",image:"ℑ",ImaginaryI:"ⅈ",imagline:"ℐ",imagpart:"ℑ",imath:"ı",Im:"ℑ",imof:"⊷",imped:"Ƶ",Implies:"⇒",incare:"℅",in:"∈",infin:"∞",infintie:"⧝",inodot:"ı",intcal:"⊺",int:"∫",Int:"∬",integers:"ℤ",Integral:"∫",intercal:"⊺",Intersection:"⋂",intlarhk:"⨗",intprod:"⨼",InvisibleComma:"⁣",InvisibleTimes:"⁢",IOcy:"Ё",iocy:"ё",Iogon:"Į",iogon:"į",Iopf:"𝕀",iopf:"𝕚",Iota:"Ι",iota:"ι",iprod:"⨼",iquest:"¿",iscr:"𝒾",Iscr:"ℐ",isin:"∈",isindot:"⋵",isinE:"⋹",isins:"⋴",isinsv:"⋳",isinv:"∈",it:"⁢",Itilde:"Ĩ",itilde:"ĩ",Iukcy:"І",iukcy:"і",Iuml:"Ï",iuml:"ï",Jcirc:"Ĵ",jcirc:"ĵ",Jcy:"Й",jcy:"й",Jfr:"𝔍",jfr:"𝔧",jmath:"ȷ",Jopf:"𝕁",jopf:"𝕛",Jscr:"𝒥",jscr:"𝒿",Jsercy:"Ј",jsercy:"ј",Jukcy:"Є",jukcy:"є",Kappa:"Κ",kappa:"κ",kappav:"ϰ",Kcedil:"Ķ",kcedil:"ķ",Kcy:"К",kcy:"к",Kfr:"𝔎",kfr:"𝔨",kgreen:"ĸ",KHcy:"Х",khcy:"х",KJcy:"Ќ",kjcy:"ќ",Kopf:"𝕂",kopf:"𝕜",Kscr:"𝒦",kscr:"𝓀",lAarr:"⇚",Lacute:"Ĺ",lacute:"ĺ",laemptyv:"⦴",lagran:"ℒ",Lambda:"Λ",lambda:"λ",lang:"⟨",Lang:"⟪",langd:"⦑",langle:"⟨",lap:"⪅",Laplacetrf:"ℒ",laquo:"«",larrb:"⇤",larrbfs:"⤟",larr:"←",Larr:"↞",lArr:"⇐",larrfs:"⤝",larrhk:"↩",larrlp:"↫",larrpl:"⤹",larrsim:"⥳",larrtl:"↢",latail:"⤙",lAtail:"⤛",lat:"⪫",late:"⪭",lates:"⪭︀",lbarr:"⤌",lBarr:"⤎",lbbrk:"❲",lbrace:"{",lbrack:"[",lbrke:"⦋",lbrksld:"⦏",lbrkslu:"⦍",Lcaron:"Ľ",lcaron:"ľ",Lcedil:"Ļ",lcedil:"ļ",lceil:"⌈",lcub:"{",Lcy:"Л",lcy:"л",ldca:"⤶",ldquo:"“",ldquor:"„",ldrdhar:"⥧",ldrushar:"⥋",ldsh:"↲",le:"≤",lE:"≦",LeftAngleBracket:"⟨",LeftArrowBar:"⇤",leftarrow:"←",LeftArrow:"←",Leftarrow:"⇐",LeftArrowRightArrow:"⇆",leftarrowtail:"↢",LeftCeiling:"⌈",LeftDoubleBracket:"⟦",LeftDownTeeVector:"⥡",LeftDownVectorBar:"⥙",LeftDownVector:"⇃",LeftFloor:"⌊",leftharpoondown:"↽",leftharpoonup:"↼",leftleftarrows:"⇇",leftrightarrow:"↔",LeftRightArrow:"↔",Leftrightarrow:"⇔",leftrightarrows:"⇆",leftrightharpoons:"⇋",leftrightsquigarrow:"↭",LeftRightVector:"⥎",LeftTeeArrow:"↤",LeftTee:"⊣",LeftTeeVector:"⥚",leftthreetimes:"⋋",LeftTriangleBar:"⧏",LeftTriangle:"⊲",LeftTriangleEqual:"⊴",LeftUpDownVector:"⥑",LeftUpTeeVector:"⥠",LeftUpVectorBar:"⥘",LeftUpVector:"↿",LeftVectorBar:"⥒",LeftVector:"↼",lEg:"⪋",leg:"⋚",leq:"≤",leqq:"≦",leqslant:"⩽",lescc:"⪨",les:"⩽",lesdot:"⩿",lesdoto:"⪁",lesdotor:"⪃",lesg:"⋚︀",lesges:"⪓",lessapprox:"⪅",lessdot:"⋖",lesseqgtr:"⋚",lesseqqgtr:"⪋",LessEqualGreater:"⋚",LessFullEqual:"≦",LessGreater:"≶",lessgtr:"≶",LessLess:"⪡",lesssim:"≲",LessSlantEqual:"⩽",LessTilde:"≲",lfisht:"⥼",lfloor:"⌊",Lfr:"𝔏",lfr:"𝔩",lg:"≶",lgE:"⪑",lHar:"⥢",lhard:"↽",lharu:"↼",lharul:"⥪",lhblk:"▄",LJcy:"Љ",ljcy:"љ",llarr:"⇇",ll:"≪",Ll:"⋘",llcorner:"⌞",Lleftarrow:"⇚",llhard:"⥫",lltri:"◺",Lmidot:"Ŀ",lmidot:"ŀ",lmoustache:"⎰",lmoust:"⎰",lnap:"⪉",lnapprox:"⪉",lne:"⪇",lnE:"≨",lneq:"⪇",lneqq:"≨",lnsim:"⋦",loang:"⟬",loarr:"⇽",lobrk:"⟦",longleftarrow:"⟵",LongLeftArrow:"⟵",Longleftarrow:"⟸",longleftrightarrow:"⟷",LongLeftRightArrow:"⟷",Longleftrightarrow:"⟺",longmapsto:"⟼",longrightarrow:"⟶",LongRightArrow:"⟶",Longrightarrow:"⟹",looparrowleft:"↫",looparrowright:"↬",lopar:"⦅",Lopf:"𝕃",lopf:"𝕝",loplus:"⨭",lotimes:"⨴",lowast:"∗",lowbar:"_",LowerLeftArrow:"↙",LowerRightArrow:"↘",loz:"◊",lozenge:"◊",lozf:"⧫",lpar:"(",lparlt:"⦓",lrarr:"⇆",lrcorner:"⌟",lrhar:"⇋",lrhard:"⥭",lrm:"‎",lrtri:"⊿",lsaquo:"‹",lscr:"𝓁",Lscr:"ℒ",lsh:"↰",Lsh:"↰",lsim:"≲",lsime:"⪍",lsimg:"⪏",lsqb:"[",lsquo:"‘",lsquor:"‚",Lstrok:"Ł",lstrok:"ł",ltcc:"⪦",ltcir:"⩹",lt:"<",LT:"<",Lt:"≪",ltdot:"⋖",lthree:"⋋",ltimes:"⋉",ltlarr:"⥶",ltquest:"⩻",ltri:"◃",ltrie:"⊴",ltrif:"◂",ltrPar:"⦖",lurdshar:"⥊",luruhar:"⥦",lvertneqq:"≨︀",lvnE:"≨︀",macr:"¯",male:"♂",malt:"✠",maltese:"✠",Map:"⤅",map:"↦",mapsto:"↦",mapstodown:"↧",mapstoleft:"↤",mapstoup:"↥",marker:"▮",mcomma:"⨩",Mcy:"М",mcy:"м",mdash:"—",mDDot:"∺",measuredangle:"∡",MediumSpace:" ",Mellintrf:"ℳ",Mfr:"𝔐",mfr:"𝔪",mho:"℧",micro:"µ",midast:"*",midcir:"⫰",mid:"∣",middot:"·",minusb:"⊟",minus:"−",minusd:"∸",minusdu:"⨪",MinusPlus:"∓",mlcp:"⫛",mldr:"…",mnplus:"∓",models:"⊧",Mopf:"𝕄",mopf:"𝕞",mp:"∓",mscr:"𝓂",Mscr:"ℳ",mstpos:"∾",Mu:"Μ",mu:"μ",multimap:"⊸",mumap:"⊸",nabla:"∇",Nacute:"Ń",nacute:"ń",nang:"∠⃒",nap:"≉",napE:"⩰̸",napid:"≋̸",napos:"ŉ",napprox:"≉",natural:"♮",naturals:"ℕ",natur:"♮",nbsp:" ",nbump:"≎̸",nbumpe:"≏̸",ncap:"⩃",Ncaron:"Ň",ncaron:"ň",Ncedil:"Ņ",ncedil:"ņ",ncong:"≇",ncongdot:"⩭̸",ncup:"⩂",Ncy:"Н",ncy:"н",ndash:"–",nearhk:"⤤",nearr:"↗",neArr:"⇗",nearrow:"↗",ne:"≠",nedot:"≐̸",NegativeMediumSpace:"​",NegativeThickSpace:"​",NegativeThinSpace:"​",NegativeVeryThinSpace:"​",nequiv:"≢",nesear:"⤨",nesim:"≂̸",NestedGreaterGreater:"≫",NestedLessLess:"≪",NewLine:"\n",nexist:"∄",nexists:"∄",Nfr:"𝔑",nfr:"𝔫",ngE:"≧̸",nge:"≱",ngeq:"≱",ngeqq:"≧̸",ngeqslant:"⩾̸",nges:"⩾̸",nGg:"⋙̸",ngsim:"≵",nGt:"≫⃒",ngt:"≯",ngtr:"≯",nGtv:"≫̸",nharr:"↮",nhArr:"⇎",nhpar:"⫲",ni:"∋",nis:"⋼",nisd:"⋺",niv:"∋",NJcy:"Њ",njcy:"њ",nlarr:"↚",nlArr:"⇍",nldr:"‥",nlE:"≦̸",nle:"≰",nleftarrow:"↚",nLeftarrow:"⇍",nleftrightarrow:"↮",nLeftrightarrow:"⇎",nleq:"≰",nleqq:"≦̸",nleqslant:"⩽̸",nles:"⩽̸",nless:"≮",nLl:"⋘̸",nlsim:"≴",nLt:"≪⃒",nlt:"≮",nltri:"⋪",nltrie:"⋬",nLtv:"≪̸",nmid:"∤",NoBreak:"⁠",NonBreakingSpace:" ",nopf:"𝕟",Nopf:"ℕ",Not:"⫬",not:"¬",NotCongruent:"≢",NotCupCap:"≭",NotDoubleVerticalBar:"∦",NotElement:"∉",NotEqual:"≠",NotEqualTilde:"≂̸",NotExists:"∄",NotGreater:"≯",NotGreaterEqual:"≱",NotGreaterFullEqual:"≧̸",NotGreaterGreater:"≫̸",NotGreaterLess:"≹",NotGreaterSlantEqual:"⩾̸",NotGreaterTilde:"≵",NotHumpDownHump:"≎̸",NotHumpEqual:"≏̸",notin:"∉",notindot:"⋵̸",notinE:"⋹̸",notinva:"∉",notinvb:"⋷",notinvc:"⋶",NotLeftTriangleBar:"⧏̸",NotLeftTriangle:"⋪",NotLeftTriangleEqual:"⋬",NotLess:"≮",NotLessEqual:"≰",NotLessGreater:"≸",NotLessLess:"≪̸",NotLessSlantEqual:"⩽̸",NotLessTilde:"≴",NotNestedGreaterGreater:"⪢̸",NotNestedLessLess:"⪡̸",notni:"∌",notniva:"∌",notnivb:"⋾",notnivc:"⋽",NotPrecedes:"⊀",NotPrecedesEqual:"⪯̸",NotPrecedesSlantEqual:"⋠",NotReverseElement:"∌",NotRightTriangleBar:"⧐̸",NotRightTriangle:"⋫",NotRightTriangleEqual:"⋭",NotSquareSubset:"⊏̸",NotSquareSubsetEqual:"⋢",NotSquareSuperset:"⊐̸",NotSquareSupersetEqual:"⋣",NotSubset:"⊂⃒",NotSubsetEqual:"⊈",NotSucceeds:"⊁",NotSucceedsEqual:"⪰̸",NotSucceedsSlantEqual:"⋡",NotSucceedsTilde:"≿̸",NotSuperset:"⊃⃒",NotSupersetEqual:"⊉",NotTilde:"≁",NotTildeEqual:"≄",NotTildeFullEqual:"≇",NotTildeTilde:"≉",NotVerticalBar:"∤",nparallel:"∦",npar:"∦",nparsl:"⫽⃥",npart:"∂̸",npolint:"⨔",npr:"⊀",nprcue:"⋠",nprec:"⊀",npreceq:"⪯̸",npre:"⪯̸",nrarrc:"⤳̸",nrarr:"↛",nrArr:"⇏",nrarrw:"↝̸",nrightarrow:"↛",nRightarrow:"⇏",nrtri:"⋫",nrtrie:"⋭",nsc:"⊁",nsccue:"⋡",nsce:"⪰̸",Nscr:"𝒩",nscr:"𝓃",nshortmid:"∤",nshortparallel:"∦",nsim:"≁",nsime:"≄",nsimeq:"≄",nsmid:"∤",nspar:"∦",nsqsube:"⋢",nsqsupe:"⋣",nsub:"⊄",nsubE:"⫅̸",nsube:"⊈",nsubset:"⊂⃒",nsubseteq:"⊈",nsubseteqq:"⫅̸",nsucc:"⊁",nsucceq:"⪰̸",nsup:"⊅",nsupE:"⫆̸",nsupe:"⊉",nsupset:"⊃⃒",nsupseteq:"⊉",nsupseteqq:"⫆̸",ntgl:"≹",Ntilde:"Ñ",ntilde:"ñ",ntlg:"≸",ntriangleleft:"⋪",ntrianglelefteq:"⋬",ntriangleright:"⋫",ntrianglerighteq:"⋭",Nu:"Ν",nu:"ν",num:"#",numero:"№",numsp:" ",nvap:"≍⃒",nvdash:"⊬",nvDash:"⊭",nVdash:"⊮",nVDash:"⊯",nvge:"≥⃒",nvgt:">⃒",nvHarr:"⤄",nvinfin:"⧞",nvlArr:"⤂",nvle:"≤⃒",nvlt:"<⃒",nvltrie:"⊴⃒",nvrArr:"⤃",nvrtrie:"⊵⃒",nvsim:"∼⃒",nwarhk:"⤣",nwarr:"↖",nwArr:"⇖",nwarrow:"↖",nwnear:"⤧",Oacute:"Ó",oacute:"ó",oast:"⊛",Ocirc:"Ô",ocirc:"ô",ocir:"⊚",Ocy:"О",ocy:"о",odash:"⊝",Odblac:"Ő",odblac:"ő",odiv:"⨸",odot:"⊙",odsold:"⦼",OElig:"Œ",oelig:"œ",ofcir:"⦿",Ofr:"𝔒",ofr:"𝔬",ogon:"˛",Ograve:"Ò",ograve:"ò",ogt:"⧁",ohbar:"⦵",ohm:"Ω",oint:"∮",olarr:"↺",olcir:"⦾",olcross:"⦻",oline:"‾",olt:"⧀",Omacr:"Ō",omacr:"ō",Omega:"Ω",omega:"ω",Omicron:"Ο",omicron:"ο",omid:"⦶",ominus:"⊖",Oopf:"𝕆",oopf:"𝕠",opar:"⦷",OpenCurlyDoubleQuote:"“",OpenCurlyQuote:"‘",operp:"⦹",oplus:"⊕",orarr:"↻",Or:"⩔",or:"∨",ord:"⩝",order:"ℴ",orderof:"ℴ",ordf:"ª",ordm:"º",origof:"⊶",oror:"⩖",orslope:"⩗",orv:"⩛",oS:"Ⓢ",Oscr:"𝒪",oscr:"ℴ",Oslash:"Ø",oslash:"ø",osol:"⊘",Otilde:"Õ",otilde:"õ",otimesas:"⨶",Otimes:"⨷",otimes:"⊗",Ouml:"Ö",ouml:"ö",ovbar:"⌽",OverBar:"‾",OverBrace:"⏞",OverBracket:"⎴",OverParenthesis:"⏜",para:"¶",parallel:"∥",par:"∥",parsim:"⫳",parsl:"⫽",part:"∂",PartialD:"∂",Pcy:"П",pcy:"п",percnt:"%",period:".",permil:"‰",perp:"⊥",pertenk:"‱",Pfr:"𝔓",pfr:"𝔭",Phi:"Φ",phi:"φ",phiv:"ϕ",phmmat:"ℳ",phone:"☎",Pi:"Π",pi:"π",pitchfork:"⋔",piv:"ϖ",planck:"ℏ",planckh:"ℎ",plankv:"ℏ",plusacir:"⨣",plusb:"⊞",pluscir:"⨢",plus:"+",plusdo:"∔",plusdu:"⨥",pluse:"⩲",PlusMinus:"±",plusmn:"±",plussim:"⨦",plustwo:"⨧",pm:"±",Poincareplane:"ℌ",pointint:"⨕",popf:"𝕡",Popf:"ℙ",pound:"£",prap:"⪷",Pr:"⪻",pr:"≺",prcue:"≼",precapprox:"⪷",prec:"≺",preccurlyeq:"≼",Precedes:"≺",PrecedesEqual:"⪯",PrecedesSlantEqual:"≼",PrecedesTilde:"≾",preceq:"⪯",precnapprox:"⪹",precneqq:"⪵",precnsim:"⋨",pre:"⪯",prE:"⪳",precsim:"≾",prime:"′",Prime:"″",primes:"ℙ",prnap:"⪹",prnE:"⪵",prnsim:"⋨",prod:"∏",Product:"∏",profalar:"⌮",profline:"⌒",profsurf:"⌓",prop:"∝",Proportional:"∝",Proportion:"∷",propto:"∝",prsim:"≾",prurel:"⊰",Pscr:"𝒫",pscr:"𝓅",Psi:"Ψ",psi:"ψ",puncsp:" ",Qfr:"𝔔",qfr:"𝔮",qint:"⨌",qopf:"𝕢",Qopf:"ℚ",qprime:"⁗",Qscr:"𝒬",qscr:"𝓆",quaternions:"ℍ",quatint:"⨖",quest:"?",questeq:"≟",quot:'"',QUOT:'"',rAarr:"⇛",race:"∽̱",Racute:"Ŕ",racute:"ŕ",radic:"√",raemptyv:"⦳",rang:"⟩",Rang:"⟫",rangd:"⦒",range:"⦥",rangle:"⟩",raquo:"»",rarrap:"⥵",rarrb:"⇥",rarrbfs:"⤠",rarrc:"⤳",rarr:"→",Rarr:"↠",rArr:"⇒",rarrfs:"⤞",rarrhk:"↪",rarrlp:"↬",rarrpl:"⥅",rarrsim:"⥴",Rarrtl:"⤖",rarrtl:"↣",rarrw:"↝",ratail:"⤚",rAtail:"⤜",ratio:"∶",rationals:"ℚ",rbarr:"⤍",rBarr:"⤏",RBarr:"⤐",rbbrk:"❳",rbrace:"}",rbrack:"]",rbrke:"⦌",rbrksld:"⦎",rbrkslu:"⦐",Rcaron:"Ř",rcaron:"ř",Rcedil:"Ŗ",rcedil:"ŗ",rceil:"⌉",rcub:"}",Rcy:"Р",rcy:"р",rdca:"⤷",rdldhar:"⥩",rdquo:"”",rdquor:"”",rdsh:"↳",real:"ℜ",realine:"ℛ",realpart:"ℜ",reals:"ℝ",Re:"ℜ",rect:"▭",reg:"®",REG:"®",ReverseElement:"∋",ReverseEquilibrium:"⇋",ReverseUpEquilibrium:"⥯",rfisht:"⥽",rfloor:"⌋",rfr:"𝔯",Rfr:"ℜ",rHar:"⥤",rhard:"⇁",rharu:"⇀",rharul:"⥬",Rho:"Ρ",rho:"ρ",rhov:"ϱ",RightAngleBracket:"⟩",RightArrowBar:"⇥",rightarrow:"→",RightArrow:"→",Rightarrow:"⇒",RightArrowLeftArrow:"⇄",rightarrowtail:"↣",RightCeiling:"⌉",RightDoubleBracket:"⟧",RightDownTeeVector:"⥝",RightDownVectorBar:"⥕",RightDownVector:"⇂",RightFloor:"⌋",rightharpoondown:"⇁",rightharpoonup:"⇀",rightleftarrows:"⇄",rightleftharpoons:"⇌",rightrightarrows:"⇉",rightsquigarrow:"↝",RightTeeArrow:"↦",RightTee:"⊢",RightTeeVector:"⥛",rightthreetimes:"⋌",RightTriangleBar:"⧐",RightTriangle:"⊳",RightTriangleEqual:"⊵",RightUpDownVector:"⥏",RightUpTeeVector:"⥜",RightUpVectorBar:"⥔",RightUpVector:"↾",RightVectorBar:"⥓",RightVector:"⇀",ring:"˚",risingdotseq:"≓",rlarr:"⇄",rlhar:"⇌",rlm:"‏",rmoustache:"⎱",rmoust:"⎱",rnmid:"⫮",roang:"⟭",roarr:"⇾",robrk:"⟧",ropar:"⦆",ropf:"𝕣",Ropf:"ℝ",roplus:"⨮",rotimes:"⨵",RoundImplies:"⥰",rpar:")",rpargt:"⦔",rppolint:"⨒",rrarr:"⇉",Rrightarrow:"⇛",rsaquo:"›",rscr:"𝓇",Rscr:"ℛ",rsh:"↱",Rsh:"↱",rsqb:"]",rsquo:"’",rsquor:"’",rthree:"⋌",rtimes:"⋊",rtri:"▹",rtrie:"⊵",rtrif:"▸",rtriltri:"⧎",RuleDelayed:"⧴",ruluhar:"⥨",rx:"℞",Sacute:"Ś",sacute:"ś",sbquo:"‚",scap:"⪸",Scaron:"Š",scaron:"š",Sc:"⪼",sc:"≻",sccue:"≽",
sce:"⪰",scE:"⪴",Scedil:"Ş",scedil:"ş",Scirc:"Ŝ",scirc:"ŝ",scnap:"⪺",scnE:"⪶",scnsim:"⋩",scpolint:"⨓",scsim:"≿",Scy:"С",scy:"с",sdotb:"⊡",sdot:"⋅",sdote:"⩦",searhk:"⤥",searr:"↘",seArr:"⇘",searrow:"↘",sect:"§",semi:";",seswar:"⤩",setminus:"∖",setmn:"∖",sext:"✶",Sfr:"𝔖",sfr:"𝔰",sfrown:"⌢",sharp:"♯",SHCHcy:"Щ",shchcy:"щ",SHcy:"Ш",shcy:"ш",ShortDownArrow:"↓",ShortLeftArrow:"←",shortmid:"∣",shortparallel:"∥",ShortRightArrow:"→",ShortUpArrow:"↑",shy:"­",Sigma:"Σ",sigma:"σ",sigmaf:"ς",sigmav:"ς",sim:"∼",simdot:"⩪",sime:"≃",simeq:"≃",simg:"⪞",simgE:"⪠",siml:"⪝",simlE:"⪟",simne:"≆",simplus:"⨤",simrarr:"⥲",slarr:"←",SmallCircle:"∘",smallsetminus:"∖",smashp:"⨳",smeparsl:"⧤",smid:"∣",smile:"⌣",smt:"⪪",smte:"⪬",smtes:"⪬︀",SOFTcy:"Ь",softcy:"ь",solbar:"⌿",solb:"⧄",sol:"/",Sopf:"𝕊",sopf:"𝕤",spades:"♠",spadesuit:"♠",spar:"∥",sqcap:"⊓",sqcaps:"⊓︀",sqcup:"⊔",sqcups:"⊔︀",Sqrt:"√",sqsub:"⊏",sqsube:"⊑",sqsubset:"⊏",sqsubseteq:"⊑",sqsup:"⊐",sqsupe:"⊒",sqsupset:"⊐",sqsupseteq:"⊒",square:"□",Square:"□",SquareIntersection:"⊓",SquareSubset:"⊏",SquareSubsetEqual:"⊑",SquareSuperset:"⊐",SquareSupersetEqual:"⊒",SquareUnion:"⊔",squarf:"▪",squ:"□",squf:"▪",srarr:"→",Sscr:"𝒮",sscr:"𝓈",ssetmn:"∖",ssmile:"⌣",sstarf:"⋆",Star:"⋆",star:"☆",starf:"★",straightepsilon:"ϵ",straightphi:"ϕ",strns:"¯",sub:"⊂",Sub:"⋐",subdot:"⪽",subE:"⫅",sube:"⊆",subedot:"⫃",submult:"⫁",subnE:"⫋",subne:"⊊",subplus:"⪿",subrarr:"⥹",subset:"⊂",Subset:"⋐",subseteq:"⊆",subseteqq:"⫅",SubsetEqual:"⊆",subsetneq:"⊊",subsetneqq:"⫋",subsim:"⫇",subsub:"⫕",subsup:"⫓",succapprox:"⪸",succ:"≻",succcurlyeq:"≽",Succeeds:"≻",SucceedsEqual:"⪰",SucceedsSlantEqual:"≽",SucceedsTilde:"≿",succeq:"⪰",succnapprox:"⪺",succneqq:"⪶",succnsim:"⋩",succsim:"≿",SuchThat:"∋",sum:"∑",Sum:"∑",sung:"♪",sup1:"¹",sup2:"²",sup3:"³",sup:"⊃",Sup:"⋑",supdot:"⪾",supdsub:"⫘",supE:"⫆",supe:"⊇",supedot:"⫄",Superset:"⊃",SupersetEqual:"⊇",suphsol:"⟉",suphsub:"⫗",suplarr:"⥻",supmult:"⫂",supnE:"⫌",supne:"⊋",supplus:"⫀",supset:"⊃",Supset:"⋑",supseteq:"⊇",supseteqq:"⫆",supsetneq:"⊋",supsetneqq:"⫌",supsim:"⫈",supsub:"⫔",supsup:"⫖",swarhk:"⤦",swarr:"↙",swArr:"⇙",swarrow:"↙",swnwar:"⤪",szlig:"ß",Tab:"\t",target:"⌖",Tau:"Τ",tau:"τ",tbrk:"⎴",Tcaron:"Ť",tcaron:"ť",Tcedil:"Ţ",tcedil:"ţ",Tcy:"Т",tcy:"т",tdot:"⃛",telrec:"⌕",Tfr:"𝔗",tfr:"𝔱",there4:"∴",therefore:"∴",Therefore:"∴",Theta:"Θ",theta:"θ",thetasym:"ϑ",thetav:"ϑ",thickapprox:"≈",thicksim:"∼",ThickSpace:"  ",ThinSpace:" ",thinsp:" ",thkap:"≈",thksim:"∼",THORN:"Þ",thorn:"þ",tilde:"˜",Tilde:"∼",TildeEqual:"≃",TildeFullEqual:"≅",TildeTilde:"≈",timesbar:"⨱",timesb:"⊠",times:"×",timesd:"⨰",tint:"∭",toea:"⤨",topbot:"⌶",topcir:"⫱",top:"⊤",Topf:"𝕋",topf:"𝕥",topfork:"⫚",tosa:"⤩",tprime:"‴",trade:"™",TRADE:"™",triangle:"▵",triangledown:"▿",triangleleft:"◃",trianglelefteq:"⊴",triangleq:"≜",triangleright:"▹",trianglerighteq:"⊵",tridot:"◬",trie:"≜",triminus:"⨺",TripleDot:"⃛",triplus:"⨹",trisb:"⧍",tritime:"⨻",trpezium:"⏢",Tscr:"𝒯",tscr:"𝓉",TScy:"Ц",tscy:"ц",TSHcy:"Ћ",tshcy:"ћ",Tstrok:"Ŧ",tstrok:"ŧ",twixt:"≬",twoheadleftarrow:"↞",twoheadrightarrow:"↠",Uacute:"Ú",uacute:"ú",uarr:"↑",Uarr:"↟",uArr:"⇑",Uarrocir:"⥉",Ubrcy:"Ў",ubrcy:"ў",Ubreve:"Ŭ",ubreve:"ŭ",Ucirc:"Û",ucirc:"û",Ucy:"У",ucy:"у",udarr:"⇅",Udblac:"Ű",udblac:"ű",udhar:"⥮",ufisht:"⥾",Ufr:"𝔘",ufr:"𝔲",Ugrave:"Ù",ugrave:"ù",uHar:"⥣",uharl:"↿",uharr:"↾",uhblk:"▀",ulcorn:"⌜",ulcorner:"⌜",ulcrop:"⌏",ultri:"◸",Umacr:"Ū",umacr:"ū",uml:"¨",UnderBar:"_",UnderBrace:"⏟",UnderBracket:"⎵",UnderParenthesis:"⏝",Union:"⋃",UnionPlus:"⊎",Uogon:"Ų",uogon:"ų",Uopf:"𝕌",uopf:"𝕦",UpArrowBar:"⤒",uparrow:"↑",UpArrow:"↑",Uparrow:"⇑",UpArrowDownArrow:"⇅",updownarrow:"↕",UpDownArrow:"↕",Updownarrow:"⇕",UpEquilibrium:"⥮",upharpoonleft:"↿",upharpoonright:"↾",uplus:"⊎",UpperLeftArrow:"↖",UpperRightArrow:"↗",upsi:"υ",Upsi:"ϒ",upsih:"ϒ",Upsilon:"Υ",upsilon:"υ",UpTeeArrow:"↥",UpTee:"⊥",upuparrows:"⇈",urcorn:"⌝",urcorner:"⌝",urcrop:"⌎",Uring:"Ů",uring:"ů",urtri:"◹",Uscr:"𝒰",uscr:"𝓊",utdot:"⋰",Utilde:"Ũ",utilde:"ũ",utri:"▵",utrif:"▴",uuarr:"⇈",Uuml:"Ü",uuml:"ü",uwangle:"⦧",vangrt:"⦜",varepsilon:"ϵ",varkappa:"ϰ",varnothing:"∅",varphi:"ϕ",varpi:"ϖ",varpropto:"∝",varr:"↕",vArr:"⇕",varrho:"ϱ",varsigma:"ς",varsubsetneq:"⊊︀",varsubsetneqq:"⫋︀",varsupsetneq:"⊋︀",varsupsetneqq:"⫌︀",vartheta:"ϑ",vartriangleleft:"⊲",vartriangleright:"⊳",vBar:"⫨",Vbar:"⫫",vBarv:"⫩",Vcy:"В",vcy:"в",vdash:"⊢",vDash:"⊨",Vdash:"⊩",VDash:"⊫",Vdashl:"⫦",veebar:"⊻",vee:"∨",Vee:"⋁",veeeq:"≚",vellip:"⋮",verbar:"|",Verbar:"‖",vert:"|",Vert:"‖",VerticalBar:"∣",VerticalLine:"|",VerticalSeparator:"❘",VerticalTilde:"≀",VeryThinSpace:" ",Vfr:"𝔙",vfr:"𝔳",vltri:"⊲",vnsub:"⊂⃒",vnsup:"⊃⃒",Vopf:"𝕍",vopf:"𝕧",vprop:"∝",vrtri:"⊳",Vscr:"𝒱",vscr:"𝓋",vsubnE:"⫋︀",vsubne:"⊊︀",vsupnE:"⫌︀",vsupne:"⊋︀",Vvdash:"⊪",vzigzag:"⦚",Wcirc:"Ŵ",wcirc:"ŵ",wedbar:"⩟",wedge:"∧",Wedge:"⋀",wedgeq:"≙",weierp:"℘",Wfr:"𝔚",wfr:"𝔴",Wopf:"𝕎",wopf:"𝕨",wp:"℘",wr:"≀",wreath:"≀",Wscr:"𝒲",wscr:"𝓌",xcap:"⋂",xcirc:"◯",xcup:"⋃",xdtri:"▽",Xfr:"𝔛",xfr:"𝔵",xharr:"⟷",xhArr:"⟺",Xi:"Ξ",xi:"ξ",xlarr:"⟵",xlArr:"⟸",xmap:"⟼",xnis:"⋻",xodot:"⨀",Xopf:"𝕏",xopf:"𝕩",xoplus:"⨁",xotime:"⨂",xrarr:"⟶",xrArr:"⟹",Xscr:"𝒳",xscr:"𝓍",xsqcup:"⨆",xuplus:"⨄",xutri:"△",xvee:"⋁",xwedge:"⋀",Yacute:"Ý",yacute:"ý",YAcy:"Я",yacy:"я",Ycirc:"Ŷ",ycirc:"ŷ",Ycy:"Ы",ycy:"ы",yen:"¥",Yfr:"𝔜",yfr:"𝔶",YIcy:"Ї",yicy:"ї",Yopf:"𝕐",yopf:"𝕪",Yscr:"𝒴",yscr:"𝓎",YUcy:"Ю",yucy:"ю",yuml:"ÿ",Yuml:"Ÿ",Zacute:"Ź",zacute:"ź",Zcaron:"Ž",zcaron:"ž",Zcy:"З",zcy:"з",Zdot:"Ż",zdot:"ż",zeetrf:"ℨ",ZeroWidthSpace:"​",Zeta:"Ζ",zeta:"ζ",zfr:"𝔷",Zfr:"ℨ",ZHcy:"Ж",zhcy:"ж",zigrarr:"⇝",zopf:"𝕫",Zopf:"ℤ",Zscr:"𝒵",zscr:"𝓏",zwj:"‍",zwnj:"‌"}},function(t,e){t.exports={amp:"&",apos:"'",gt:">",lt:"<",quot:'"'}},function(t,e,n){"use strict";function r(){}function o(t){try{return t.then}catch(e){return m=e,k}}function s(t,e){try{return t(e)}catch(n){return m=n,k}}function i(t,e,n){try{t(e,n)}catch(r){return m=r,k}}function a(t){if("object"!=typeof this)throw new TypeError("Promises must be constructed via new");if("function"!=typeof t)throw new TypeError("not a function");this._45=0,this._81=0,this._65=null,this._54=null,t!==r&&g(t,this)}function c(t,e,n){return new t.constructor(function(o,s){var i=new a(r);i.then(o,s),u(t,new h(e,n,i))})}function u(t,e){for(;3===t._81;)t=t._65;return a._10&&a._10(t),0===t._81?0===t._45?(t._45=1,void(t._54=e)):1===t._45?(t._45=2,void(t._54=[t._54,e])):void t._54.push(e):void l(t,e)}function l(t,e){y(function(){var n=1===t._81?e.onFulfilled:e.onRejected;if(null===n)return void(1===t._81?d(e.promise,t._65):f(e.promise,t._65));var r=s(n,t._65);r===k?f(e.promise,m):d(e.promise,r)})}function d(t,e){if(e===t)return f(t,new TypeError("A promise cannot be resolved with itself."));if(e&&("object"==typeof e||"function"==typeof e)){var n=o(e);if(n===k)return f(t,m);if(n===t.then&&e instanceof a)return t._81=3,t._65=e,void p(t);if("function"==typeof n)return void g(n.bind(e),t)}t._81=1,t._65=e,p(t)}function f(t,e){t._81=2,t._65=e,a._97&&a._97(t,e),p(t)}function p(t){if(1===t._45&&(u(t,t._54),t._54=null),2===t._45){for(var e=0;e<t._54.length;e++)u(t,t._54[e]);t._54=null}}function h(t,e,n){this.onFulfilled="function"==typeof t?t:null,this.onRejected="function"==typeof e?e:null,this.promise=n}function g(t,e){var n=!1,r=i(t,function(t){n||(n=!0,d(e,t))},function(t){n||(n=!0,f(e,t))});n||r!==k||(n=!0,f(e,m))}var y=n(288),m=null,k={};t.exports=a,a._10=null,a._97=null,a._61=r,a.prototype.then=function(t,e){if(this.constructor!==a)return c(this,t,e);var n=new a(r);return u(this,new h(t,e,n)),n}},function(t,e,n){function r(t){return this instanceof r?void o.call(this,t):new r(t)}t.exports=r;var o=n(78),s=n(42);s.inherits=n(24),s.inherits(r,o),r.prototype._transform=function(t,e,n){n(null,t)}},function(t,e,n){(function(e){function r(t,e){var r=n(25);t=t||{};var o=t.highWaterMark,s=t.objectMode?16:16384;this.highWaterMark=o||0===o?o:s,this.highWaterMark=~~this.highWaterMark,this.buffer=[],this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.objectMode=!!t.objectMode,e instanceof r&&(this.objectMode=this.objectMode||!!t.readableObjectMode),this.defaultEncoding=t.defaultEncoding||"utf8",this.ranOut=!1,this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,t.encoding&&(C||(C=n(135).StringDecoder),this.decoder=new C(t.encoding),this.encoding=t.encoding)}function o(t){n(25);return this instanceof o?(this._readableState=new r(t,this),this.readable=!0,void E.call(this)):new o(t)}function s(t,e,n,r,o){var s=u(e,n);if(s)t.emit("error",s);else if(S.isNullOrUndefined(n))e.reading=!1,e.ended||l(t,e);else if(e.objectMode||n&&n.length>0)if(e.ended&&!o){var a=new Error("stream.push() after EOF");t.emit("error",a)}else if(e.endEmitted&&o){var a=new Error("stream.unshift() after end event");t.emit("error",a)}else!e.decoder||o||r||(n=e.decoder.write(n)),o||(e.reading=!1),e.flowing&&0===e.length&&!e.sync?(t.emit("data",n),t.read(0)):(e.length+=e.objectMode?1:n.length,o?e.buffer.unshift(n):e.buffer.push(n),e.needReadable&&d(t)),p(t,e);else o||(e.reading=!1);return i(e)}function i(t){return!t.ended&&(t.needReadable||t.length<t.highWaterMark||0===t.length)}function a(t){if(t>=R)t=R;else{t--;for(var e=1;e<32;e<<=1)t|=t>>e;t++}return t}function c(t,e){return 0===e.length&&e.ended?0:e.objectMode?0===t?0:1:isNaN(t)||S.isNull(t)?e.flowing&&e.buffer.length?e.buffer[0].length:e.length:t<=0?0:(t>e.highWaterMark&&(e.highWaterMark=a(t)),t>e.length?e.ended?e.length:(e.needReadable=!0,0):t)}function u(t,e){var n=null;return S.isBuffer(e)||S.isString(e)||S.isNullOrUndefined(e)||t.objectMode||(n=new TypeError("Invalid non-string/buffer chunk")),n}function l(t,e){if(e.decoder&&!e.ended){var n=e.decoder.end();n&&n.length&&(e.buffer.push(n),e.length+=e.objectMode?1:n.length)}e.ended=!0,d(t)}function d(t){var n=t._readableState;n.needReadable=!1,n.emittedReadable||(A("emitReadable",n.flowing),n.emittedReadable=!0,n.sync?e.nextTick(function(){f(t)}):f(t))}function f(t){A("emit readable"),t.emit("readable"),k(t)}function p(t,n){n.readingMore||(n.readingMore=!0,e.nextTick(function(){h(t,n)}))}function h(t,e){for(var n=e.length;!e.reading&&!e.flowing&&!e.ended&&e.length<e.highWaterMark&&(A("maybeReadMore read 0"),t.read(0),n!==e.length);)n=e.length;e.readingMore=!1}function g(t){return function(){var e=t._readableState;A("pipeOnDrain",e.awaitDrain),e.awaitDrain&&e.awaitDrain--,0===e.awaitDrain&&T.listenerCount(t,"data")&&(e.flowing=!0,k(t))}}function y(t,n){n.resumeScheduled||(n.resumeScheduled=!0,e.nextTick(function(){m(t,n)}))}function m(t,e){e.resumeScheduled=!1,t.emit("resume"),k(t),e.flowing&&!e.reading&&t.read(0)}function k(t){var e=t._readableState;if(A("flow",e.flowing),e.flowing)do var n=t.read();while(null!==n&&e.flowing)}function x(t,e){var n,r=e.buffer,o=e.length,s=!!e.decoder,i=!!e.objectMode;if(0===r.length)return null;if(0===o)n=null;else if(i)n=r.shift();else if(!t||t>=o)n=s?r.join(""):O.concat(r,o),r.length=0;else if(t<r[0].length){var a=r[0];n=a.slice(0,t),r[0]=a.slice(t)}else if(t===r[0].length)n=r.shift();else{n=s?"":new O(t);for(var c=0,u=0,l=r.length;u<l&&c<t;u++){var a=r[0],d=Math.min(t-c,a.length);s?n+=a.slice(0,d):a.copy(n,c,0,d),d<a.length?r[0]=a.slice(d):r.shift(),c+=d}}return n}function v(t){var n=t._readableState;if(n.length>0)throw new Error("endReadable called on non-empty stream");n.endEmitted||(n.ended=!0,e.nextTick(function(){n.endEmitted||0!==n.length||(n.endEmitted=!0,t.readable=!1,t.emit("end"))}))}function b(t,e){for(var n=0,r=t.length;n<r;n++)e(t[n],n)}function _(t,e){for(var n=0,r=t.length;n<r;n++)if(t[n]===e)return n;return-1}t.exports=o;var w=n(307),O=n(32).Buffer;o.ReadableState=r;var T=n(77).EventEmitter;T.listenerCount||(T.listenerCount=function(t,e){return t.listeners(e).length});var E=n(43),S=n(42);S.inherits=n(24);var C,A=n(395);A=A&&A.debuglog?A.debuglog("stream"):function(){},S.inherits(o,E),o.prototype.push=function(t,e){var n=this._readableState;return S.isString(t)&&!n.objectMode&&(e=e||n.defaultEncoding,e!==n.encoding&&(t=new O(t,e),e="")),s(this,n,t,e,!1)},o.prototype.unshift=function(t){var e=this._readableState;return s(this,e,t,"",!0)},o.prototype.setEncoding=function(t){return C||(C=n(135).StringDecoder),this._readableState.decoder=new C(t),this._readableState.encoding=t,this};var R=8388608;o.prototype.read=function(t){A("read",t);var e=this._readableState,n=t;if((!S.isNumber(t)||t>0)&&(e.emittedReadable=!1),0===t&&e.needReadable&&(e.length>=e.highWaterMark||e.ended))return A("read: emitReadable",e.length,e.ended),0===e.length&&e.ended?v(this):d(this),null;if(t=c(t,e),0===t&&e.ended)return 0===e.length&&v(this),null;var r=e.needReadable;A("need readable",r),(0===e.length||e.length-t<e.highWaterMark)&&(r=!0,A("length less than watermark",r)),(e.ended||e.reading)&&(r=!1,A("reading or ended",r)),r&&(A("do read"),e.reading=!0,e.sync=!0,0===e.length&&(e.needReadable=!0),this._read(e.highWaterMark),e.sync=!1),r&&!e.reading&&(t=c(n,e));var o;return o=t>0?x(t,e):null,S.isNull(o)&&(e.needReadable=!0,t=0),e.length-=t,0!==e.length||e.ended||(e.needReadable=!0),n!==t&&e.ended&&0===e.length&&v(this),S.isNull(o)||this.emit("data",o),o},o.prototype._read=function(t){this.emit("error",new Error("not implemented"))},o.prototype.pipe=function(t,n){function r(t){A("onunpipe"),t===d&&s()}function o(){A("onend"),t.end()}function s(){A("cleanup"),t.removeListener("close",c),t.removeListener("finish",u),t.removeListener("drain",y),t.removeListener("error",a),t.removeListener("unpipe",r),d.removeListener("end",o),d.removeListener("end",s),d.removeListener("data",i),!f.awaitDrain||t._writableState&&!t._writableState.needDrain||y()}function i(e){A("ondata");var n=t.write(e);!1===n&&(A("false write response, pause",d._readableState.awaitDrain),d._readableState.awaitDrain++,d.pause())}function a(e){A("onerror",e),l(),t.removeListener("error",a),0===T.listenerCount(t,"error")&&t.emit("error",e)}function c(){t.removeListener("finish",u),l()}function u(){A("onfinish"),t.removeListener("close",c),l()}function l(){A("unpipe"),d.unpipe(t)}var d=this,f=this._readableState;switch(f.pipesCount){case 0:f.pipes=t;break;case 1:f.pipes=[f.pipes,t];break;default:f.pipes.push(t)}f.pipesCount+=1,A("pipe count=%d opts=%j",f.pipesCount,n);var p=(!n||n.end!==!1)&&t!==e.stdout&&t!==e.stderr,h=p?o:s;f.endEmitted?e.nextTick(h):d.once("end",h),t.on("unpipe",r);var y=g(d);return t.on("drain",y),d.on("data",i),t._events&&t._events.error?w(t._events.error)?t._events.error.unshift(a):t._events.error=[a,t._events.error]:t.on("error",a),t.once("close",c),t.once("finish",u),t.emit("pipe",d),f.flowing||(A("pipe resume"),d.resume()),t},o.prototype.unpipe=function(t){var e=this._readableState;if(0===e.pipesCount)return this;if(1===e.pipesCount)return t&&t!==e.pipes?this:(t||(t=e.pipes),e.pipes=null,e.pipesCount=0,e.flowing=!1,t&&t.emit("unpipe",this),this);if(!t){var n=e.pipes,r=e.pipesCount;e.pipes=null,e.pipesCount=0,e.flowing=!1;for(var o=0;o<r;o++)n[o].emit("unpipe",this);return this}var o=_(e.pipes,t);return o===-1?this:(e.pipes.splice(o,1),e.pipesCount-=1,1===e.pipesCount&&(e.pipes=e.pipes[0]),t.emit("unpipe",this),this)},o.prototype.on=function(t,n){var r=E.prototype.on.call(this,t,n);if("data"===t&&!1!==this._readableState.flowing&&this.resume(),"readable"===t&&this.readable){var o=this._readableState;if(!o.readableListening)if(o.readableListening=!0,o.emittedReadable=!1,o.needReadable=!0,o.reading)o.length&&d(this,o);else{var s=this;e.nextTick(function(){A("readable nexttick read 0"),s.read(0)})}}return r},o.prototype.addListener=o.prototype.on,o.prototype.resume=function(){var t=this._readableState;return t.flowing||(A("resume"),t.flowing=!0,t.reading||(A("resume read 0"),this.read(0)),y(this,t)),this},o.prototype.pause=function(){return A("call pause flowing=%j",this._readableState.flowing),!1!==this._readableState.flowing&&(A("pause"),this._readableState.flowing=!1,this.emit("pause")),this},o.prototype.wrap=function(t){var e=this._readableState,n=!1,r=this;t.on("end",function(){if(A("wrapped end"),e.decoder&&!e.ended){var t=e.decoder.end();t&&t.length&&r.push(t)}r.push(null)}),t.on("data",function(o){if(A("wrapped data"),e.decoder&&(o=e.decoder.write(o)),o&&(e.objectMode||o.length)){var s=r.push(o);s||(n=!0,t.pause())}});for(var o in t)S.isFunction(t[o])&&S.isUndefined(this[o])&&(this[o]=function(e){return function(){return t[e].apply(t,arguments)}}(o));var s=["error","close","destroy","pause","resume"];return b(s,function(e){t.on(e,r.emit.bind(r,e))}),r._read=function(e){A("wrapped _read",e),n&&(n=!1,t.resume())},r},o._fromList=x}).call(e,n(13))},function(t,e,n){function r(t){if(t&&!c(t))throw new Error("Unknown encoding: "+t)}function o(t){return t.toString(this.encoding)}function s(t){this.charReceived=t.length%2,this.charLength=this.charReceived?2:0}function i(t){this.charReceived=t.length%3,this.charLength=this.charReceived?3:0}var a=n(32).Buffer,c=a.isEncoding||function(t){switch(t&&t.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}},u=e.StringDecoder=function(t){switch(this.encoding=(t||"utf8").toLowerCase().replace(/[-_]/,""),r(t),this.encoding){case"utf8":this.surrogateSize=3;break;case"ucs2":case"utf16le":this.surrogateSize=2,this.detectIncompleteChar=s;break;case"base64":this.surrogateSize=3,this.detectIncompleteChar=i;break;default:return void(this.write=o)}this.charBuffer=new a(6),this.charReceived=0,this.charLength=0};u.prototype.write=function(t){for(var e="";this.charLength;){var n=t.length>=this.charLength-this.charReceived?this.charLength-this.charReceived:t.length;if(t.copy(this.charBuffer,this.charReceived,0,n),this.charReceived+=n,this.charReceived<this.charLength)return"";t=t.slice(n,t.length),e=this.charBuffer.slice(0,this.charLength).toString(this.encoding);var r=e.charCodeAt(e.length-1);if(!(r>=55296&&r<=56319)){if(this.charReceived=this.charLength=0,0===t.length)return e;break}this.charLength+=this.surrogateSize,e=""}this.detectIncompleteChar(t);var o=t.length;this.charLength&&(t.copy(this.charBuffer,0,t.length-this.charReceived,o),o-=this.charReceived),e+=t.toString(this.encoding,0,o);var o=e.length-1,r=e.charCodeAt(o);if(r>=55296&&r<=56319){var s=this.surrogateSize;return this.charLength+=s,this.charReceived+=s,this.charBuffer.copy(this.charBuffer,s,0,s),t.copy(this.charBuffer,0,0,s),e.substring(0,o)}return e},u.prototype.detectIncompleteChar=function(t){for(var e=t.length>=3?3:t.length;e>0;e--){var n=t[t.length-e];if(1==e&&n>>5==6){this.charLength=2;break}if(e<=2&&n>>4==14){this.charLength=3;break}if(e<=3&&n>>3==30){this.charLength=4;break}}this.charReceived=e},u.prototype.end=function(t){var e="";if(t&&t.length&&(e=this.write(t)),this.charReceived){var n=this.charReceived,r=this.charBuffer,o=this.encoding;e+=r.slice(0,n).toString(o)}return e}},function(t,e){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children=[],t.webpackPolyfill=1),t}},function(t,e){"use strict";function n(t,e){return t+e.charAt(0).toUpperCase()+e.substring(1)}var r={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridColumn:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},o=["Webkit","ms","Moz","O"];Object.keys(r).forEach(function(t){o.forEach(function(e){r[n(e,t)]=r[t]})});var s={background:{backgroundAttachment:!0,backgroundColor:!0,backgroundImage:!0,backgroundPositionX:!0,backgroundPositionY:!0,backgroundRepeat:!0},backgroundPosition:{backgroundPositionX:!0,backgroundPositionY:!0},border:{borderWidth:!0,borderStyle:!0,borderColor:!0},borderBottom:{borderBottomWidth:!0,borderBottomStyle:!0,borderBottomColor:!0},borderLeft:{borderLeftWidth:!0,borderLeftStyle:!0,borderLeftColor:!0},borderRight:{borderRightWidth:!0,borderRightStyle:!0,borderRightColor:!0},borderTop:{borderTopWidth:!0,borderTopStyle:!0,borderTopColor:!0},font:{fontStyle:!0,fontVariant:!0,fontWeight:!0,fontSize:!0,lineHeight:!0,fontFamily:!0},outline:{outlineWidth:!0,outlineStyle:!0,outlineColor:!0}},i={isUnitlessNumber:r,shorthandPropertyExpansions:s};t.exports=i},function(t,e,n){"use strict";function r(){this._callbacks=null,this._contexts=null}var o=n(2),s=n(4),i=n(19);n(1);s(r.prototype,{enqueue:function(t,e){this._callbacks=this._callbacks||[],this._contexts=this._contexts||[],this._callbacks.push(t),this._contexts.push(e)},notifyAll:function(){var t=this._callbacks,e=this._contexts;if(t){t.length!==e.length?o("24"):void 0,this._callbacks=null,this._contexts=null;for(var n=0;n<t.length;n++)t[n].call(e[n]);t.length=0,e.length=0}},checkpoint:function(){return this._callbacks?this._callbacks.length:0},rollback:function(t){this._callbacks&&(this._callbacks.length=t,this._contexts.length=t)},reset:function(){this._callbacks=null,this._contexts=null},destructor:function(){this.reset()}}),i.addPoolingTo(r),t.exports=r},function(t,e,n){"use strict";function r(t){return!!u.hasOwnProperty(t)||!c.hasOwnProperty(t)&&(a.test(t)?(u[t]=!0,!0):(c[t]=!0,!1))}function o(t,e){return null==e||t.hasBooleanValue&&!e||t.hasNumericValue&&isNaN(e)||t.hasPositiveNumericValue&&e<1||t.hasOverloadedBooleanValue&&e===!1}var s=n(34),i=(n(5),n(336),n(8),n(376)),a=(n(3),new RegExp("^["+s.ATTRIBUTE_NAME_START_CHAR+"]["+s.ATTRIBUTE_NAME_CHAR+"]*$")),c={},u={},l={createMarkupForID:function(t){return s.ID_ATTRIBUTE_NAME+"="+i(t)},setAttributeForID:function(t,e){t.setAttribute(s.ID_ATTRIBUTE_NAME,e)},createMarkupForRoot:function(){return s.ROOT_ATTRIBUTE_NAME+'=""'},setAttributeForRoot:function(t){t.setAttribute(s.ROOT_ATTRIBUTE_NAME,"")},createMarkupForProperty:function(t,e){var n=s.properties.hasOwnProperty(t)?s.properties[t]:null;if(n){if(o(n,e))return"";var r=n.attributeName;return n.hasBooleanValue||n.hasOverloadedBooleanValue&&e===!0?r+'=""':r+"="+i(e)}return s.isCustomAttribute(t)?null==e?"":t+"="+i(e):null},createMarkupForCustomAttribute:function(t,e){return r(t)&&null!=e?t+"="+i(e):""},setValueForProperty:function(t,e,n){var r=s.properties.hasOwnProperty(e)?s.properties[e]:null;if(r){var i=r.mutationMethod;if(i)i(t,n);else{if(o(r,n))return void this.deleteValueForProperty(t,e);if(r.mustUseProperty)t[r.propertyName]=n;else{var a=r.attributeName,c=r.attributeNamespace;c?t.setAttributeNS(c,a,""+n):r.hasBooleanValue||r.hasOverloadedBooleanValue&&n===!0?t.setAttribute(a,""):t.setAttribute(a,""+n)}}}else if(s.isCustomAttribute(e))return void l.setValueForAttribute(t,e,n)},setValueForAttribute:function(t,e,n){if(r(e)){null==n?t.removeAttribute(e):t.setAttribute(e,""+n)}},deleteValueForAttribute:function(t,e){t.removeAttribute(e)},deleteValueForProperty:function(t,e){var n=s.properties.hasOwnProperty(e)?s.properties[e]:null;if(n){var r=n.mutationMethod;if(r)r(t,void 0);else if(n.mustUseProperty){var o=n.propertyName;n.hasBooleanValue?t[o]=!1:t[o]=""}else t.removeAttribute(n.attributeName)}else s.isCustomAttribute(e)&&t.removeAttribute(e)}};t.exports=l},function(t,e,n){"use strict";function r(t){return(""+t).replace(v,"$&/")}function o(t,e){this.func=t,this.context=e,this.count=0}function s(t,e,n){var r=t.func,o=t.context;r.call(o,e,t.count++)}function i(t,e,n){if(null==t)return t;var r=o.getPooled(e,n);m(t,s,r),o.release(r)}function a(t,e,n,r){this.result=t,this.keyPrefix=e,this.func=n,this.context=r,this.count=0}function c(t,e,n){var o=t.result,s=t.keyPrefix,i=t.func,a=t.context,c=i.call(a,e,t.count++);Array.isArray(c)?u(c,o,n,y.thatReturnsArgument):null!=c&&(g.isValidElement(c)&&(c=g.cloneAndReplaceKey(c,s+(!c.key||e&&e.key===c.key?"":r(c.key)+"/")+n)),o.push(c))}function u(t,e,n,o,s){var i="";null!=n&&(i=r(n)+"/");var u=a.getPooled(e,i,o,s);m(t,c,u),a.release(u)}function l(t,e,n){if(null==t)return t;var r=[];return u(t,r,null,e,n),r}function d(t,e,n){return null}function f(t,e){return m(t,d,null)}function p(t){var e=[];return u(t,e,null,y.thatReturnsArgument),e}var h=n(19),g=n(11),y=n(10),m=n(103),k=h.twoArgumentPooler,x=h.fourArgumentPooler,v=/\/+/g;o.prototype.destructor=function(){this.func=null,this.context=null,this.count=0},h.addPoolingTo(o,k),a.prototype.destructor=function(){this.result=null,this.keyPrefix=null,this.func=null,this.context=null,this.count=0},h.addPoolingTo(a,x);var b={forEach:i,map:l,mapIntoWithKeyPrefixInternal:u,count:f,toArray:p};t.exports=b},function(t,e,n){"use strict";function r(t,e){var n=_.hasOwnProperty(e)?_[e]:null;O.hasOwnProperty(e)&&(n!==v.OVERRIDE_BASE?d("73",e):void 0),t&&(n!==v.DEFINE_MANY&&n!==v.DEFINE_MANY_MERGED?d("74",e):void 0)}function o(t,e){if(e){"function"==typeof e?d("75"):void 0,h.isValidElement(e)?d("76"):void 0;var n=t.prototype,o=n.__reactAutoBindPairs;e.hasOwnProperty(x)&&w.mixins(t,e.mixins);for(var s in e)if(e.hasOwnProperty(s)&&s!==x){var i=e[s],u=n.hasOwnProperty(s);if(r(u,s),w.hasOwnProperty(s))w[s](t,i);else{var l=_.hasOwnProperty(s),f="function"==typeof i,p=f&&!l&&!u&&e.autobind!==!1;if(p)o.push(s,i),n[s]=i;else if(u){var g=_[s];!l||g!==v.DEFINE_MANY_MERGED&&g!==v.DEFINE_MANY?d("77",g,s):void 0,g===v.DEFINE_MANY_MERGED?n[s]=a(n[s],i):g===v.DEFINE_MANY&&(n[s]=c(n[s],i))}else n[s]=i}}}else;}function s(t,e){if(e)for(var n in e){var r=e[n];if(e.hasOwnProperty(n)){var o=n in w;o?d("78",n):void 0;var s=n in t;s?d("79",n):void 0,t[n]=r}}}function i(t,e){t&&e&&"object"==typeof t&&"object"==typeof e?void 0:d("80");for(var n in e)e.hasOwnProperty(n)&&(void 0!==t[n]?d("81",n):void 0,t[n]=e[n]);return t}function a(t,e){return function(){var n=t.apply(this,arguments),r=e.apply(this,arguments);if(null==n)return r;if(null==r)return n;var o={};return i(o,n),i(o,r),o}}function c(t,e){return function(){t.apply(this,arguments),e.apply(this,arguments)}}function u(t,e){var n=e.bind(t);return n}function l(t){for(var e=t.__reactAutoBindPairs,n=0;n<e.length;n+=2){var r=e[n],o=e[n+1];t[r]=u(t,o)}}var d=n(2),f=n(4),p=n(86),h=n(11),g=(n(92),n(91),n(90)),y=n(29),m=(n(1),n(53)),k=n(18),x=(n(3),k({mixins:null})),v=m({DEFINE_ONCE:null,DEFINE_MANY:null,OVERRIDE_BASE:null,DEFINE_MANY_MERGED:null}),b=[],_={mixins:v.DEFINE_MANY,statics:v.DEFINE_MANY,propTypes:v.DEFINE_MANY,contextTypes:v.DEFINE_MANY,childContextTypes:v.DEFINE_MANY,getDefaultProps:v.DEFINE_MANY_MERGED,getInitialState:v.DEFINE_MANY_MERGED,getChildContext:v.DEFINE_MANY_MERGED,render:v.DEFINE_ONCE,componentWillMount:v.DEFINE_MANY,componentDidMount:v.DEFINE_MANY,componentWillReceiveProps:v.DEFINE_MANY,shouldComponentUpdate:v.DEFINE_ONCE,componentWillUpdate:v.DEFINE_MANY,componentDidUpdate:v.DEFINE_MANY,componentWillUnmount:v.DEFINE_MANY,updateComponent:v.OVERRIDE_BASE},w={displayName:function(t,e){t.displayName=e},mixins:function(t,e){if(e)for(var n=0;n<e.length;n++)o(t,e[n])},childContextTypes:function(t,e){t.childContextTypes=f({},t.childContextTypes,e)},contextTypes:function(t,e){t.contextTypes=f({},t.contextTypes,e)},getDefaultProps:function(t,e){t.getDefaultProps?t.getDefaultProps=a(t.getDefaultProps,e):t.getDefaultProps=e},propTypes:function(t,e){t.propTypes=f({},t.propTypes,e)},statics:function(t,e){s(t,e)},autobind:function(){}},O={replaceState:function(t,e){this.updater.enqueueReplaceState(this,t),e&&this.updater.enqueueCallback(this,e,"replaceState")},isMounted:function(){return this.updater.isMounted(this)}},T=function(){};f(T.prototype,p.prototype,O);var E={createClass:function(t){var e=function(t,n,r){this.__reactAutoBindPairs.length&&l(this),this.props=t,this.context=n,this.refs=y,this.updater=r||g,this.state=null;var o=this.getInitialState?this.getInitialState():null;"object"!=typeof o||Array.isArray(o)?d("82",e.displayName||"ReactCompositeComponent"):void 0,this.state=o};e.prototype=new T,e.prototype.constructor=e,e.prototype.__reactAutoBindPairs=[],b.forEach(o.bind(null,e)),o(e,t),e.getDefaultProps&&(e.defaultProps=e.getDefaultProps()),e.prototype.render?void 0:d("83");for(var n in _)e.prototype[n]||(e.prototype[n]=null);return e},injection:{injectMixin:function(t){b.push(t)}}};t.exports=E},function(t,e,n){"use strict";var r=n(80),o=n(334),s={processChildrenUpdates:o.dangerouslyProcessChildrenUpdates,replaceNodeWithMarkup:r.dangerouslyReplaceNodeWithMarkup,unmountIDFromEnvironment:function(t){}};t.exports=s},function(t,e){"use strict";var n={hasCachedChildNodes:1};t.exports=n},function(t,e,n){"use strict";function r(t,e){var n={_topLevelWrapper:t,_idCounter:1,_ownerDocument:e?e.nodeType===o?e:e.ownerDocument:null,_node:e,_tag:e?e.nodeName.toLowerCase():null,_namespaceURI:e?e.namespaceURI:null};return n}var o=(n(104),9);t.exports=r},function(t,e,n){"use strict";function r(){if(this._rootNodeID&&this._wrapperState.pendingUpdate){this._wrapperState.pendingUpdate=!1;var t=this._currentElement.props,e=c.getValue(t);null!=e&&o(this,Boolean(t.multiple),e)}}function o(t,e,n){var r,o,s=u.getNodeFromInstance(t).options;if(e){for(r={},o=0;o<n.length;o++)r[""+n[o]]=!0;for(o=0;o<s.length;o++){var i=r.hasOwnProperty(s[o].value);s[o].selected!==i&&(s[o].selected=i)}}else{for(r=""+n,o=0;o<s.length;o++)if(s[o].value===r)return void(s[o].selected=!0);s.length&&(s[0].selected=!0)}}function s(t){var e=this._currentElement.props,n=c.executeOnChange(e,t);return this._rootNodeID&&(this._wrapperState.pendingUpdate=!0),l.asap(r,this),n}var i=n(4),a=n(60),c=n(85),u=n(5),l=n(12),d=(n(3),!1),f={getHostProps:function(t,e){return i({},a.getHostProps(t,e),{onChange:t._wrapperState.onChange,value:void 0})},mountWrapper:function(t,e){var n=c.getValue(e);t._wrapperState={pendingUpdate:!1,initialValue:null!=n?n:e.defaultValue,listeners:null,onChange:s.bind(t),wasMultiple:Boolean(e.multiple)},void 0===e.value||void 0===e.defaultValue||d||(d=!0)},getSelectValueContext:function(t){return t._wrapperState.initialValue},postUpdateWrapper:function(t){var e=t._currentElement.props;t._wrapperState.initialValue=void 0;var n=t._wrapperState.wasMultiple;t._wrapperState.wasMultiple=Boolean(e.multiple);var r=c.getValue(e);null!=r?(t._wrapperState.pendingUpdate=!1,o(t,Boolean(e.multiple),r)):n!==Boolean(e.multiple)&&(null!=e.defaultValue?o(t,Boolean(e.multiple),e.defaultValue):o(t,Boolean(e.multiple),e.multiple?[]:""))}};t.exports=f},function(t,e,n){"use strict";function r(){this.reinitializeTransaction()}var o=n(4),s=n(12),i=n(48),a=n(10),c={initialize:a,close:function(){f.isBatchingUpdates=!1}},u={initialize:a,close:s.flushBatchedUpdates.bind(s)},l=[u,c];o(r.prototype,i.Mixin,{getTransactionWrappers:function(){return l}});var d=new r,f={isBatchingUpdates:!1,batchedUpdates:function(t,e,n,r,o,s){var i=f.isBatchingUpdates;f.isBatchingUpdates=!0,i?t(e,n,r,o,s):d.perform(t,null,e,n,r,o,s)}};t.exports=f},function(t,e,n){"use strict";function r(){_||(_=!0,m.EventEmitter.injectReactEventListener(y),m.EventPluginHub.injectEventPluginOrder(i),m.EventPluginUtils.injectComponentTree(d),m.EventPluginUtils.injectTreeTraversal(p),m.EventPluginHub.injectEventPluginsByName({SimpleEventPlugin:b,EnterLeaveEventPlugin:a,ChangeEventPlugin:s,SelectEventPlugin:v,BeforeInputEventPlugin:o}),m.HostComponent.injectGenericComponentClass(l),m.HostComponent.injectTextComponentClass(h),m.DOMProperty.injectDOMPropertyConfig(c),m.DOMProperty.injectDOMPropertyConfig(x),m.EmptyComponent.injectEmptyComponentFactory(function(t){return new f(t)}),m.Updates.injectReconcileTransaction(k),m.Updates.injectBatchingStrategy(g),m.Component.injectEnvironment(u))}var o=n(317),s=n(319),i=n(321),a=n(322),c=n(324),u=n(142),l=n(330),d=n(5),f=n(331),p=n(342),h=n(340),g=n(146),y=n(344),m=n(345),k=n(349),x=n(354),v=n(355),b=n(356),_=!1;t.exports={inject:r}},function(t,e){"use strict";var n,r={injectEmptyComponentFactory:function(t){n=t}},o={create:function(t){return n(t)}};o.injection=r,t.exports=o},function(t,e){"use strict";
var n={logTopLevelRenders:!1};t.exports=n},function(t,e,n){"use strict";function r(t){return c?void 0:i("111",t.type),new c(t)}function o(t){return new l(t)}function s(t){return t instanceof l}var i=n(2),a=n(4),c=(n(1),null),u={},l=null,d={injectGenericComponentClass:function(t){c=t},injectTextComponentClass:function(t){l=t},injectComponentClasses:function(t){a(u,t)}},f={createInternalComponent:r,createInstanceForText:o,isTextComponent:s,injection:d};t.exports=f},function(t,e,n){"use strict";function r(t){return s(document.documentElement,t)}var o=n(338),s=n(202),i=n(113),a=n(114),c={hasSelectionCapabilities:function(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return e&&("input"===e&&"text"===t.type||"textarea"===e||"true"===t.contentEditable)},getSelectionInformation:function(){var t=a();return{focusedElem:t,selectionRange:c.hasSelectionCapabilities(t)?c.getSelection(t):null}},restoreSelection:function(t){var e=a(),n=t.focusedElem,o=t.selectionRange;e!==n&&r(n)&&(c.hasSelectionCapabilities(n)&&c.setSelection(n,o),i(n))},getSelection:function(t){var e;if("selectionStart"in t)e={start:t.selectionStart,end:t.selectionEnd};else if(document.selection&&t.nodeName&&"input"===t.nodeName.toLowerCase()){var n=document.selection.createRange();n.parentElement()===t&&(e={start:-n.moveStart("character",-t.value.length),end:-n.moveEnd("character",-t.value.length)})}else e=o.getOffsets(t);return e||{start:0,end:0}},setSelection:function(t,e){var n=e.start,r=e.end;if(void 0===r&&(r=n),"selectionStart"in t)t.selectionStart=n,t.selectionEnd=Math.min(r,t.value.length);else if(document.selection&&t.nodeName&&"input"===t.nodeName.toLowerCase()){var s=t.createTextRange();s.collapse(!0),s.moveStart("character",n),s.moveEnd("character",r-n),s.select()}else o.setOffsets(t,e)}};t.exports=c},function(t,e,n){"use strict";var r=n(367),o=/\/?>/,s=/^<\!\-\-/,i={CHECKSUM_ATTR_NAME:"data-react-checksum",addChecksumToMarkup:function(t){var e=r(t);return s.test(t)?t:t.replace(o," "+i.CHECKSUM_ATTR_NAME+'="'+e+'"$&')},canReuseMarkup:function(t,e){var n=e.getAttribute(i.CHECKSUM_ATTR_NAME);n=n&&parseInt(n,10);var o=r(t);return o===n}};t.exports=i},function(t,e,n){"use strict";function r(t,e){for(var n=Math.min(t.length,e.length),r=0;r<n;r++)if(t.charAt(r)!==e.charAt(r))return r;return t.length===e.length?-1:n}function o(t){return t?t.nodeType===M?t.documentElement:t.firstChild:null}function s(t){return t.getAttribute&&t.getAttribute(R)||""}function i(t,e,n,r,o){var s;if(v.logTopLevelRenders){var i=t._currentElement.props,a=i.type;s="React mount: "+("string"==typeof a?a:a.displayName||a.name),console.time(s)}var c=w.mountComponent(t,n,null,m(t,e),o);s&&console.timeEnd(s),t._renderedComponent._topLevelWrapper=t,j._mountImageIntoNode(c,e,t,r,n)}function a(t,e,n,r){var o=T.ReactReconcileTransaction.getPooled(!n&&k.useCreateElement);o.perform(i,null,t,e,o,n,r),T.ReactReconcileTransaction.release(o)}function c(t,e,n){for(w.unmountComponent(t,n),e.nodeType===M&&(e=e.documentElement);e.lastChild;)e.removeChild(e.lastChild)}function u(t){var e=o(t);if(e){var n=y.getInstanceFromNode(e);return!(!n||!n._hostParent)}}function l(t){var e=o(t),n=e&&y.getInstanceFromNode(e);return n&&!n._hostParent?n:null}function d(t){var e=l(t);return e?e._hostContainerInfo._topLevelWrapper:null}var f=n(2),p=n(33),h=n(34),g=n(61),y=(n(20),n(5)),m=n(144),k=n(333),x=n(11),v=n(149),b=n(46),_=(n(8),n(152)),w=n(26),O=n(94),T=n(12),E=n(29),S=n(100),C=(n(1),n(64)),A=n(102),R=(n(3),h.ID_ATTRIBUTE_NAME),D=h.ROOT_ATTRIBUTE_NAME,I=1,M=9,K=11,P={},N=1,B=function(){this.rootID=N++};B.prototype.isReactComponent={},B.prototype.render=function(){return this.props};var j={TopLevelWrapper:B,_instancesByReactRootID:P,scrollMonitor:function(t,e){e()},_updateRootComponent:function(t,e,n,r,o){return j.scrollMonitor(r,function(){O.enqueueElementInternal(t,e,n),o&&O.enqueueCallbackInternal(t,o)}),t},_renderNewRootComponent:function(t,e,n,r){!e||e.nodeType!==I&&e.nodeType!==M&&e.nodeType!==K?f("37"):void 0,g.ensureScrollValueMonitoring();var o=S(t,!1);T.batchedUpdates(a,o,e,n,r);var s=o._instance.rootID;return P[s]=o,o},renderSubtreeIntoContainer:function(t,e,n,r){return null!=t&&b.has(t)?void 0:f("38"),j._renderSubtreeIntoContainer(t,e,n,r)},_renderSubtreeIntoContainer:function(t,e,n,r){O.validateCallback(r,"ReactDOM.render"),x.isValidElement(e)?void 0:f("39","string"==typeof e?" Instead of passing a string like 'div', pass React.createElement('div') or <div />.":"function"==typeof e?" Instead of passing a class like Foo, pass React.createElement(Foo) or <Foo />.":null!=e&&void 0!==e.props?" This may be caused by unintentionally loading two independent copies of React.":"");var i,a=x(B,null,null,null,null,null,e);if(t){var c=b.get(t);i=c._processChildContext(c._context)}else i=E;var l=d(n);if(l){var p=l._currentElement,h=p.props;if(A(h,e)){var g=l._renderedComponent.getPublicInstance(),y=r&&function(){r.call(g)};return j._updateRootComponent(l,a,i,n,y),g}j.unmountComponentAtNode(n)}var m=o(n),k=m&&!!s(m),v=u(n),_=k&&!l&&!v,w=j._renderNewRootComponent(a,n,_,i)._renderedComponent.getPublicInstance();return r&&r.call(w),w},render:function(t,e,n){return j._renderSubtreeIntoContainer(null,t,e,n)},unmountComponentAtNode:function(t){!t||t.nodeType!==I&&t.nodeType!==M&&t.nodeType!==K?f("40"):void 0;var e=d(t);if(!e){u(t),1===t.nodeType&&t.hasAttribute(D);return!1}return delete P[e._instance.rootID],T.batchedUpdates(c,e,t,!1),!0},_mountImageIntoNode:function(t,e,n,s,i){if(!e||e.nodeType!==I&&e.nodeType!==M&&e.nodeType!==K?f("41"):void 0,s){var a=o(e);if(_.canReuseMarkup(t,a))return void y.precacheNode(n,a);var c=a.getAttribute(_.CHECKSUM_ATTR_NAME);a.removeAttribute(_.CHECKSUM_ATTR_NAME);var u=a.outerHTML;a.setAttribute(_.CHECKSUM_ATTR_NAME,c);var l=t,d=r(l,u),h=" (client) "+l.substring(d-20,d+20)+"\n (server) "+u.substring(d-20,d+20);e.nodeType===M?f("42",h):void 0}if(e.nodeType===M?f("43"):void 0,i.useCreateElement){for(;e.lastChild;)e.removeChild(e.lastChild);p.insertTreeBefore(e,t,null)}else C(e,t),y.precacheNode(n,e.firstChild)}};t.exports=j},function(t,e,n){"use strict";var r=n(53),o=r({INSERT_MARKUP:null,MOVE_EXISTING:null,REMOVE_NODE:null,SET_MARKUP:null,TEXT_CONTENT:null});t.exports=o},function(t,e,n){"use strict";var r=n(2),o=n(11),s=(n(1),{HOST:0,COMPOSITE:1,EMPTY:2,getType:function(t){return null===t||t===!1?s.EMPTY:o.isValidElement(t)?"function"==typeof t.type?s.COMPOSITE:s.HOST:void r("26",t)}});t.exports=s},function(t,e,n){"use strict";function r(t,e){return t===e?0!==t||1/t===1/e:t!==t&&e!==e}function o(t){function e(e,n,r,o,s,i,a){o=o||T,i=i||r;if(null==n[r]){var c=b[s];return e?new Error("Required "+c+" `"+i+"` was not specified in "+("`"+o+"`.")):null}return t(n,r,o,s,i)}var n=e.bind(null,!1);return n.isRequired=e.bind(null,!0),n}function s(t){function e(e,n,r,o,s,i){var a=e[n],c=m(a);if(c!==t){var u=b[o],l=k(a);return new Error("Invalid "+u+" `"+s+"` of type "+("`"+l+"` supplied to `"+r+"`, expected ")+("`"+t+"`."))}return null}return o(e)}function i(){return o(w.thatReturns(null))}function a(t){function e(e,n,r,o,s){if("function"!=typeof t)return new Error("Property `"+s+"` of component `"+r+"` has invalid PropType notation inside arrayOf.");var i=e[n];if(!Array.isArray(i)){var a=b[o],c=m(i);return new Error("Invalid "+a+" `"+s+"` of type "+("`"+c+"` supplied to `"+r+"`, expected an array."))}for(var u=0;u<i.length;u++){var l=t(i,u,r,o,s+"["+u+"]",_);if(l instanceof Error)return l}return null}return o(e)}function c(){function t(t,e,n,r,o){var s=t[e];if(!v.isValidElement(s)){var i=b[r],a=m(s);return new Error("Invalid "+i+" `"+o+"` of type "+("`"+a+"` supplied to `"+n+"`, expected a single ReactElement."))}return null}return o(t)}function u(t){function e(e,n,r,o,s){if(!(e[n]instanceof t)){var i=b[o],a=t.name||T,c=x(e[n]);return new Error("Invalid "+i+" `"+s+"` of type "+("`"+c+"` supplied to `"+r+"`, expected ")+("instance of `"+a+"`."))}return null}return o(e)}function l(t){function e(e,n,o,s,i){for(var a=e[n],c=0;c<t.length;c++)if(r(a,t[c]))return null;var u=b[s],l=JSON.stringify(t);return new Error("Invalid "+u+" `"+i+"` of value `"+a+"` "+("supplied to `"+o+"`, expected one of "+l+"."))}return Array.isArray(t)?o(e):w.thatReturnsNull}function d(t){function e(e,n,r,o,s){if("function"!=typeof t)return new Error("Property `"+s+"` of component `"+r+"` has invalid PropType notation inside objectOf.");var i=e[n],a=m(i);if("object"!==a){var c=b[o];return new Error("Invalid "+c+" `"+s+"` of type "+("`"+a+"` supplied to `"+r+"`, expected an object."))}for(var u in i)if(i.hasOwnProperty(u)){var l=t(i,u,r,o,s+"."+u,_);if(l instanceof Error)return l}return null}return o(e)}function f(t){function e(e,n,r,o,s){for(var i=0;i<t.length;i++){var a=t[i];if(null==a(e,n,r,o,s,_))return null}var c=b[o];return new Error("Invalid "+c+" `"+s+"` supplied to "+("`"+r+"`."))}return Array.isArray(t)?o(e):w.thatReturnsNull}function p(){function t(t,e,n,r,o){if(!g(t[e])){var s=b[r];return new Error("Invalid "+s+" `"+o+"` supplied to "+("`"+n+"`, expected a ReactNode."))}return null}return o(t)}function h(t){function e(e,n,r,o,s){var i=e[n],a=m(i);if("object"!==a){var c=b[o];return new Error("Invalid "+c+" `"+s+"` of type `"+a+"` "+("supplied to `"+r+"`, expected `object`."))}for(var u in t){var l=t[u];if(l){var d=l(i,u,r,o,s+"."+u,_);if(d)return d}}return null}return o(e)}function g(t){switch(typeof t){case"number":case"string":case"undefined":return!0;case"boolean":return!t;case"object":if(Array.isArray(t))return t.every(g);if(null===t||v.isValidElement(t))return!0;var e=O(t);if(!e)return!1;var n,r=e.call(t);if(e!==t.entries){for(;!(n=r.next()).done;)if(!g(n.value))return!1}else for(;!(n=r.next()).done;){var o=n.value;if(o&&!g(o[1]))return!1}return!0;default:return!1}}function y(t,e){return"symbol"===t||("Symbol"===e["@@toStringTag"]||"function"==typeof Symbol&&e instanceof Symbol)}function m(t){var e=typeof t;return Array.isArray(t)?"array":t instanceof RegExp?"object":y(e,t)?"symbol":e}function k(t){var e=m(t);if("object"===e){if(t instanceof Date)return"date";if(t instanceof RegExp)return"regexp"}return e}function x(t){return t.constructor&&t.constructor.name?t.constructor.name:T}var v=n(11),b=n(91),_=n(93),w=n(10),O=n(163),T=(n(3),"<<anonymous>>"),E={array:s("array"),bool:s("boolean"),func:s("function"),number:s("number"),object:s("object"),string:s("string"),symbol:s("symbol"),any:i(),arrayOf:a,element:c(),instanceOf:u,node:p(),objectOf:d,oneOf:l,oneOfType:f,shape:h};t.exports=E},function(t,e,n){"use strict";function r(t){this.reinitializeTransaction(),this.renderToStaticMarkup=t,this.useCreateElement=!1,this.updateQueue=new a(this)}var o=n(4),s=n(19),i=n(48),a=(n(8),n(353)),c=[],u={enqueue:function(){}},l={getTransactionWrappers:function(){return c},getReactMountReady:function(){return u},getUpdateQueue:function(){return this.updateQueue},destructor:function(){},checkpoint:function(){},rollback:function(){}};o(r.prototype,i.Mixin,l),s.addPoolingTo(r),t.exports=r},function(t,e){"use strict";var n={currentScrollLeft:0,currentScrollTop:0,refreshScrollValues:function(t){n.currentScrollLeft=t.x,n.currentScrollTop=t.y}};t.exports=n},function(t,e,n){"use strict";function r(t,e){return null==e?o("30"):void 0,null==t?e:Array.isArray(t)?Array.isArray(e)?(t.push.apply(t,e),t):(t.push(e),t):Array.isArray(e)?[t].concat(e):[t,e]}var o=n(2);n(1);t.exports=r},function(t,e,n){"use strict";var r=!1;t.exports=r},function(t,e){"use strict";function n(t,e,n){Array.isArray(t)?t.forEach(e,n):t&&e.call(n,t)}t.exports=n},function(t,e,n){"use strict";function r(t){for(var e;(e=t._renderedNodeType)===o.COMPOSITE;)t=t._renderedComponent;return e===o.HOST?t._renderedComponent:e===o.EMPTY?null:void 0}var o=n(155);t.exports=r},function(t,e){"use strict";function n(t){var e=t&&(r&&t[r]||t[o]);if("function"==typeof e)return e}var r="function"==typeof Symbol&&Symbol.iterator,o="@@iterator";t.exports=n},function(t,e,n){"use strict";function r(){return!s&&o.canUseDOM&&(s="textContent"in document.documentElement?"textContent":"innerText"),s}var o=n(7),s=null;t.exports=r},function(t,e){"use strict";function n(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return"input"===e?!!r[t.type]:"textarea"===e}var r={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};t.exports=n},function(t,e,n){"use strict";var r=n(7),o=n(63),s=n(64),i=function(t,e){if(e){var n=t.firstChild;if(n&&n===t.lastChild&&3===n.nodeType)return void(n.nodeValue=e)}t.textContent=e};r.canUseDOM&&("textContent"in document.documentElement||(i=function(t,e){s(t,o(e))})),t.exports=i},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function o(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function a(t){return t.firstChild?a(t.firstChild):t}Object.defineProperty(e,"__esModule",{value:!0});var c=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),u=n(40),l=r(u),d=n(108),f=r(d),p=n(9),h=r(p),g=n(58),y=r(g),m=n(54),k=r(m),x=(0,l.default)("slate:leaf"),v=function(t){function e(t){o(this,e);var n=s(this,Object.getPrototypeOf(e).call(this,t));return n.debug=function(t){for(var e=arguments.length,r=Array(e>1?e-1:0),o=1;o<e;o++)r[o-1]=arguments[o];x.apply(void 0,[t,n.props.node.key+"-"+n.props.index].concat(r))},n.tmp={},n.tmp.renders=0,n}return i(e,t),c(e,[{key:"shouldComponentUpdate",value:function(t){if(t.index!=this.props.index||t.marks!=this.props.marks||t.schema!=this.props.schema||t.text!=this.props.text)return!0;var e=a(y.default.findDOMNode(this)),n=this.renderText(t);if(e.textContent!=n)return!0;if(t.state.isBlurred)return!1;var r=t.index,o=t.node,s=t.state,i=f.default.findBounds(r,t.ranges),c=i.start,u=i.end;return s.selection.hasEdgeBetween(o,c,u)}},{key:"componentDidMount",value:function(){this.updateSelection()}},{key:"componentDidUpdate",value:function(){this.updateSelection()}},{key:"updateSelection",value:function(){var t=this.props,e=t.state,n=t.ranges,r=t.isVoid,o=e.selection;if(!o.isBlurred){var s=o.anchorOffset,i=o.focusOffset,c=this.props,u=c.node,l=c.index,d=f.default.findBounds(l,n),p=d.start,h=d.end,g=o.hasAnchorBetween(u,p,h),m=o.hasFocusBetween(u,p,h);if(g||m){r&&(s=0,i=0);var x=a(y.default.findDOMNode(this)),v=(0,k.default)(x),b=v.getSelection();if(g&&m){b.removeAllRanges();var _=v.document.createRange();return _.setStart(x,s-p),b.addRange(_),void b.extend(x,i-p)}if(o.isForward)if(g){b.removeAllRanges();var w=v.document.createRange();w.setStart(x,s-p),b.addRange(w)}else m&&b.extend(x,i-p);else if(m){b.removeAllRanges();var O=v.document.createRange();O.setStart(x,i-p),b.addRange(O)}else if(g){var T=b.focusNode,E=b.focusOffset;b.removeAllRanges();var S=v.document.createRange();S.setStart(x,s-p),b.addRange(S),b.extend(T,E)}this.debug("updateSelection")}}}},{key:"render",value:function(){this.debug("render");var t=this.props,e=t.node,n=t.index,r=f.default.stringify({key:e.key,index:n});return this.tmp.renders++,h.default.createElement("span",{key:this.tmp.renders,"data-offset-key":r},this.renderMarks(t))}},{key:"renderText",value:function(t){var e=t.text,n=t.index,r=t.ranges;if(""==e)return h.default.createElement("br",null);var o=e.charAt(e.length-1),s=n==r.size-1;return s&&"\n"==o?e+"\n":e}},{key:"renderMarks",value:function(t){var e=t.marks,n=t.schema,r=this.renderText(t);return e.reduce(function(t,r){var o=r.getComponent(n);return o?h.default.createElement(o,{mark:r,marks:e},t):t},r)}}]),e}(h.default.Component);v.propTypes={index:h.default.PropTypes.number.isRequired,isVoid:h.default.PropTypes.bool,marks:h.default.PropTypes.object.isRequired,node:h.default.PropTypes.object.isRequired,ranges:h.default.PropTypes.object.isRequired,schema:h.default.PropTypes.object.isRequired,state:h.default.PropTypes.object.isRequired,text:h.default.PropTypes.string.isRequired},v.defaultProps={isVoid:!1},e.default=v},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function o(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0});var a=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},c=n(9),u=r(c),l=function(t){function e(){var t,n,r,i;o(this,e);for(var c=arguments.length,l=Array(c),d=0;d<c;d++)l[d]=arguments[d];return n=r=s(this,(t=Object.getPrototypeOf(e)).call.apply(t,[this].concat(l))),r.shouldComponentUpdate=function(t,e){return t.children!=r.props.children||t.className!=r.props.className||t.parent!=r.props.parent||t.node!=r.props.node||t.style!=r.props.style},r.isVisible=function(){var t=r.props,e=t.node,n=t.parent;if(e.text)return!1;if(n.nodes.size>1)return!1;var o=n.nodes.first()===e;return!!o},r.render=function(){var t=r.isVisible();if(!t)return null;var e=r.props,n=e.children,o=e.className,s=r.props.style;"string"==typeof n&&null==s&&null==o?s={opacity:"0.333"}:null==s&&(s={});var i=a({position:"absolute",top:"0px",right:"0px",bottom:"0px",left:"0px",pointerEvents:"none"},s);return u.default.createElement("span",{contentEditable:!1,className:o,style:i},n)},i=n,s(r,i)}return i(e,t),e}(u.default.Component);l.propTypes={children:u.default.PropTypes.any.isRequired,className:u.default.PropTypes.string,node:u.default.PropTypes.object.isRequired,parent:u.default.PropTypes.object.isRequired,state:u.default.PropTypes.object.isRequired,style:u.default.PropTypes.object},e.default=l},function(t,e,n){(function(t){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,"__esModule",{value:!0}),e.IS_WINDOWS=e.IS_UBUNTU=e.IS_SAFARI=e.IS_MAC=e.IS_IOS=e.IS_IE=e.IS_FIREFOX=e.IS_EDGE=e.IS_CHROME=e.IS_ANDROID=void 0;var o=n(392),s=r(o),i=n(183),a=r(i),c=n(31),u=r(c),l=e.IS_ANDROID=t.browser&&"android"==a.default.name,d=e.IS_CHROME=t.browser&&"chrome"==a.default.name,f=e.IS_EDGE=t.browser&&"edge"==a.default.name,p=e.IS_FIREFOX=t.browser&&"firefox"==a.default.name,h=e.IS_IE=t.browser&&"ie"==a.default.name,g=e.IS_IOS=t.browser&&"ios"==a.default.name,y=e.IS_MAC=t.browser&&"Mac OS"==(new s.default).getOS().name,m=e.IS_SAFARI=t.browser&&"safari"==a.default.name,k=e.IS_UBUNTU=t.browser&&"Ubuntu"==(new s.default).getOS().name,x=e.IS_WINDOWS=t.browser&&(0,u.default)((new s.default).getOS().name,"Windows");e.default={IS_ANDROID:l,IS_CHROME:d,IS_EDGE:f,IS_FIREFOX:p,IS_IE:h,IS_IOS:g,IS_MAC:y,IS_SAFARI:m,IS_UBUNTU:k,IS_WINDOWS:x}}).call(e,n(13))},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function o(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function a(t){var e=t.rules,n=void 0===e?[]:e,r=t.nodes,o=t.marks;if(r){var s=c(r);n=n.concat(s)}if(o){var i=u(o);n=n.concat(i)}return{rules:n}}function c(t){var e=[],n=function(n){var r=t[n];("function"==(0,k.default)(r)||(0,y.default)(r))&&(r={render:r}),r.match=function(t){return("block"==t.kind||"inline"==t.kind)&&t.type==n},e.push(r)};for(var r in t)n(r);return e}function u(t){var e=[],n=function(n){var r=t[n];r.render||r.decorator||r.validate||(r={render:r}),r.render=l(r.render),r.match=function(t){return"mark"==t.kind&&t.type==n},e.push(r)};for(var r in t)n(r);return e}function l(t){if((0,y.default)(t))return t;switch((0,k.default)(t)){case"function":return t;case"object":return function(e){return p.default.createElement("span",{style:t},e.children)};case"string":return function(e){return p.default.createElement("span",{className:t},e.children)}}}Object.defineProperty(e,"__esModule",{value:!0});var d=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),f=n(9),p=r(f),h=n(31),g=(r(h),n(171)),y=r(g),m=n(66),k=r(m),x=n(51),v=(r(x),n(6)),b={rules:[]},_=function(t){function e(){return o(this,e),s(this,Object.getPrototypeOf(e).apply(this,arguments))}return i(e,t),d(e,[{key:"__getComponent",value:function(t){var e=this.rules.find(function(e){return e.render&&e.match(t)});if(e)return e.render}},{key:"__getDecorators",value:function(t){return this.rules.filter(function(e){return e.decorate&&e.match(t)}).map(function(e){return function(n){return e.decorate(n,t)}})}},{key:"__validate",value:function(t){var e=void 0,n=this.rules.find(function(n){if(n.validate&&n.match(t))return e=n.validate(t)});if(e)return{rule:n,value:e}}},{key:"kind",get:function(){return"schema"}}],[{key:"create",value:function(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];return t instanceof e?t:new e(a(t))}}]),e}(new v.Record(b));e.default=_},function(t,e){"use strict";function n(t){return t&&t.prototype&&t.prototype.isReactComponent}Object.defineProperty(e,"__esModule",{value:!0}),e.default=n},function(t,e,n){e=t.exports=n(67),e.version=n(297).version},function(t,e,n){var r=n(23),o=n(68),s=n(39),i=s.isTag,a=s.domEach,c=Object.prototype.hasOwnProperty,u=s.camelCase,l=s.cssCase,d=/\s+/,f="data-",p={null:null,true:!0,false:!1},h=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,g=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,y=function(t,e){if(t&&i(t))return t.attribs||(t.attribs={}),e?c.call(t.attribs,e)?h.test(e)?e:t.attribs[e]:"option"===t.name&&"value"===e?o.text(t.children):void 0:t.attribs},m=function(t,e,n){null===n?_(t,e):t.attribs[e]=n+""};e.attr=function(t,e){return"object"==typeof t||void 0!==e?"function"==typeof e?a(this,function(n,r){m(r,t,e.call(r,n,r.attribs[t]))}):a(this,function(n,o){i(o)&&("object"==typeof t?r.each(t,function(t,e){m(o,e,t)}):m(o,t,e))}):y(this[0],t)};var k=function(t,e){return t.hasOwnProperty(e)?t[e]:h.test(e)?void 0!==y(t,e):y(t,e)},x=function(t,e,n){t[e]=h.test(e)?!!n:n};e.prop=function(t,e){var n,o=0;if("string"==typeof t&&void 0===e){switch(t){case"style":n=this.css(),r.each(n,function(t,e){n[o++]=e}),n.length=o;break;case"tagName":case"nodeName":n=this[0].name.toUpperCase();break;default:n=k(this[0],t)}return n}if("object"==typeof t||void 0!==e)return"function"==typeof e?a(this,function(n,r){x(r,t,e.call(r,n,k(r,t)))}):a(this,function(n,o){i(o)&&("object"==typeof t?r.each(t,function(t,e){x(o,e,t)}):x(o,t,e))})};var v=function(t,e,n){return t.data||(t.data={}),"object"==typeof e?r.extend(t.data,e):void("string"==typeof e&&void 0!==n?t.data[e]=n:"object"==typeof e&&r.exend(t.data,e))},b=function(t,e){var n,r,o,s,i,a,d,h=1===arguments.length;for(h?(n=Object.keys(t.attribs).filter(function(t){return t.slice(0,f.length)===f}),o=n.map(function(t){return u(t.slice(f.length))})):(n=[f+l(e)],o=[e]),a=0,d=n.length;a<d;++a)if(r=n[a],s=o[a],c.call(t.attribs,r)){if(i=t.attribs[r],c.call(p,i))i=p[i];else if(i===String(Number(i)))i=Number(i);else if(g.test(i))try{i=JSON.parse(i)}catch(y){}t.data[s]=i}return h?t.data:i};e.data=function(t,e){var n=this[0];if(n&&i(n))return n.data||(n.data={}),t?"object"==typeof t||void 0!==e?(a(this,function(n,r){v(r,t,e)}),this):c.call(n.data,t)?n.data[t]:b(n,t):b(n)},e.val=function(t){var e=0===arguments.length,n=this[0];if(n)switch(n.name){case"textarea":return this.text(t);case"input":switch(this.attr("type")){case"radio":return e?this.attr("value"):(this.attr("value",t),this);default:return this.attr("value",t)}return;case"select":var r,o=this.find("option:selected");if(void 0===o)return;if(!e){if(!this.attr().hasOwnProperty("multiple")&&"object"==typeof t)return this;"object"!=typeof t&&(t=[t]),this.find("option").removeAttr("selected");for(var s=0;s<t.length;s++)this.find('option[value="'+t[s]+'"]').attr("selected","");return this}return r=o.attr("value"),this.attr().hasOwnProperty("multiple")&&(r=[],a(o,function(t,e){r.push(y(e,"value"))})),r;case"option":return e?this.attr("value"):(this.attr("value",t),this)}};var _=function(t,e){t.attribs&&c.call(t.attribs,e)&&delete t.attribs[e]};e.removeAttr=function(t){return a(this,function(e,n){_(n,t)}),this},e.hasClass=function(t){return r.some(this,function(e){var n,r=e.attribs,o=r&&r.class,s=-1;if(o)for(;(s=o.indexOf(t,s+1))>-1;)if(n=s+t.length,(0===s||d.test(o[s-1]))&&(n===o.length||d.test(o[n])))return!0})},e.addClass=function(t){if("function"==typeof t)return a(this,function(n,r){var o=r.attribs.class||"";e.addClass.call([r],t.call(r,n,o))});if(!t||"string"!=typeof t)return this;for(var n=t.split(d),r=this.length,o=0;o<r;o++)if(i(this[o])){var s,c,u=y(this[o],"class");if(u){c=" "+u+" ",s=n.length;for(var l=0;l<s;l++){var f=n[l]+" ";c.indexOf(" "+f)<0&&(c+=f)}m(this[o],"class",c.trim())}else m(this[o],"class",n.join(" ").trim())}return this};var w=function(t){return t?t.trim().split(d):[]};e.removeClass=function(t){var n,r,o;return"function"==typeof t?a(this,function(n,r){e.removeClass.call([r],t.call(r,n,r.attribs.class||""))}):(n=w(t),r=n.length,o=0===arguments.length,a(this,function(t,e){if(i(e))if(o)e.attribs.class="";else{for(var s,a,c=w(e.attribs.class),u=0;u<r;u++)s=c.indexOf(n[u]),s>=0&&(c.splice(s,1),a=!0,u--);a&&(e.attribs.class=c.join(" "))}}))},e.toggleClass=function(t,n){if("function"==typeof t)return a(this,function(r,o){e.toggleClass.call([o],t.call(o,r,o.attribs.class||"",n),n)});if(!t||"string"!=typeof t)return this;for(var r,o,s=t.split(d),c=s.length,u="boolean"==typeof n?n?1:-1:0,l=this.length,f=0;f<l;f++)if(i(this[f])){r=w(this[f].attribs.class);for(var p=0;p<c;p++)o=r.indexOf(s[p]),u>=0&&o<0?r.push(s[p]):u<=0&&o>=0&&r.splice(o,1);this[f].attribs.class=r.join(" ")}return this},e.is=function(t){return!!t&&this.filter(t).length>0}},function(t,e,n){function r(t,e,n,i){if("string"==typeof e){var a=o(t);"function"==typeof n&&(n=n.call(t,i,a[e])),""===n?delete a[e]:null!=n&&(a[e]=n),t.attribs.style=s(a)}else"object"==typeof e&&Object.keys(e).forEach(function(n){r(t,n,e[n])})}function o(t,e){var n=i(t.attribs.style);return"string"==typeof e?n[e]:Array.isArray(e)?a.pick(n,e):n}function s(t){return Object.keys(t||{}).reduce(function(e,n){return e+=""+(e?" ":"")+n+": "+t[n]+";"},"")}function i(t){return t=(t||"").trim(),t?t.split(";").reduce(function(t,e){var n=e.indexOf(":");return n<1||n===e.length-1?t:(t[e.slice(0,n).trim()]=e.slice(n+1).trim(),t)},{}):{}}var a=n(23),c=n(39).domEach,u=Object.prototype.toString;e.css=function(t,e){return 2===arguments.length||"[object Object]"===u.call(t)?c(this,function(n,o){r(o,t,e,n)}):o(this[0],t)}},function(t,e,n){var r=n(23),o="input,select,textarea,keygen",s=/\r?\n/g;e.serializeArray=function(){var t=this.constructor;return this.map(function(){var e=this,n=t(e);return"form"===e.name?n.find(o).toArray():n.filter(o).toArray()}).filter('[name!=""]:not(:disabled):not(:submit, :button, :image, :reset, :file):matches([checked], :not(:checkbox, :radio))').map(function(e,n){var o=t(n),i=o.attr("name"),a=o.val();return null==a?null:Array.isArray(a)?r.map(a,function(t){return{name:i,value:t.replace(s,"\r\n")}}):{name:i,value:a.replace(s,"\r\n")}}).get()}},function(t,e,n){var r=n(23),o=n(52),s=n(68),i=o.update,a=o.evaluate,c=n(39),u=c.domEach,l=c.cloneDom,d=c.isHtml,f=Array.prototype.slice;e._makeDomArray=function(t,e){return null==t?[]:t.cheerio?e?l(t.get(),t.options):t.get():Array.isArray(t)?r.flatten(t.map(function(t){return this._makeDomArray(t,e)},this)):"string"==typeof t?a(t,this.options):e?l([t]):[t]};var p=function(t){return function(){var e=f.call(arguments),n=this.length-1;return u(this,function(r,o){var i,a;a="function"==typeof e[0]?e[0].call(o,r,s.html(o.children)):e,i=this._makeDomArray(a,r<n),t(i,o.children,o)})}},h=function(t,e,n,r,o){var s,i,a,c,u,l=[e,n].concat(r),d=t[e-1]||null,f=t[e]||null;for(s=0,i=r.length;s<i;++s)c=r[s],u=c.parent||c.root,a=u&&u.children.indexOf(r[s]),u&&a>-1&&(u.children.splice(a,1),o===u&&e>a&&l[0]--),c.root=null,c.parent=o,c.prev&&(c.prev.next=c.next||null),c.next&&(c.next.prev=c.prev||null),c.prev=r[s-1]||d,c.next=r[s+1]||f;return d&&(d.next=r[0]),f&&(f.prev=r[r.length-1]),t.splice.apply(t,l)};e.appendTo=function(t){return t.cheerio||(t=this.constructor.call(this.constructor,t,null,this._originalRoot)),t.append(this),this},e.prependTo=function(t){return t.cheerio||(t=this.constructor.call(this.constructor,t,null,this._originalRoot)),t.prepend(this),this},e.append=p(function(t,e,n){h(e,e.length,0,t,n)}),e.prepend=p(function(t,e,n){h(e,0,0,t,n)}),e.wrap=function(t){var e="function"==typeof t&&t,n=this.length-1;return r.forEach(this,r.bind(function(r,o){var s,a,c=r.parent||r.root,u=c.children;c&&(e&&(t=e.call(r,o)),"string"!=typeof t||d(t)||(t=this.parents().last().find(t).clone()),s=this._makeDomArray(t,o<n).slice(0,1),a=u.indexOf(r),i([r],s[0]),h(u,a,0,s,c))},this)),this},e.after=function(){var t=f.call(arguments),e=this.length-1;return u(this,function(n,r){var o=r.parent||r.root;if(o){var i,a,c=o.children,u=c.indexOf(r);u<0||(i="function"==typeof t[0]?t[0].call(r,n,s.html(r.children)):t,a=this._makeDomArray(i,n<e),h(c,u+1,0,a,o))}}),this},e.insertAfter=function(t){var e=[],n=this;return"string"==typeof t&&(t=this.constructor.call(this.constructor,t,null,this._originalRoot)),t=this._makeDomArray(t),n.remove(),u(t,function(t,r){var o=n._makeDomArray(n.clone()),s=r.parent||r.root;if(s){var i=s.children,a=i.indexOf(r);a<0||(h(i,a+1,0,o,s),e.push(o))}}),this.constructor.call(this.constructor,this._makeDomArray(e))},e.before=function(){var t=f.call(arguments),e=this.length-1;return u(this,function(n,r){var o=r.parent||r.root;if(o){var i,a,c=o.children,u=c.indexOf(r);u<0||(i="function"==typeof t[0]?t[0].call(r,n,s.html(r.children)):t,a=this._makeDomArray(i,n<e),h(c,u,0,a,o))}}),this},e.insertBefore=function(t){var e=[],n=this;return"string"==typeof t&&(t=this.constructor.call(this.constructor,t,null,this._originalRoot)),t=this._makeDomArray(t),n.remove(),u(t,function(t,r){var o=n._makeDomArray(n.clone()),s=r.parent||r.root;if(s){var i=s.children,a=i.indexOf(r);a<0||(h(i,a,0,o,s),e.push(o))}}),this.constructor.call(this.constructor,this._makeDomArray(e))},e.remove=function(t){var e=this;return t&&(e=e.filter(t)),u(e,function(t,e){var n=e.parent||e.root;if(n){var r=n.children,o=r.indexOf(e);o<0||(r.splice(o,1),e.prev&&(e.prev.next=e.next),e.next&&(e.next.prev=e.prev),e.prev=e.next=e.parent=e.root=null)}}),this},e.replaceWith=function(t){var e=this;return u(this,function(n,r){var o=r.parent||r.root;if(o){var s,a=o.children,c=e._makeDomArray("function"==typeof t?t.call(r,n,r):t);
i(c,null),s=a.indexOf(r),h(a,s,1,c,o),r.parent=r.prev=r.next=r.root=null}}),this},e.empty=function(){return u(this,function(t,e){r.each(e.children,function(t){t.next=t.prev=t.parent=null}),e.children.length=0}),this},e.html=function(t){if(void 0===t)return this[0]&&this[0].children?s.html(this[0].children,this.options):null;var e=this.options;return u(this,function(n,o){r.each(o.children,function(t){t.next=t.prev=t.parent=null});var s=t.cheerio?t.clone().get():a(""+t,e);i(s,o)}),this},e.toString=function(){return s.html(this,this.options)},e.text=function(t){return void 0===t?s.text(this):"function"==typeof t?u(this,function(n,r){var o=[r];return e.text.call(o,t.call(r,n,s.text(o)))}):(u(this,function(e,n){r.each(n.children,function(t){t.next=t.prev=t.parent=null});var o={data:""+t,type:"text",parent:n,prev:null,next:null,children:[]};i(o,n)}),this)},e.clone=function(){return this._make(l(this.get(),this.options))}},function(t,e,n){function r(t,n,r,o){for(var s=[];n&&s.length<o;)r&&!e.filter.call([n],r,t).length||s.push(n),n=n.parent;return s}var o=n(23),s=n(109),i=n(39),a=i.domEach,c=n(30).DomUtils.uniqueSort,u=i.isTag;e.find=function(t){var e,n=o.reduce(this,function(t,e){return t.concat(o.filter(e.children,u))},[]),r=this.constructor.contains;if(t&&"string"!=typeof t)return e=t.cheerio?t.get():[t],this._make(e.filter(function(t){var e,n;for(e=0,n=this.length;e<n;++e)if(r(this[e],t))return!0},this));var i={__proto__:this.options,context:this.toArray()};return this._make(s(t,n,i))},e.parent=function(t){var n=[];return a(this,function(t,e){var r=e.parent;r&&n.indexOf(r)<0&&n.push(r)}),arguments.length&&(n=e.filter.call(n,t,this)),this._make(n)},e.parents=function(t){var e=[];return this.get().reverse().forEach(function(n){r(this,n.parent,t,1/0).forEach(function(t){e.indexOf(t)===-1&&e.push(t)})},this),this._make(e)},e.parentsUntil=function(t,e){var n,r,o=[];return"string"==typeof t?n=s(t,this.parents().toArray(),this.options)[0]:t&&t.cheerio?r=t.toArray():t&&(n=t),this.toArray().reverse().forEach(function(t){for(;(t=t.parent)&&(n&&t!==n||r&&r.indexOf(t)===-1||!n&&!r);)u(t)&&o.indexOf(t)===-1&&o.push(t)},this),this._make(e?s(e,o,this.options):o)},e.closest=function(t){var e=[];return t?(a(this,function(n,o){var s=r(this,o,t,1)[0];s&&e.indexOf(s)<0&&e.push(s)}.bind(this)),this._make(e)):this._make(e)},e.next=function(t){if(!this[0])return this;var n=[];return o.forEach(this,function(t){for(;t=t.next;)if(u(t))return void n.push(t)}),t?e.filter.call(n,t,this):this._make(n)},e.nextAll=function(t){if(!this[0])return this;var n=[];return o.forEach(this,function(t){for(;t=t.next;)u(t)&&n.indexOf(t)===-1&&n.push(t)}),t?e.filter.call(n,t,this):this._make(n)},e.nextUntil=function(t,n){if(!this[0])return this;var r,i,a=[];return"string"==typeof t?r=s(t,this.nextAll().get(),this.options)[0]:t&&t.cheerio?i=t.get():t&&(r=t),o.forEach(this,function(t){for(;(t=t.next)&&(r&&t!==r||i&&i.indexOf(t)===-1||!r&&!i);)u(t)&&a.indexOf(t)===-1&&a.push(t)}),n?e.filter.call(a,n,this):this._make(a)},e.prev=function(t){if(!this[0])return this;var n=[];return o.forEach(this,function(t){for(;t=t.prev;)if(u(t))return void n.push(t)}),t?e.filter.call(n,t,this):this._make(n)},e.prevAll=function(t){if(!this[0])return this;var n=[];return o.forEach(this,function(t){for(;t=t.prev;)u(t)&&n.indexOf(t)===-1&&n.push(t)}),t?e.filter.call(n,t,this):this._make(n)},e.prevUntil=function(t,n){if(!this[0])return this;var r,i,a=[];return"string"==typeof t?r=s(t,this.prevAll().get(),this.options)[0]:t&&t.cheerio?i=t.get():t&&(r=t),o.forEach(this,function(t){for(;(t=t.prev)&&(r&&t!==r||i&&i.indexOf(t)===-1||!r&&!i);)u(t)&&a.indexOf(t)===-1&&a.push(t)}),n?e.filter.call(a,n,this):this._make(a)},e.siblings=function(t){var n=this.parent(),r=o.filter(n?n.children():this.siblingsAndMe(),o.bind(function(t){return u(t)&&!this.is(t)},this));return void 0!==t?e.filter.call(r,t,this):this._make(r)},e.children=function(t){var n=o.reduce(this,function(t,e){return t.concat(o.filter(e.children,u))},[]);return void 0===t?this._make(n):e.filter.call(n,t,this)},e.contents=function(){return this._make(o.reduce(this,function(t,e){return t.push.apply(t,e.children),t},[]))},e.each=function(t){for(var e=0,n=this.length;e<n&&t.call(this[e],e,this[e])!==!1;)++e;return this},e.map=function(t){return this._make(o.reduce(this,function(e,n,r){var o=t.call(n,r,n);return null==o?e:e.concat(o)},[]))};var l=function(t){return function(e,n){var r;return n=n||this,r="string"==typeof e?s.compile(e,n.options):"function"==typeof e?function(t,n){return e.call(t,n,t)}:e.cheerio?e.is.bind(e):function(t){return e===t},n._make(t(this,r))}};e.filter=l(o.filter),e.not=l(o.reject),e.has=function(t){var n=this;return e.filter.call(this,function(){return n._make(this).find(t).length>0})},e.first=function(){return this.length>1?this._make(this[0]):this},e.last=function(){return this.length>1?this._make(this[this.length-1]):this},e.eq=function(t){return t=+t,0===t&&this.length<=1?this:(t<0&&(t=this.length+t),this[t]?this._make(this[t]):this._make([]))},e.get=function(t){return null==t?Array.prototype.slice.call(this):this[t<0?this.length+t:t]},e.index=function(t){var e,n;return 0===arguments.length?(e=this.parent().children(),n=this[0]):"string"==typeof t?(e=this._make(t),n=this[0]):(e=this,n=t.cheerio?t[0]:t),e.get().indexOf(n)},e.slice=function(){return this._make([].slice.apply(this,arguments))},e.end=function(){return this.prevObject||this._make([])},e.add=function(t,e){for(var n=this._make(t,e),r=c(n.get().concat(this.get())),o=0;o<r.length;++o)n[o]=r[o];return n.length=r.length,n},e.addBack=function(t){return this.add(arguments.length?this.prevObject.filter(t):this.prevObject)}},function(t,e,n){function r(t,e,n){var r=s(t,e,n);return o(r)}function o(t){return function(e){return g(e)&&t(e)}}function s(t,e,n){var r=p(t,e);return c(r,e,n)}function i(t){return"pseudo"===t.type&&("scope"===t.name||Array.isArray(t.data)&&t.data.some(function(t){return t.some(i)}))}function a(t,e){var n=!!e&&!!e.length&&e.every(function(t){return t===O||!!T(t)});t.forEach(function(t){if(t.length>0&&u(t[0])&&"descendant"!==t[0].type);else{if(!n||i(t))return;t.unshift(_)}t.unshift(w)})}function c(t,e,n){t=t.filter(function(t){return t.length>0}),t.forEach(m);var r=Array.isArray(n);return n=e&&e.context||n,n&&!r&&(n=[n]),a(t,n),t.map(function(t){return l(t,e,n,r)}).reduce(d,v)}function u(t){return b[t.type]<0}function l(t,e,n,r){var o=r&&"scope"===t[0].name&&"descendant"===t[1].type;return t.reduce(function(t,r,s){return t===v?t:y[r.type](t,r,e,n,o&&1===s)},e&&e.rootFunc||x)}function d(t,e){return e===v||t===x?t:t===v||e===x?e:function(n){return t(n)||e(n)}}function f(t){return t.some(u)}t.exports=r,t.exports.compileUnsafe=s,t.exports.compileToken=c;var p=n(181),h=n(28),g=h.isTag,y=n(179),m=n(180),k=n(38),x=k.trueFunc,v=k.falseFunc,b=n(129),_={type:"descendant"},w={type:"pseudo",name:"scope"},O={},T=h.getParent,E=n(69),S=E.filters,C=h.existsOne,g=h.isTag,A=h.getChildren;S.not=function(t,e,n,r){var o={xmlMode:!(!n||!n.xmlMode),strict:!(!n||!n.strict)};if(o.strict&&(e.length>1||e.some(f)))throw new SyntaxError("complex selectors in :not aren't allowed in strict mode");var s=c(e,o,r);return s===v?t:s===x?v:function(e){return!s(e)&&t(e)}},S.has=function(t,e,n){var r={xmlMode:!(!n||!n.xmlMode),strict:!(!n||!n.strict)},s=e.some(f)?[O]:null,i=c(e,r,s);return i===v?v:i===x?function(e){return A(e).some(g)&&t(e)}:(i=o(i),s?function(e){return t(e)&&(s[0]=e,C(i,A(e)))}:function(e){return t(e)&&C(i,A(e))})},S.matches=function(t,e,n,r){var o={xmlMode:!(!n||!n.xmlMode),strict:!(!n||!n.strict),rootFunc:t};return c(e,o,r)}},function(t,e,n){var r=n(28),o=r.isTag,s=r.getParent,i=r.getChildren,a=r.getSiblings,c=r.getName;t.exports={__proto__:null,attribute:n(110).compile,pseudo:n(69).compile,tag:function(t,e){var n=e.name;return function(e){return c(e)===n&&t(e)}},descendant:function(t,e,n,r,o){return function(e){if(o&&t(e))return!0;for(var n=!1;!n&&(e=s(e));)n=t(e);return n}},parent:function(t,e,n){function r(e){return o(e)&&t(e)}if(n&&n.strict)throw SyntaxError("Parent selector isn't part of CSS3");return function(t){return i(t).some(r)}},child:function(t){return function(e){var n=s(e);return!!n&&t(n)}},sibling:function(t){return function(e){for(var n=a(e),r=0;r<n.length;r++)if(o(n[r])){if(n[r]===e)break;if(t(n[r]))return!0}return!1}},adjacent:function(t){return function(e){for(var n,r=a(e),s=0;s<r.length;s++)if(o(r[s])){if(r[s]===e)break;n=r[s]}return!!n&&t(n)}},universal:function(t){return t}}},function(t,e,n){function r(t){for(var e=t.map(o),n=1;n<t.length;n++){var r=e[n];if(!(r<0))for(var s=n-1;s>=0&&r<e[s];s--){var i=t[s+1];t[s+1]=t[s],t[s]=i,e[s+1]=e[s],e[s]=r}}}function o(t){var e=s[t.type];if(e===s.attribute)e=i[t.action],e===i.equals&&"id"===t.name&&(e=9),t.ignoreCase&&(e>>=1);else if(e===s.pseudo)if(t.data)if("has"===t.name||"contains"===t.name)e=0;else if("matches"===t.name||"not"===t.name){e=0;for(var n=0;n<t.data.length;n++)if(1===t.data[n].length){var r=o(t.data[n][0]);if(0===r){e=0;break}r>e&&(e=r)}t.data.length>1&&e>0&&(e-=1)}else e=1;else e=3;return e}t.exports=r;var s=n(129),i={__proto__:null,exists:10,equals:8,not:7,start:6,end:6,any:5,hyphen:4,element:4}},function(t,e){"use strict";function n(t,e,n){var r="0x"+e-65536;return r!==r||n?e:r<0?String.fromCharCode(r+65536):String.fromCharCode(r>>10|55296,1023&r|56320)}function r(t){return t.replace(u,n)}function o(t){return" "===t||"\n"===t||"\t"===t||"\f"===t||"\r"===t}function s(t,e){var n=[];if(t=i(n,t+"",e),""!==t)throw new SyntaxError("Unmatched selector: "+t);return n}function i(t,e,n){function s(){var t=e.match(c)[0];return e=e.substr(t.length),r(t)}function u(t){for(;o(e.charAt(t));)t++;e=e.substr(t)}var m,k,x,v,b=[],_=!1;for(u(0);""!==e;)if(k=e.charAt(0),o(k))_=!0,u(1);else if(k in f)b.push({type:f[k]}),_=!1,u(1);else if(","===k){if(0===b.length)throw new SyntaxError("empty sub-selector");t.push(b),b=[],_=!1,u(1)}else if(_&&(b.length>0&&b.push({type:"descendant"}),_=!1),"*"===k)e=e.substr(1),b.push({type:"universal"});else if(k in p)e=e.substr(1),b.push({type:"attribute",name:p[k][0],action:p[k][1],value:s(),ignoreCase:!1});else if("["===k){if(e=e.substr(1),m=e.match(l),!m)throw new SyntaxError("Malformed attribute selector: "+e);e=e.substr(m[0].length),x=r(m[1]),n&&("lowerCaseAttributeNames"in n?!n.lowerCaseAttributeNames:n.xmlMode)||(x=x.toLowerCase()),b.push({type:"attribute",name:x,action:d[m[2]],value:r(m[4]||m[5]||""),ignoreCase:!!m[6]})}else if(":"===k){if(":"===e.charAt(1)){e=e.substr(2),b.push({type:"pseudo-element",name:s().toLowerCase()});continue}if(e=e.substr(1),x=s().toLowerCase(),m=null,"("===e.charAt(0))if(x in h){v=e.charAt(1);var w=v in y;if(e=e.substr(w+1),m=[],e=i(m,e,n),w){if(e.charAt(0)!==v)throw new SyntaxError("unmatched quotes in :"+x);e=e.substr(1)}if(")"!==e.charAt(0))throw new SyntaxError("missing closing parenthesis in :"+x+" "+e);e=e.substr(1)}else{for(var O=1,T=1;T>0&&O<e.length;O++)"("===e.charAt(O)?T++:")"===e.charAt(O)&&T--;if(T)throw new SyntaxError("parenthesis not matched");m=e.substr(1,O-2),e=e.substr(O),x in g&&(v=m.charAt(0),v===m.slice(-1)&&v in y&&(m=m.slice(1,-1)),m=r(m))}b.push({type:"pseudo",name:x,data:m})}else{if(!c.test(e))return b.length&&"descendant"===b[b.length-1].type&&b.pop(),a(t,b),e;x=s(),n&&("lowerCaseTags"in n?!n.lowerCaseTags:n.xmlMode)||(x=x.toLowerCase()),b.push({type:"tag",name:x})}return a(t,b),e}function a(t,e){if(t.length>0&&0===e.length)throw new SyntaxError("empty sub-selector");t.push(e)}t.exports=s;var c=/^(?:\\.|[\w\-\u00c0-\uFFFF])+/,u=/\\([\da-f]{1,6}\s?|(\s)|.)/gi,l=/^\s*((?:\\.|[\w\u00c0-\uFFFF\-])+)\s*(?:(\S?)=\s*(?:(['"])(.*?)\3|(#?(?:\\.|[\w\u00c0-\uFFFF\-])*)|)|)\s*(i)?\]/,d={__proto__:null,undefined:"exists","":"equals","~":"element","^":"start",$:"end","*":"any","!":"not","|":"hyphen"},f={__proto__:null,">":"child","<":"parent","~":"sibling","+":"adjacent"},p={__proto__:null,"#":["id","equals"],".":["class","element"]},h={__proto__:null,has:!0,not:!0,matches:!0},g={__proto__:null,contains:!0,icontains:!0},y={__proto__:null,'"':!0,"'":!0}},function(t,e,n){function r(){return e.colors[l++%e.colors.length]}function o(t){function n(){}function o(){var t=o,n=+new Date,s=n-(u||n);t.diff=s,t.prev=u,t.curr=n,u=n,null==t.useColors&&(t.useColors=e.useColors()),null==t.color&&t.useColors&&(t.color=r());var i=Array.prototype.slice.call(arguments);i[0]=e.coerce(i[0]),"string"!=typeof i[0]&&(i=["%o"].concat(i));var a=0;i[0]=i[0].replace(/%([a-z%])/g,function(n,r){if("%%"===n)return n;a++;var o=e.formatters[r];if("function"==typeof o){var s=i[a];n=o.call(t,s),i.splice(a,1),a--}return n}),"function"==typeof e.formatArgs&&(i=e.formatArgs.apply(t,i));var c=o.log||e.log||console.log.bind(console);c.apply(t,i)}n.enabled=!1,o.enabled=!0;var s=e.enabled(t)?o:n;return s.namespace=t,s}function s(t){e.save(t);for(var n=(t||"").split(/[\s,]+/),r=n.length,o=0;o<r;o++)n[o]&&(t=n[o].replace(/\*/g,".*?"),"-"===t[0]?e.skips.push(new RegExp("^"+t.substr(1)+"$")):e.names.push(new RegExp("^"+t+"$")))}function i(){e.enable("")}function a(t){var n,r;for(n=0,r=e.skips.length;n<r;n++)if(e.skips[n].test(t))return!1;for(n=0,r=e.names.length;n<r;n++)if(e.names[n].test(t))return!0;return!1}function c(t){return t instanceof Error?t.stack||t.message:t}e=t.exports=o,e.coerce=c,e.disable=i,e.enable=s,e.enabled=a,e.humanize=n(282),e.names=[],e.skips=[],e.formatters={};var u,l=0},function(t,e,n){var r=n(184);t.exports=r(navigator.userAgent)},function(t,e){t.exports=function(t){function e(e){return e.concat(e[1].exec(t))}function n(t){return!!t[2]}var r=[["edge",/Edge\/([0-9\._]+)/],["chrome",/(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],["firefox",/Firefox\/([0-9\.]+)(?:\s|$)/],["opera",/Opera\/([0-9\.]+)(?:\s|$)/],["opera",/OPR\/([0-9\.]+)(:?\s|$)$/],["ie",/Trident\/7\.0.*rv\:([0-9\.]+)\).*Gecko$/],["ie",/MSIE\s([0-9\.]+);.*Trident\/[4-7].0/],["ie",/MSIE\s(7\.0)/],["bb10",/BB10;\sTouch.*Version\/([0-9\.]+)/],["android",/Android\s([0-9\.]+)/],["ios",/iPad.*Version\/([0-9\._]+)/],["ios",/iPhone.*Version\/([0-9\._]+)/],["safari",/Version\/([0-9\._]+).*Safari/]],o=0,s=[];for(o=0;o<r.length;o++)r[o]=e(r[o]),n(r[o])&&s.push(r[o]);for(var i=s[0],a=i&&i[3].split(/[._]/).slice(0,3);a&&a.length<3;)a.push("0");return{name:i&&i[0],version:a&&a.join(".")}}},function(t,e){"use strict";function n(t){return t=t.toString(),i.test(t)?"rtl":s.test(t)?"ltr":"neutral"}var r,o,s,i;r="A-Za-zÀ-ÖØ-öø-ʸ̀-֐ࠀ-῿‎Ⰰ-﬜︀-﹯﻽-￿",o="֑-߿יִ-﷽ﹰ-ﻼ",s=new RegExp("^[^"+o+"]*["+r+"]"),i=new RegExp("^[^"+r+"]*["+o+"]"),t.exports=n},function(t,e){t.exports={Text:"text",Directive:"directive",Comment:"comment",Script:"script",Style:"style",Tag:"tag",CDATA:"cdata",isTag:function(t){return"tag"===t.type||"script"===t.type||"style"===t.type}}},function(t,e,n){function r(t,e,n){"object"==typeof t?(n=e,e=t,t=null):"function"==typeof e&&(n=e,e=c),this._callback=t,this._options=e||c,this._elementCB=n,this.dom=[],this._done=!1,this._tagStack=[],this._parser=this._parser||null}var o=n(41),s=/\s+/g,i=n(111),a=n(188),c={normalizeWhitespace:!1,withStartIndices:!1};r.prototype.onparserinit=function(t){this._parser=t},r.prototype.onreset=function(){r.call(this,this._callback,this._options,this._elementCB)},r.prototype.onend=function(){this._done||(this._done=!0,this._parser=null,this._handleCallback(null))},r.prototype._handleCallback=r.prototype.onerror=function(t){if("function"==typeof this._callback)this._callback(t,this.dom);else if(t)throw t},r.prototype.onclosetag=function(){var t=this._tagStack.pop();this._elementCB&&this._elementCB(t)},r.prototype._addDomElement=function(t){var e=this._tagStack[this._tagStack.length-1],n=e?e.children:this.dom,r=n[n.length-1];t.next=null,this._options.withStartIndices&&(t.startIndex=this._parser.startIndex),this._options.withDomLvl1&&(t.__proto__="tag"===t.type?a:i),r?(t.prev=r,r.next=t):t.prev=null,n.push(t),t.parent=e||null},r.prototype.onopentag=function(t,e){var n={type:"script"===t?o.Script:"style"===t?o.Style:o.Tag,name:t,attribs:e,children:[]};this._addDomElement(n),this._tagStack.push(n)},r.prototype.ontext=function(t){var e,n=this._options.normalizeWhitespace||this._options.ignoreWhitespace;!this._tagStack.length&&this.dom.length&&(e=this.dom[this.dom.length-1]).type===o.Text?n?e.data=(e.data+t).replace(s," "):e.data+=t:this._tagStack.length&&(e=this._tagStack[this._tagStack.length-1])&&(e=e.children[e.children.length-1])&&e.type===o.Text?n?e.data=(e.data+t).replace(s," "):e.data+=t:(n&&(t=t.replace(s," ")),this._addDomElement({data:t,type:o.Text}))},r.prototype.oncomment=function(t){var e=this._tagStack[this._tagStack.length-1];if(e&&e.type===o.Comment)return void(e.data+=t);var n={data:t,type:o.Comment};this._addDomElement(n),this._tagStack.push(n)},r.prototype.oncdatastart=function(){var t={children:[{data:"",type:o.Text}],type:o.CDATA};this._addDomElement(t),this._tagStack.push(t)},r.prototype.oncommentend=r.prototype.oncdataend=function(){this._tagStack.pop()},r.prototype.onprocessinginstruction=function(t,e){this._addDomElement({name:t,data:e,type:o.Directive})},t.exports=r},function(t,e,n){var r=n(111),o=t.exports=Object.create(r),s={tagName:"name"};Object.keys(s).forEach(function(t){var e=s[t];Object.defineProperty(o,t,{get:function(){return this[e]||null},set:function(t){return this[e]=t,t}})})},function(t,e){e.removeSubsets=function(t){for(var e,n,r,o=t.length;--o>-1;){for(e=n=t[o],t[o]=null,r=!0;n;){if(t.indexOf(n)>-1){r=!1,t.splice(o,1);break}n=n.parent}r&&(t[o]=e)}return t};var n={DISCONNECTED:1,PRECEDING:2,FOLLOWING:4,CONTAINS:8,CONTAINED_BY:16},r=e.compareDocumentPosition=function(t,e){var r,o,s,i,a,c,u=[],l=[];if(t===e)return 0;for(r=t;r;)u.unshift(r),r=r.parent;for(r=e;r;)l.unshift(r),r=r.parent;for(c=0;u[c]===l[c];)c++;return 0===c?n.DISCONNECTED:(o=u[c-1],s=o.children,i=u[c],a=l[c],s.indexOf(i)>s.indexOf(a)?o===e?n.FOLLOWING|n.CONTAINED_BY:n.FOLLOWING:o===t?n.PRECEDING|n.CONTAINS:n.PRECEDING)};e.uniqueSort=function(t){var e,o,s=t.length;for(t=t.slice();--s>-1;)e=t[s],o=t.indexOf(e),o>-1&&o<s&&t.splice(s,1);return t.sort(function(t,e){var o=r(t,e);return o&n.PRECEDING?-1:o&n.FOLLOWING?1:0}),t}},function(t,e,n){function r(t,e){return"function"==typeof e?function(n){return n.attribs&&e(n.attribs[t])}:function(n){return n.attribs&&n.attribs[t]===e}}function o(t,e){return function(n){return t(n)||e(n)}}var s=n(41),i=e.isTag=s.isTag;e.testElement=function(t,e){for(var n in t)if(t.hasOwnProperty(n)){if("tag_name"===n){if(!i(e)||!t.tag_name(e.name))return!1}else if("tag_type"===n){if(!t.tag_type(e.type))return!1}else if("tag_contains"===n){if(i(e)||!t.tag_contains(e.data))return!1}else if(!e.attribs||!t[n](e.attribs[n]))return!1}else;return!0};var a={tag_name:function(t){return"function"==typeof t?function(e){return i(e)&&t(e.name)}:"*"===t?i:function(e){return i(e)&&e.name===t}},tag_type:function(t){return"function"==typeof t?function(e){return t(e.type)}:function(e){return e.type===t}},tag_contains:function(t){return"function"==typeof t?function(e){return!i(e)&&t(e.data)}:function(e){return!i(e)&&e.data===t}}};e.getElements=function(t,e,n,s){var i=Object.keys(t).map(function(e){var n=t[e];return e in a?a[e](n):r(e,n)});return 0===i.length?[]:this.filter(i.reduce(o),e,n,s)},e.getElementById=function(t,e,n){return Array.isArray(e)||(e=[e]),this.findOne(r("id",t),e,n!==!1)},e.getElementsByTagName=function(t,e,n,r){return this.filter(a.tag_name(t),e,n,r)},e.getElementsByTagType=function(t,e,n,r){return this.filter(a.tag_type(t),e,n,r)}},function(t,e){e.removeElement=function(t){if(t.prev&&(t.prev.next=t.next),t.next&&(t.next.prev=t.prev),t.parent){var e=t.parent.children;e.splice(e.lastIndexOf(t),1)}},e.replaceElement=function(t,e){var n=e.prev=t.prev;n&&(n.next=e);var r=e.next=t.next;r&&(r.prev=e);var o=e.parent=t.parent;if(o){var s=o.children;s[s.lastIndexOf(t)]=e}},e.appendChild=function(t,e){if(e.parent=t,1!==t.children.push(e)){var n=t.children[t.children.length-2];n.next=e,e.prev=n,e.next=null}},e.append=function(t,e){var n=t.parent,r=t.next;if(e.next=r,e.prev=t,t.next=e,e.parent=n,r){if(r.prev=e,n){var o=n.children;o.splice(o.lastIndexOf(r),0,e)}}else n&&n.children.push(e)},e.prepend=function(t,e){var n=t.parent;if(n){var r=n.children;r.splice(r.lastIndexOf(t),0,e)}t.prev&&(t.prev.next=e),e.parent=n,e.prev=t.prev,e.next=t,t.prev=e}},function(t,e,n){function r(t,e,n,r){return Array.isArray(e)||(e=[e]),"number"==typeof r&&isFinite(r)||(r=1/0),o(t,e,n!==!1,r)}function o(t,e,n,r){for(var s,i=[],a=0,c=e.length;a<c&&!(t(e[a])&&(i.push(e[a]),--r<=0))&&(s=e[a].children,!(n&&s&&s.length>0&&(s=o(t,s,n,r),i=i.concat(s),r-=s.length,r<=0)));a++);return i}function s(t,e){for(var n=0,r=e.length;n<r;n++)if(t(e[n]))return e[n];return null}function i(t,e){for(var n=null,r=0,o=e.length;r<o&&!n;r++)u(e[r])&&(t(e[r])?n=e[r]:e[r].children.length>0&&(n=i(t,e[r].children)));return n}function a(t,e){for(var n=0,r=e.length;n<r;n++)if(u(e[n])&&(t(e[n])||e[n].children.length>0&&a(t,e[n].children)))return!0;return!1}function c(t,e){for(var n=[],r=0,o=e.length;r<o;r++)u(e[r])&&(t(e[r])&&n.push(e[r]),e[r].children.length>0&&(n=n.concat(c(t,e[r].children))));return n}var u=n(41).isTag;t.exports={filter:r,find:o,findOneChild:s,findOne:i,existsOne:a,findAll:c}},function(t,e,n){function r(t,e){return t.children?t.children.map(function(t){return i(t,e)}).join(""):""}function o(t){return Array.isArray(t)?t.map(o).join(""):a(t)||t.type===s.CDATA?o(t.children):t.type===s.Text?t.data:""}var s=n(41),i=n(70),a=s.isTag;t.exports={getInnerHTML:r,getOuterHTML:i,getText:o}},function(t,e){var n=e.getChildren=function(t){return t.children},r=e.getParent=function(t){return t.parent};e.getSiblings=function(t){var e=r(t);return e?n(e):[t]},e.getAttributeValue=function(t,e){return t.attribs&&t.attribs[e]},e.hasAttrib=function(t,e){return!!t.attribs&&hasOwnProperty.call(t.attribs,e)},e.getName=function(t){return t.name}},function(t,e,n){var r=n(198),o=n(196);e.decode=function(t,e){return(!e||e<=0?o.XML:o.HTML)(t)},e.decodeStrict=function(t,e){return(!e||e<=0?o.XML:o.HTMLStrict)(t)},e.encode=function(t,e){return(!e||e<=0?r.XML:r.HTML)(t)},e.encodeXML=r.XML,e.encodeHTML4=e.encodeHTML5=e.encodeHTML=r.HTML,e.decodeXML=e.decodeXMLStrict=o.XML,e.decodeHTML4=e.decodeHTML5=e.decodeHTML=o.HTML,e.decodeHTML4Strict=e.decodeHTML5Strict=e.decodeHTMLStrict=o.HTMLStrict,e.escape=r.escape},function(t,e,n){function r(t){var e=Object.keys(t).join("|"),n=s(t);e+="|#[xX][\\da-fA-F]+|#\\d+";var r=new RegExp("&(?:"+e+");","g");return function(t){return String(t).replace(r,n)}}function o(t,e){return t<e?1:-1}function s(t){return function(e){return"#"===e.charAt(1)?u("X"===e.charAt(2)||"x"===e.charAt(2)?parseInt(e.substr(3),16):parseInt(e.substr(2),10)):t[e.slice(1,-1)]}}var i=n(130),a=n(299),c=n(131),u=n(197),l=r(c),d=r(i),f=function(){function t(t){return";"!==t.substr(-1)&&(t+=";"),l(t)}for(var e=Object.keys(a).sort(o),n=Object.keys(i).sort(o),r=0,c=0;r<n.length;r++)e[c]===n[r]?(n[r]+=";?",c++):n[r]+=";";var u=new RegExp("&(?:"+n.join("|")+"|#[xX][\\da-fA-F]+;?|#\\d+;?)","g"),l=s(i);return function(e){return String(e).replace(u,t)}}();t.exports={XML:l,HTML:f,HTMLStrict:d}},[396,298],function(t,e,n){function r(t){return Object.keys(t).sort().reduce(function(e,n){return e[t[n]]="&"+n+";",e},{})}function o(t){var e=[],n=[];return Object.keys(t).forEach(function(t){1===t.length?e.push("\\"+t):n.push(t)}),n.unshift("["+e.join("")+"]"),new RegExp(n.join("|"),"g")}function s(t){return"&#x"+t.charCodeAt(0).toString(16).toUpperCase()+";"}function i(t){var e=t.charCodeAt(0),n=t.charCodeAt(1),r=1024*(e-55296)+n-56320+65536;return"&#x"+r.toString(16).toUpperCase()+";"}function a(t,e){function n(e){return t[e]}return function(t){return t.replace(e,n).replace(h,i).replace(p,s)}}function c(t){return t.replace(g,s).replace(h,i).replace(p,s)}var u=r(n(131)),l=o(u);e.XML=a(u,l);var d=r(n(130)),f=o(d);e.HTML=a(d,f);var p=/[^\0-\x7F]/g,h=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,g=o(u);e.escape=c},function(t,e,n){var r;(function(t,o){!function(s){var i="object"==typeof e&&e,a=("object"==typeof t&&t&&t.exports==i&&t,"object"==typeof o&&o);a.global!==a&&a.window!==a||(s=a);var c=/([\0-\u02FF\u0370-\u1AAF\u1B00-\u1DBF\u1E00-\u20CF\u2100-\uD7FF\uE000-\uFE1F\uFE30-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])([\u0300-\u036F\u1AB0-\u1AFF\u1DC0-\u1DFF\u20D0-\u20FF\uFE20-\uFE2F]+)/g,u=/([\uD800-\uDBFF])([\uDC00-\uDFFF])/g,l=function(t){t=t.replace(c,function(t,e,n){return l(n)+e}).replace(u,"$2$1");for(var e="",n=t.length;n--;)e+=t.charAt(n);return e},d={version:"0.2.0",reverse:l};r=function(){return d}.call(e,n,e,t),!(void 0!==r&&(t.exports=r))}(this)}).call(e,n(136)(t),function(){return this}())},function(t,e){"use strict";function n(t){return t.replace(r,function(t,e){return e.toUpperCase()})}var r=/-(.)/g;t.exports=n},function(t,e,n){"use strict";function r(t){return o(t.replace(s,"ms-"))}var o=n(200),s=/^-ms-/;t.exports=r},function(t,e,n){"use strict";function r(t,e){return!(!t||!e)&&(t===e||!o(t)&&(o(e)?r(t,e.parentNode):"contains"in t?t.contains(e):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(e))))}var o=n(210);t.exports=r},function(t,e,n){"use strict";function r(t){var e=t.length;if(Array.isArray(t)||"object"!=typeof t&&"function"!=typeof t?i(!1):void 0,"number"!=typeof e?i(!1):void 0,0===e||e-1 in t?void 0:i(!1),"function"==typeof t.callee?i(!1):void 0,t.hasOwnProperty)try{return Array.prototype.slice.call(t)}catch(n){}for(var r=Array(e),o=0;o<e;o++)r[o]=t[o];return r}function o(t){return!!t&&("object"==typeof t||"function"==typeof t)&&"length"in t&&!("setInterval"in t)&&"number"!=typeof t.nodeType&&(Array.isArray(t)||"callee"in t||"item"in t)}function s(t){return o(t)?Array.isArray(t)?t.slice():r(t):[t]}var i=n(1);t.exports=s},function(t,e,n){"use strict";function r(t){var e=t.match(l);return e&&e[1].toLowerCase()}function o(t,e){var n=u;u?void 0:c(!1);var o=r(t),s=o&&a(o);if(s){n.innerHTML=s[1]+t+s[2];for(var l=s[0];l--;)n=n.lastChild}else n.innerHTML=t;var d=n.getElementsByTagName("script");d.length&&(e?void 0:c(!1),i(d).forEach(e));for(var f=Array.from(n.childNodes);n.lastChild;)n.removeChild(n.lastChild);return f}var s=n(7),i=n(203),a=n(205),c=n(1),u=s.canUseDOM?document.createElement("div"):null,l=/^\s*<(\w+)/;t.exports=o},function(t,e,n){"use strict";function r(t){return i?void 0:s(!1),f.hasOwnProperty(t)||(t="*"),a.hasOwnProperty(t)||("*"===t?i.innerHTML="<link />":i.innerHTML="<"+t+"></"+t+">",a[t]=!i.firstChild),a[t]?f[t]:null}var o=n(7),s=n(1),i=o.canUseDOM?document.createElement("div"):null,a={},c=[1,'<select multiple="true">',"</select>"],u=[1,"<table>","</table>"],l=[3,"<table><tbody><tr>","</tr></tbody></table>"],d=[1,'<svg xmlns="http://www.w3.org/2000/svg">',"</svg>"],f={"*":[1,"?<div>","</div>"],area:[1,"<map>","</map>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],legend:[1,"<fieldset>","</fieldset>"],param:[1,"<object>","</object>"],tr:[2,"<table><tbody>","</tbody></table>"],optgroup:c,option:c,caption:u,colgroup:u,tbody:u,tfoot:u,thead:u,td:l,th:l},p=["circle","clipPath","defs","ellipse","g","image","line","linearGradient","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","text","tspan"];p.forEach(function(t){f[t]=d,a[t]=!0}),t.exports=r},function(t,e){"use strict";function n(t){return t===window?{x:window.pageXOffset||document.documentElement.scrollLeft,y:window.pageYOffset||document.documentElement.scrollTop}:{x:t.scrollLeft,y:t.scrollTop}}t.exports=n},function(t,e){"use strict";function n(t){return t.replace(r,"-$1").toLowerCase()}var r=/([A-Z])/g;t.exports=n},function(t,e,n){"use strict";function r(t){return o(t).replace(s,"-ms-")}var o=n(207),s=/^ms-/;t.exports=r},function(t,e){"use strict";function n(t){return!(!t||!("function"==typeof Node?t instanceof Node:"object"==typeof t&&"number"==typeof t.nodeType&&"string"==typeof t.nodeName))}t.exports=n},function(t,e,n){"use strict";function r(t){return o(t)&&3==t.nodeType}var o=n(209);t.exports=r},function(t,e){"use strict";function n(t,e,n){if(!t)return null;var o={};for(var s in t)r.call(t,s)&&(o[s]=e.call(n,t[s],s,t));return o}var r=Object.prototype.hasOwnProperty;t.exports=n},function(t,e){"use strict";function n(t){var e={};return function(n){return e.hasOwnProperty(n)||(e[n]=t.call(this,n)),e[n]}}t.exports=n},function(t,e){function n(t){return t&&t.nodeType===o}function r(t){return n(t)?t:n(t.ownerDocument)?t.ownerDocument:n(t.document)?t.document:t.parentNode?r(t.parentNode):t.commonAncestorContainer?r(t.commonAncestorContainer):t.startContainer?r(t.startContainer):t.anchorNode?r(t.anchorNode):void 0}t.exports=r;var o=9},function(t,e){t.exports=!!document.attachEvent&&window!==document.parentWindow},function(t,e,n){function r(t){this._cbs=t||{},this.events=[]}t.exports=r;var o=n(30).EVENTS;Object.keys(o).forEach(function(t){if(0===o[t])t="on"+t,r.prototype[t]=function(){this.events.push([t]),this._cbs[t]&&this._cbs[t]()};else if(1===o[t])t="on"+t,r.prototype[t]=function(e){this.events.push([t,e]),this._cbs[t]&&this._cbs[t](e)};else{if(2!==o[t])throw Error("wrong number of arguments");t="on"+t,r.prototype[t]=function(e,n){this.events.push([t,e,n]),this._cbs[t]&&this._cbs[t](e,n)}}}),r.prototype.onreset=function(){this.events=[],this._cbs.onreset&&this._cbs.onreset()},r.prototype.restart=function(){this._cbs.onreset&&this._cbs.onreset();for(var t=0,e=this.events.length;t<e;t++)if(this._cbs[this.events[t][0]]){var n=this.events[t].length;1===n?this._cbs[this.events[t][0]]():2===n?this._cbs[this.events[t][0]](this.events[t][1]):this._cbs[this.events[t][0]](this.events[t][1],this.events[t][2])}}},function(t,e,n){function r(t,e){this.init(t,e)}function o(t,e){return l.getElementsByTagName(t,e,!0)}function s(t,e){return l.getElementsByTagName(t,e,!0,1)[0]}function i(t,e,n){return l.getText(l.getElementsByTagName(t,e,n,1)).trim()}function a(t,e,n,r,o){var s=i(n,r,o);s&&(t[e]=s)}var c=n(30),u=c.DomHandler,l=c.DomUtils;n(59).inherits(r,u),r.prototype.init=u;var d=function(t){return"rss"===t||"feed"===t||"rdf:RDF"===t};r.prototype.onend=function(){var t,e,n={},r=s(d,this.dom);r&&("feed"===r.name?(e=r.children,n.type="atom",a(n,"id","id",e),a(n,"title","title",e),(t=s("link",e))&&(t=t.attribs)&&(t=t.href)&&(n.link=t),a(n,"description","subtitle",e),(t=i("updated",e))&&(n.updated=new Date(t)),a(n,"author","email",e,!0),n.items=o("entry",e).map(function(t){var e,n={};return t=t.children,a(n,"id","id",t),a(n,"title","title",t),(e=s("link",t))&&(e=e.attribs)&&(e=e.href)&&(n.link=e),(e=i("summary",t)||i("content",t))&&(n.description=e),(e=i("updated",t))&&(n.pubDate=new Date(e)),n})):(e=s("channel",r.children).children,n.type=r.name.substr(0,3),n.id="",a(n,"title","title",e),a(n,"link","link",e),a(n,"description","description",e),(t=i("lastBuildDate",e))&&(n.updated=new Date(t)),a(n,"author","managingEditor",e,!0),n.items=o("item",r.children).map(function(t){var e,n={};return t=t.children,a(n,"id","guid",t),a(n,"title","title",t),a(n,"link","link",t),a(n,"description","description",t),(e=i("pubDate",t))&&(n.pubDate=new Date(e)),n}))),this.dom=n,u.prototype._handleCallback.call(this,r?null:Error("couldn't find root of feed"))},t.exports=r},function(t,e,n){function r(t){this._cbs=t||{}}t.exports=r;var o=n(30).EVENTS;Object.keys(o).forEach(function(t){if(0===o[t])t="on"+t,r.prototype[t]=function(){this._cbs[t]&&this._cbs[t]()};else if(1===o[t])t="on"+t,r.prototype[t]=function(e){this._cbs[t]&&this._cbs[t](e)};else{if(2!==o[t])throw Error("wrong number of arguments");t="on"+t,r.prototype[t]=function(e,n){this._cbs[t]&&this._cbs[t](e,n)}}})},function(t,e,n){function r(t){s.call(this,new o(this),t)}function o(t){this.scope=t}t.exports=r;var s=n(117);n(59).inherits(r,s),r.prototype.readable=!0;var i=n(30).EVENTS;Object.keys(i).forEach(function(t){if(0===i[t])o.prototype["on"+t]=function(){this.scope.emit(t)};else if(1===i[t])o.prototype["on"+t]=function(e){this.scope.emit(t,e)};else{if(2!==i[t])throw Error("wrong number of arguments!");
o.prototype["on"+t]=function(e,n){this.scope.emit(t,e,n)}}})},[396,300],function(t,e){function n(t){if(null==t)return!0;if("boolean"==typeof t)return!1;if("number"==typeof t)return 0===t;if(void 0!==t.length)return 0===t.length;for(var e in t)if(r.call(t,e))return!1;return!0}t.exports=n;var r=Object.prototype.hasOwnProperty},function(t,e,n){function r(t){var e=-1,n=t?t.length:0;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}var o=n(245),s=n(246),i=n(247),a=n(248),c=n(249);r.prototype.clear=o,r.prototype.delete=s,r.prototype.get=i,r.prototype.has=a,r.prototype.set=c,t.exports=r},function(t,e,n){function r(t){var e=-1,n=t?t.length:0;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}var o=n(255),s=n(256),i=n(257),a=n(258),c=n(259);r.prototype.clear=o,r.prototype.delete=s,r.prototype.get=i,r.prototype.has=a,r.prototype.set=c,t.exports=r},function(t,e,n){var r=n(72),o=n(73),s=r(o,"Map");t.exports=s},function(t,e,n){function r(t){var e=-1,n=t?t.length:0;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}var o=n(260),s=n(261),i=n(262),a=n(263),c=n(264);r.prototype.clear=o,r.prototype.delete=s,r.prototype.get=i,r.prototype.has=a,r.prototype.set=c,t.exports=r},function(t,e,n){var r=n(72),o=n(73),s=r(o,"Set");t.exports=s},function(t,e){function n(t,e,n){switch(n.length){case 0:return t.call(e);case 1:return t.call(e,n[0]);case 2:return t.call(e,n[0],n[1]);case 3:return t.call(e,n[0],n[1],n[2])}return t.apply(e,n)}t.exports=n},function(t,e){function n(t,e){for(var n=-1,r=t?t.length:0,o=0,s=[];++n<r;){var i=t[n];e(i,n,t)&&(s[o++]=i)}return s}t.exports=n},function(t,e,n){function r(t,e){var n=i(t)||s(t)?o(t.length,String):[],r=n.length,c=!!r;for(var l in t)!e&&!u.call(t,l)||c&&("length"==l||a(l,r))||n.push(l);return n}var o=n(236),s=n(271),i=n(126),a=n(251),c=Object.prototype,u=c.hasOwnProperty;t.exports=r},function(t,e){function n(t,e){for(var n=-1,r=e.length,o=t.length;++n<r;)t[o+n]=e[n];return t}t.exports=n},function(t,e,n){function r(t,e,n,r){var d=-1,f=s,p=!0,h=t.length,g=[],y=e.length;if(!h)return g;n&&(e=a(e,c(n))),r?(f=i,p=!1):e.length>=l&&(f=u,p=!1,e=new o(e));t:for(;++d<h;){var m=t[d],k=n?n(m):m;if(m=r||0!==m?m:0,p&&k===k){for(var x=y;x--;)if(e[x]===k)continue t;g.push(m)}else f(e,k,r)||g.push(m)}return g}var o=n(119),s=n(120),i=n(121),a=n(122),c=n(237),u=n(124),l=200;t.exports=r},function(t,e){function n(t,e,n,r){for(var o=t.length,s=n+(r?1:-1);r?s--:++s<o;)if(e(t[s],s,t))return s;return-1}t.exports=n},function(t,e){function n(t){return t!==t}t.exports=n},function(t,e,n){function r(t){if(!a(t)||i(t))return!1;var e=o(t)||s(t)?g:l;return e.test(c(t))}var o=n(128),s=n(250),i=n(253),a=n(75),c=n(269),u=/[\\^$.*+?()[\]{}|]/g,l=/^\[object .+?Constructor\]$/,d=Function.prototype,f=Object.prototype,p=d.toString,h=f.hasOwnProperty,g=RegExp("^"+p.call(h).replace(u,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");t.exports=r},function(t,e,n){function r(t){if(!o(t))return s(t);var e=[];for(var n in Object(t))a.call(t,n)&&"constructor"!=n&&e.push(n);return e}var o=n(254),s=n(265),i=Object.prototype,a=i.hasOwnProperty;t.exports=r},function(t,e,n){function r(t,e){return e=s(void 0===e?t.length-1:e,0),function(){for(var n=arguments,r=-1,i=s(n.length-e,0),a=Array(i);++r<i;)a[r]=n[e+r];r=-1;for(var c=Array(e+1);++r<e;)c[r]=n[r];return c[e]=a,o(t,this,c)}}var o=n(226),s=Math.max;t.exports=r},function(t,e){function n(t,e){for(var n=-1,r=Array(t);++n<t;)r[n]=e(n);return r}t.exports=n},function(t,e){function n(t){return function(e){return t(e)}}t.exports=n},function(t,e,n){function r(t,e,n){var r=-1,d=s,f=t.length,p=!0,h=[],g=h;if(n)p=!1,d=i;else if(f>=l){var y=e?null:c(t);if(y)return u(y);p=!1,d=a,g=new o}else g=e?[]:h;t:for(;++r<f;){var m=t[r],k=e?e(m):m;if(m=n||0!==m?m:0,p&&k===k){for(var x=g.length;x--;)if(g[x]===k)continue t;e&&g.push(k),h.push(m)}else d(g,k,n)||(g!==h&&g.push(k),h.push(m))}return h}var o=n(119),s=n(120),i=n(121),a=n(124),c=n(242),u=n(125),l=200;t.exports=r},function(t,e,n){function r(t,e){return o(e,function(e){return t[e]})}var o=n(122);t.exports=r},function(t,e,n){function r(t,e,n){for(var r=-1,a=t.length;++r<a;)var c=c?o(s(c,t[r],e,n),s(t[r],c,e,n)):t[r];return c&&c.length?i(c,e,n):[]}var o=n(229),s=n(230),i=n(238);t.exports=r},function(t,e,n){var r=n(73),o=r["__core-js_shared__"];t.exports=o},function(t,e,n){var r=n(225),o=n(276),s=n(125),i=1/0,a=r&&1/s(new r([,-0]))[1]==i?function(t){return new r(t)}:o;t.exports=a},function(t,e){(function(e){var n="object"==typeof e&&e&&e.Object===Object&&e;t.exports=n}).call(e,function(){return this}())},function(t,e){function n(t,e){return null==t?void 0:t[e]}t.exports=n},function(t,e,n){function r(){this.__data__=o?o(null):{}}var o=n(57);t.exports=r},function(t,e){function n(t){return this.has(t)&&delete this.__data__[t]}t.exports=n},function(t,e,n){function r(t){var e=this.__data__;if(o){var n=e[t];return n===s?void 0:n}return a.call(e,t)?e[t]:void 0}var o=n(57),s="__lodash_hash_undefined__",i=Object.prototype,a=i.hasOwnProperty;t.exports=r},function(t,e,n){function r(t){var e=this.__data__;return o?void 0!==e[t]:i.call(e,t)}var o=n(57),s=Object.prototype,i=s.hasOwnProperty;t.exports=r},function(t,e,n){function r(t,e){var n=this.__data__;return n[t]=o&&void 0===e?s:e,this}var o=n(57),s="__lodash_hash_undefined__";t.exports=r},function(t,e){function n(t){var e=!1;if(null!=t&&"function"!=typeof t.toString)try{e=!!(t+"")}catch(n){}return e}t.exports=n},function(t,e){function n(t,e){return e=null==e?r:e,!!e&&("number"==typeof t||o.test(t))&&t>-1&&t%1==0&&t<e}var r=9007199254740991,o=/^(?:0|[1-9]\d*)$/;t.exports=n},function(t,e){function n(t){var e=typeof t;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==t:null===t}t.exports=n},function(t,e,n){function r(t){return!!s&&s in t}var o=n(241),s=function(){var t=/[^.]+$/.exec(o&&o.keys&&o.keys.IE_PROTO||"");return t?"Symbol(src)_1."+t:""}();t.exports=r},function(t,e){function n(t){var e=t&&t.constructor,n="function"==typeof e&&e.prototype||r;return t===n}var r=Object.prototype;t.exports=n},function(t,e){function n(){this.__data__=[]}t.exports=n},function(t,e,n){function r(t){var e=this.__data__,n=o(e,t);if(n<0)return!1;var r=e.length-1;return n==r?e.pop():i.call(e,n,1),!0}var o=n(55),s=Array.prototype,i=s.splice;t.exports=r},function(t,e,n){function r(t){var e=this.__data__,n=o(e,t);return n<0?void 0:e[n][1]}var o=n(55);t.exports=r},function(t,e,n){function r(t){return o(this.__data__,t)>-1}var o=n(55);t.exports=r},function(t,e,n){function r(t,e){var n=this.__data__,r=o(n,t);return r<0?n.push([t,e]):n[r][1]=e,this}var o=n(55);t.exports=r},function(t,e,n){function r(){this.__data__={hash:new o,map:new(i||s),string:new o}}var o=n(221),s=n(222),i=n(223);t.exports=r},function(t,e,n){function r(t){return o(this,t).delete(t)}var o=n(56);t.exports=r},function(t,e,n){function r(t){return o(this,t).get(t)}var o=n(56);t.exports=r},function(t,e,n){function r(t){return o(this,t).has(t)}var o=n(56);t.exports=r},function(t,e,n){function r(t,e){return o(this,t).set(t,e),this}var o=n(56);t.exports=r},function(t,e,n){var r=n(266),o=r(Object.keys,Object);t.exports=o},function(t,e){function n(t,e){return function(n){return t(e(n))}}t.exports=n},function(t,e){function n(t){return this.__data__.set(t,r),this}var r="__lodash_hash_undefined__";t.exports=n},function(t,e){function n(t){return this.__data__.has(t)}t.exports=n},function(t,e){function n(t){if(null!=t){try{return o.call(t)}catch(e){}try{return t+""}catch(e){}}return""}var r=Function.prototype,o=r.toString;t.exports=n},function(t,e){function n(t,e){return t===e||t!==t&&e!==e}t.exports=n},function(t,e,n){function r(t){return o(t)&&a.call(t,"callee")&&(!u.call(t,"callee")||c.call(t)==s)}var o=n(127),s="[object Arguments]",i=Object.prototype,a=i.hasOwnProperty,c=i.toString,u=i.propertyIsEnumerable;t.exports=r},function(t,e){function n(t){return"number"==typeof t&&t>-1&&t%1==0&&t<=r}var r=9007199254740991;t.exports=n},function(t,e,n){function r(t){return"string"==typeof t||!o(t)&&s(t)&&c.call(t)==i}var o=n(126),s=n(76),i="[object String]",a=Object.prototype,c=a.toString;t.exports=r},function(t,e,n){function r(t){return"symbol"==typeof t||o(t)&&a.call(t)==s}var o=n(76),s="[object Symbol]",i=Object.prototype,a=i.toString;t.exports=r},function(t,e,n){function r(t){return i(t)?o(t):s(t)}var o=n(228),s=n(234),i=n(74);t.exports=r},function(t,e){function n(){}t.exports=n},function(t,e,n){function r(t){if(!t)return 0===t?t:0;if(t=o(t),t===s||t===-s){var e=t<0?-1:1;return e*i}return t===t?t:0}var o=n(279),s=1/0,i=1.7976931348623157e308;t.exports=r},function(t,e,n){function r(t){var e=o(t),n=e%1;return e===e?n?e-n:e:0}var o=n(277);t.exports=r},function(t,e,n){function r(t){if("number"==typeof t)return t;if(s(t))return i;if(o(t)){var e="function"==typeof t.valueOf?t.valueOf():t;t=o(e)?e+"":e}if("string"!=typeof t)return 0===t?t:+t;t=t.replace(a,"");var n=u.test(t);return n||l.test(t)?d(t.slice(2),n?2:8):c.test(t)?i:+t}var o=n(75),s=n(274),i=NaN,a=/^\s+|\s+$/g,c=/^[-+]0x[0-9a-f]+$/i,u=/^0b[01]+$/i,l=/^0o[0-7]+$/i,d=parseInt;t.exports=r},function(t,e,n){function r(t){return t?o(t,s(t)):[]}var o=n(239),s=n(275);t.exports=r},function(t,e,n){var r=n(227),o=n(235),s=n(240),i=n(127),a=o(function(t){return s(r(t,i))});t.exports=a},function(t,e){function n(t){if(t=""+t,!(t.length>1e4)){var e=/^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(t);if(e){var n=parseFloat(e[1]),r=(e[2]||"ms").toLowerCase();switch(r){case"years":case"year":case"yrs":case"yr":case"y":return n*l;case"days":case"day":case"d":return n*u;case"hours":case"hour":case"hrs":case"hr":case"h":return n*c;case"minutes":case"minute":case"mins":case"min":case"m":return n*a;case"seconds":case"second":case"secs":case"sec":case"s":return n*i;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return n}}}}function r(t){return t>=u?Math.round(t/u)+"d":t>=c?Math.round(t/c)+"h":t>=a?Math.round(t/a)+"m":t>=i?Math.round(t/i)+"s":t+"ms"}function o(t){return s(t,u,"day")||s(t,c,"hour")||s(t,a,"minute")||s(t,i,"second")||t+" ms"}function s(t,e,n){if(!(t<e))return t<1.5*e?Math.floor(t/e)+" "+n:Math.ceil(t/e)+" "+n+"s"}var i=1e3,a=60*i,c=60*a,u=24*c,l=365.25*u;t.exports=function(t,e){return e=e||{},"string"==typeof t?n(t):e.long?o(t):r(t)}},function(t,e,n){function r(t){var e=t[0],n=t[1]-1;if(n<0&&e<=0)return i;if(e===-1)return function(t){return t<=n};if(0===e)return function(t){return t===n};if(1===e)return n<0?s:function(t){return t>=n};var r=n%e;return r<0&&(r+=e),e>1?function(t){return t>=n&&t%e===r}:(e*=-1,function(t){return t<=n&&t%e===r})}t.exports=r;var o=n(38),s=o.trueFunc,i=o.falseFunc},function(t,e,n){var r=n(285),o=n(283);t.exports=function(t){return o(r(t))},t.exports.parse=r,t.exports.compile=o},function(t,e){function n(t){if(t=t.trim().toLowerCase(),"even"===t)return[2,0];if("odd"===t)return[2,1];var e=t.match(r);if(!e)throw new SyntaxError("n-th rule couldn't be parsed ('"+t+"')");var n;return e[1]?(n=parseInt(e[1],10),isNaN(n)&&(n="-"===e[1].charAt(0)?-1:1)):n=0,[n,e[3]?parseInt((e[2]||"")+e[3],10):0]}t.exports=n;var r=/^([+\-]?\d*n)?\s*(?:([+\-]?)\s*(\d+))?$/},function(t,e,n){"use strict";t.exports=n(339)},function(t,e,n){"undefined"==typeof Promise&&(n(306).enable(),window.Promise=n(305)),n(315)},function(t,e){(function(e){"use strict";function n(t){a.length||(i(),c=!0),a[a.length]=t}function r(){for(;u<a.length;){var t=u;if(u+=1,a[t].call(),u>l){for(var e=0,n=a.length-u;e<n;e++)a[e]=a[e+u];a.length-=u,u=0}}a.length=0,u=0,c=!1}function o(t){var e=1,n=new d(t),r=document.createTextNode("");return n.observe(r,{characterData:!0}),function(){e=-e,r.data=e}}function s(t){return function(){function e(){clearTimeout(n),clearInterval(r),t()}var n=setTimeout(e,0),r=setInterval(e,50)}}t.exports=n;var i,a=[],c=!1,u=0,l=1024,d=e.MutationObserver||e.WebKitMutationObserver;i="function"==typeof d?o(r):s(r),n.requestFlush=i,n.makeRequestCallFromTimer=s}).call(e,function(){return this}())},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function o(t,e){var n={};for(var r in t)e.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r]);return n}function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function i(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function a(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0});var c=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),u=n(9),l=r(u),d=n(290),f=r(d);n(293);var p=n(304),h=Object.keys(p),g=l.default.createElement("summary",null,"View JSON"),y=function(t){var e=t.name,n=t.data,r=t.className;return l.default.createElement("div",{className:r},l.default.createElement("h3",null,e),l.default.createElement("div",{style:{padding:10,border:"1px solid"}},l.default.createElement(f.default,{rawState:n})),l.default.createElement("details",null,g,l.default.createElement("pre",null,JSON.stringify(n,null,2))))};y.propTypes={name:l.default.PropTypes.string.isRequired,data:l.default.PropTypes.any,className:l.default.PropTypes.string};var m=l.default.createElement("h3",null,"Others Data"),k=l.default.createElement("summary",null,"Scripts"),x=l.default.createElement("h2",null,"Slate Transform Explorer"),v=l.default.createElement("p",null,"Select Fixture on the left sidebar"),b=function(t){function e(){var t,n,r,a;s(this,e);for(var c=arguments.length,u=Array(c),d=0;d<c;d++)u[d]=arguments[d];return n=r=i(this,(t=Object.getPrototypeOf(e)).call.apply(t,[this].concat(u))),r.state={fixture:null},r.onFixtureChange=function(t){r.setState({fixture:t})},r.renderFixture=function(t){var e=Object.keys(t);return l.default.createElement("div",null,e.map(function(e,n){var r=t[e],s=r.input,i=r.output,a=r.index,c=o(r,["input","output","index"]),u=Object.keys(c);return l.default.createElement("div",{key:n,className:"row"},l.default.createElement("h2",{className:"col-sm-12"},e),u.length>0&&l.default.createElement("div",{className:"col-sm-12"},m,u.map(function(t,e){return l.default.createElement(y,{key:e,name:t,data:c[t]})})),l.default.createElement(y,{className:"col-sm-6",name:"Input",data:s}),l.default.createElement(y,{className:"col-sm-6",name:"Output",data:i}),l.default.createElement("div",{className:"col-sm-12"},l.default.createElement("details",null,k,l.default.createElement("pre",null,a))))}))},a=n,i(r,a)}return a(e,t),c(e,[{key:"render",value:function(){var t=this;return l.default.createElement("div",{className:"App"},x,l.default.createElement("div",{className:"row"},l.default.createElement("ul",{className:"col-sm-3"},h.sort().map(function(e){return l.default.createElement("li",{key:e,onClick:function(){return t.onFixtureChange(e)}},e)})),l.default.createElement("div",{className:"col-sm-9"},!this.state.fixture&&v,this.state.fixture&&l.default.createElement("div",null,l.default.createElement("h1",null,this.state.fixture),this.renderFixture(p[this.state.fixture])))))}}]),e}(u.Component);e.default=b},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function o(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0});var a=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),c=n(9),u=r(c),l=n(382),d=u.default.createElement("img",{src:"https://pixabay.com/static/uploads/photo/2016/08/14/18/28/dahlia-1593633__180.jpg"}),f={nodes:{"block-quote":function(t){return u.default.createElement("blockquote",null,t.children)},"bulleted-list":function(t){return u.default.createElement("ul",null,t.children)},"heading-one":function(t){return u.default.createElement("h1",null,t.children)},"heading-two":function(t){return u.default.createElement("h2",null,t.children)},"heading-three":function(t){return u.default.createElement("h3",null,t.children)},"heading-four":function(t){return u.default.createElement("h4",null,t.children)},"heading-five":function(t){return u.default.createElement("h5",null,t.children)},"heading-six":function(t){return u.default.createElement("h6",null,t.children)},"list-item":function(t){return u.default.createElement("li",null,t.children)},paragraph:function(t){return u.default.createElement("p",null,t.children)},image:function(t){return d}}},p=function(t){function e(){return o(this,e),s(this,Object.getPrototypeOf(e).apply(this,arguments))}return i(e,t),a(e,[{key:"render",value:function(){var t=l.Raw.deserialize(this.props.rawState,{terse:!0});return u.default.createElement("div",null,u.default.createElement(l.Editor,{readOnly:!0,schema:f,state:t}))}}]),e}(u.default.Component);p.propTypes={rawState:u.default.PropTypes.any},e.default=p},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}var o=n(9),s=r(o),i=n(58),a=r(i),c=n(289),u=r(c);n(294),a.default.render(s.default.createElement(u.default,null),document.getElementById("root"))},function(t,e,n){var r="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";!function(t){"use strict";function e(t){var e=t.charCodeAt(0);return e===i||e===d?62:e===a||e===f?63:e<c?-1:e<c+10?e-c+26+26:e<l+26?e-l:e<u+26?e-u+26:void 0}function n(t){function n(t){u[d++]=t}var r,o,i,a,c,u;if(t.length%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var l=t.length;c="="===t.charAt(l-2)?2:"="===t.charAt(l-1)?1:0,u=new s(3*t.length/4-c),i=c>0?t.length-4:t.length;var d=0;for(r=0,o=0;r<i;r+=4,o+=3)a=e(t.charAt(r))<<18|e(t.charAt(r+1))<<12|e(t.charAt(r+2))<<6|e(t.charAt(r+3)),n((16711680&a)>>16),n((65280&a)>>8),n(255&a);return 2===c?(a=e(t.charAt(r))<<2|e(t.charAt(r+1))>>4,n(255&a)):1===c&&(a=e(t.charAt(r))<<10|e(t.charAt(r+1))<<4|e(t.charAt(r+2))>>2,n(a>>8&255),n(255&a)),u}function o(t){function e(t){return r.charAt(t)}function n(t){return e(t>>18&63)+e(t>>12&63)+e(t>>6&63)+e(63&t)}var o,s,i,a=t.length%3,c="";for(o=0,i=t.length-a;o<i;o+=3)s=(t[o]<<16)+(t[o+1]<<8)+t[o+2],c+=n(s);switch(a){case 1:s=t[t.length-1],c+=e(s>>2),c+=e(s<<4&63),c+="==";break;case 2:s=(t[t.length-2]<<8)+t[t.length-1],c+=e(s>>10),c+=e(s>>4&63),c+=e(s<<2&63),c+="="}return c}var s="undefined"!=typeof Uint8Array?Uint8Array:Array,i="+".charCodeAt(0),a="/".charCodeAt(0),c="0".charCodeAt(0),u="a".charCodeAt(0),l="A".charCodeAt(0),d="-".charCodeAt(0),f="_".charCodeAt(0);t.toByteArray=n,t.fromByteArray=o}(e)},function(t,e){},293,function(t,e){e.read=function(t,e,n,r,o){var s,i,a=8*o-r-1,c=(1<<a)-1,u=c>>1,l=-7,d=n?o-1:0,f=n?-1:1,p=t[e+d];for(d+=f,s=p&(1<<-l)-1,p>>=-l,l+=a;l>0;s=256*s+t[e+d],d+=f,l-=8);for(i=s&(1<<-l)-1,s>>=-l,l+=r;l>0;i=256*i+t[e+d],d+=f,l-=8);if(0===s)s=1-u;else{if(s===c)return i?NaN:(p?-1:1)*(1/0);i+=Math.pow(2,r),s-=u}return(p?-1:1)*i*Math.pow(2,s-r)},e.write=function(t,e,n,r,o,s){var i,a,c,u=8*s-o-1,l=(1<<u)-1,d=l>>1,f=23===o?Math.pow(2,-24)-Math.pow(2,-77):0,p=r?0:s-1,h=r?1:-1,g=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(a=isNaN(e)?1:0,i=l):(i=Math.floor(Math.log(e)/Math.LN2),e*(c=Math.pow(2,-i))<1&&(i--,c*=2),e+=i+d>=1?f/c:f*Math.pow(2,1-d),e*c>=2&&(i++,c/=2),i+d>=l?(a=0,i=l):i+d>=1?(a=(e*c-1)*Math.pow(2,o),i+=d):(a=e*Math.pow(2,d-1)*Math.pow(2,o),i=0));o>=8;t[n+p]=255&a,p+=h,a/=256,o-=8);for(i=i<<o|a,u+=o;u>0;t[n+p]=255&i,p+=h,i/=256,u-=8);t[n+p-h]|=128*g}},function(t,e){var n={}.toString;t.exports=Array.isArray||function(t){return"[object Array]"==n.call(t)}},function(t,e){t.exports={_args:[[{name:"cheerio",raw:"cheerio@^0.20.0",rawSpec:"^0.20.0",scope:null,spec:">=0.20.0 <0.21.0",type:"range"},"/Users/achilles/Workspaces/github/slate-transform-explorer/node_modules/slate"]],_from:"cheerio@>=0.20.0 <0.21.0",_id:"cheerio@0.20.0",_inCache:!0,_installable:!0,_location:"/cheerio",_nodeVersion:"5.5.0",_npmUser:{email:"me@feedic.com",name:"feedic"},_npmVersion:"3.6.0",_phantomChildren:{},_requested:{name:"cheerio",raw:"cheerio@^0.20.0",rawSpec:"^0.20.0",scope:null,spec:">=0.20.0 <0.21.0",type:"range"},_requiredBy:["/slate"],_resolved:"https://registry.npmjs.org/cheerio/-/cheerio-0.20.0.tgz",_shasum:"5c710f2bab95653272842ba01c6ea61b3545ec35",_shrinkwrap:null,_spec:"cheerio@^0.20.0",_where:"/Users/achilles/Workspaces/github/slate-transform-explorer/node_modules/slate",author:{email:"mattmuelle@gmail.com",name:"Matt Mueller",url:"mat.io"},bugs:{url:"https://github.com/cheeriojs/cheerio/issues"},dependencies:{"css-select":"~1.2.0","dom-serializer":"~0.1.0",entities:"~1.1.1",htmlparser2:"~3.8.1",jsdom:"^7.0.2",lodash:"^4.1.0"},description:"Tiny, fast, and elegant implementation of core jQuery designed specifically for the server",devDependencies:{benchmark:"~1.0.0",coveralls:"~2.10","expect.js":"~0.3.1",istanbul:"~0.2",jshint:"~2.5.1",mocha:"*",xyz:"~0.5.0"},directories:{},dist:{shasum:"5c710f2bab95653272842ba01c6ea61b3545ec35",tarball:"https://registry.npmjs.org/cheerio/-/cheerio-0.20.0.tgz"},engines:{node:">= 0.6"},files:["index.js","lib"],gitHead:"c3ec1cd7bff41da0033bdc45375d77844f0f81c0",homepage:"https://github.com/cheeriojs/cheerio#readme",keywords:["htmlparser","jquery","selector","scraper","parser","html"],license:"MIT",main:"./index.js",maintainers:[{email:"mattmuelle@gmail.com",name:"mattmueller"},{email:"dc@davidchambers.me",name:"davidchambers"},{email:"mike@mikepennisi.com",name:"jugglinmike"},{email:"me@feedic.com",name:"feedic"}],name:"cheerio",optionalDependencies:{jsdom:"^7.0.2"},readme:"ERROR: No README data found!",repository:{type:"git",url:"git://github.com/cheeriojs/cheerio.git"},scripts:{test:"make test"},version:"0.20.0"}},function(t,e){t.exports={0:65533,128:8364,130:8218,131:402,132:8222,133:8230,134:8224,135:8225,136:710,137:8240,138:352,139:8249,140:338,142:381,145:8216,146:8217,147:8220,148:8221,149:8226,150:8211,151:8212,152:732,153:8482,154:353,155:8250,156:339,158:382,159:376}},function(t,e){t.exports={Aacute:"Á",aacute:"á",Acirc:"Â",acirc:"â",acute:"´",AElig:"Æ",aelig:"æ",Agrave:"À",agrave:"à",amp:"&",AMP:"&",Aring:"Å",aring:"å",Atilde:"Ã",atilde:"ã",Auml:"Ä",auml:"ä",brvbar:"¦",Ccedil:"Ç",ccedil:"ç",cedil:"¸",cent:"¢",copy:"©",COPY:"©",curren:"¤",deg:"°",divide:"÷",Eacute:"É",eacute:"é",Ecirc:"Ê",ecirc:"ê",Egrave:"È",egrave:"è",ETH:"Ð",eth:"ð",Euml:"Ë",euml:"ë",frac12:"½",frac14:"¼",frac34:"¾",gt:">",GT:">",Iacute:"Í",iacute:"í",Icirc:"Î",icirc:"î",iexcl:"¡",Igrave:"Ì",igrave:"ì",iquest:"¿",Iuml:"Ï",iuml:"ï",laquo:"«",lt:"<",LT:"<",macr:"¯",micro:"µ",middot:"·",nbsp:" ",not:"¬",Ntilde:"Ñ",ntilde:"ñ",Oacute:"Ó",oacute:"ó",Ocirc:"Ô",ocirc:"ô",Ograve:"Ò",ograve:"ò",ordf:"ª",ordm:"º",Oslash:"Ø",oslash:"ø",Otilde:"Õ",otilde:"õ",Ouml:"Ö",ouml:"ö",para:"¶",plusmn:"±",pound:"£",quot:'"',QUOT:'"',raquo:"»",reg:"®",REG:"®",sect:"§",shy:"­",sup1:"¹",sup2:"²",sup3:"³",szlig:"ß",THORN:"Þ",thorn:"þ",times:"×",Uacute:"Ú",uacute:"ú",Ucirc:"Û",ucirc:"û",Ugrave:"Ù",ugrave:"ù",uml:"¨",Uuml:"Ü",uuml:"ü",Yacute:"Ý",yacute:"ý",yen:"¥",yuml:"ÿ"}},298,130,299,131,function(t,e){t.exports={"wrap-text-at-range":{"start-of-block":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"[[wo]]rd"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .wrapTextAtRange(range, '[[', ']]')\n    .apply()\n}\n"},"end-of-block":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wo[[rd]]"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: first.key,\n    focusOffset: 4\n  })\n\n  return state\n    .transform()\n    .wrapTextAtRange(range, '[[', ']]')\n    .apply()\n}\n"},"across-inlines":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]},{kind:"inline",type:"link",nodes:[{kind:"text",text:"another"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"wo[[rd"}]},{kind:"inline",type:"link",nodes:[{kind:"text",text:"an]]other"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const last = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: last.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .wrapTextAtRange(range, '[[', ']]')\n    .apply()\n}\n"},"empty-block":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:""}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"[[]]"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .wrapTextAtRange(range, '[[', ']]')\n    .apply()\n}\n"},"backwards-selection":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"w[[or]]d"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 3,\n    focusKey: first.key,\n    focusOffset: 1,\n    isBackward: true\n  })\n\n  return state\n    .transform()\n    .wrapTextAtRange(range, '[[', ']]')\n    .apply()\n}\n"},"middle-of-block":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"w[[or]]d"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 3\n  })\n\n  return state\n    .transform()\n    .wrapTextAtRange(range, '[[', ']]')\n    .apply()\n}\n"},"across-blocks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wo[[rd"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"an]]other"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const last = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: last.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .wrapTextAtRange(range, '[[', ']]')\n    .apply()\n}\n"},"without-suffix":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"w**or**d"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 3\n  })\n\n  return state\n    .transform()\n    .wrapTextAtRange(range, '**')\n    .apply()\n}\n"},"whole-block":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"[[word]]"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 4\n  })\n\n  return state\n    .transform()\n    .wrapTextAtRange(range, '[[', ']]')\n    .apply()\n}\n"}},"insert-text":{"inside-void":{input:{nodes:[{kind:"block",type:"image",isVoid:!0}]},output:{nodes:[{kind:"block",type:"image",isVoid:!0}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertText('a')\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"},"first-space":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:" word"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertText(' ')\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.moveForward().toJS()\n  )\n\n  return next\n}\n"},"first-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"aword"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertText('a')\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.moveForward().toJS()\n  )\n\n  return next\n}\n"},"first-words":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"a few words word"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertText('a few words ')\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.moveForward(12).toJS()\n  )\n\n  return next\n}\n"
},"middle-space":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"w ord"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertText(' ')\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.moveForward().toJS()\n  )\n\n  return next\n}\n"},"last-space":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word "}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertText(' ')\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.moveForward().toJS()\n  )\n\n  return next\n}\n"},"middle-words":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"w a few words ord"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertText(' a few words ')\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.moveForward(13).toJS()\n  )\n\n  return next\n}\n"},"middle-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"waord"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertText('a')\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.moveForward().toJS()\n  )\n\n  return next\n}\n"},"last-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"worda"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertText('a')\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.moveForward().toJS()\n  )\n\n  return next\n}\n"},"last-words":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word a few words"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertText(' a few words')\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.moveForward(12).toJS()\n  )\n\n  return next\n}\n"},"during-mark":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w"},{text:"or",marks:[{type:"bold"}]},{text:"d"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w"},{text:"oar",marks:[{type:"bold"}]},{text:"d"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertText('a')\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.moveForward().toJS()\n  )\n\n  return next\n}\n"},"before-mark":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w"},{text:"or",marks:[{type:"bold"}]},{text:"d"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"wa"},{text:"or",marks:[{type:"bold"}]},{text:"d"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertText('a')\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.moveForward().toJS()\n  )\n\n  return next\n}\n"},"after-mark":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w"},{text:"or",marks:[{type:"bold"}]},{text:"d"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w"},{text:"ora",marks:[{type:"bold"}]},{text:"d"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 3,\n    focusKey: first.key,\n    focusOffset: 3\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertText('a')\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.moveForward().toJS()\n  )\n\n  return next\n}\n"},"with-marks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"word"},{text:"a",marks:[{type:"bold"}]}]}]}]},index:"\nimport { Mark } from '../../../../..'\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  const marks = Mark.createSet([\n    Mark.create({\n      type: 'bold'\n    })\n  ])\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertText('a', marks)\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.moveForward().toJS()\n  )\n\n  return next\n}\n"}},"set-block":{"single-block":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"code",nodes:[{kind:"text",text:"word"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .setBlock({ type: 'code' })\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"},"across-inlines":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"another"}]}]}]},output:{nodes:[{kind:"block",type:"code",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]},{kind:"block",type:"code",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"another"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .setBlock({ type: 'code' })\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"},"data-only":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",data:{key:"value"},nodes:[{kind:"text",text:"word"}]}]},index:"\nimport { Data } from '../../../../..'\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .setBlock({ data: Data.create({ key: 'value' }) })\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"},"with-is-void":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"image",isVoid:!0}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .setBlock({\n      type: 'image',\n      isVoid: true\n    })\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"},"with-data":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"code",data:{key:"value"},nodes:[{kind:"text",text:"word"}]}]},index:"\nimport { Data } from '../../../../..'\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .setBlock({\n      type: 'code',\n      data: Data.create({ key: 'value' })\n    })\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"},"single-block-string-shorthand":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"code",nodes:[{kind:"text",text:"word"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .setBlock('code')\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"},"across-blocks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},output:{nodes:[{kind:"block",type:"code",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"code",nodes:[{kind:"text",text:"another"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .setBlock({ type: 'code' })\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"},"nested-block":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"block",type:"code",nodes:[{kind:"text",text:"word"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .setBlock({ type: 'code' })\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"},"with-data-object":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"code",data:{key:"value"},nodes:[{kind:"text",text:"word"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .setBlock({\n      type: 'code',\n      data: { key: 'value' }\n    })\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"}},"delete-forward":{"before-inline-sibling":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"one"},{kind:"inline",type:"link",nodes:[{kind:"text",text:"two"}]},{kind:"text",text:"a"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"one"},{kind:"inline",type:"link",nodes:[{kind:"text",text:"two"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const last = texts.last()\n  const range = selection.merge({\n    anchorKey: last.key,\n    anchorOffset: 0,\n    focusKey: last.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .deleteForward()\n    .apply()\n\n  const updated = next.document.getTexts().last()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToEndOf(updated).toJS()\n  )\n\n  return next\n}\n"},"end-of-document":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .deleteForward()\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStart().toJS()\n  )\n\n  return next\n}\n"},"first-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"ord"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .deleteForward()\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStart().toJS()\n  )\n\n  return next\n}\n"},"inside-inline-sibling":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"one"},{kind:"inline",type:"link",nodes:[{kind:"text",text:"a"}]},{kind:"text",text:"two"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"onetwo"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.get(0)\n  const second = texts.get(1)\n  const range = selection.merge({\n    anchorKey: second.key,\n    anchorOffset: 0,\n    focusKey: second.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .deleteForward()\n    .apply()\n\n  const updated = next.document.getTexts().first()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStartOf(updated).moveForward(first.length).toJS()\n  )\n\n  return next\n}\n"},"join-blocks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wordanother"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .deleteForward()\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStart().toJS()\n  )\n\n  return next\n}\n"},"join-nested-blocks":{input:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]}]},output:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wordanother"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .deleteForward()\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStart().toJS()\n  )\n\n  return next\n}\n"},"last-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wor"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length - 1,\n    focusKey: first.key,\n    focusOffset: first.length - 1\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .deleteForward()\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStart().toJS()\n  )\n\n  return next\n}\n"},"middle-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wrd"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .deleteForward()\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStart().toJS()\n  )\n\n  return next\n}\n"}},"unwrap-block":{"across-blocks":{input:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .unwrapBlock('quote')\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"},"across-inlines":{input:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"another"}]}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"another"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .unwrapBlock('quote')\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"},"ending-child-blocks":{input:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"one"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"two"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"three"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"four"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"five"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"six"}]}]}]},output:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"one"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"two"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"three"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"four"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"five"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"six"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const fifth = texts.get(4)\n  const sixth = texts.get(5)\n  const range = selection.merge({\n    anchorKey: fifth.key,\n    anchorOffset: 0,\n    focusKey: sixth.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .unwrapBlock('quote')\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"},"middle-child-blocks":{input:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"one"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"two"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"three"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"four"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"five"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"six"}]}]}]},output:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"one"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"two"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"three"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"four"}]},{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"five"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"six"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const third = texts.get(2)\n  const fourth = texts.get(3)\n  const range = selection.merge({\n    anchorKey: third.key,\n    anchorOffset: 0,\n    focusKey: fourth.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .unwrapBlock('quote')\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"},"nested-block":{input:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]}]}]},output:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .unwrapBlock('quote')\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"},"single-block":{input:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .unwrapBlock('quote')\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"},"starting-child-blocks":{input:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"one"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"two"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"three"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"four"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"five"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"six"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"one"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"two"}]},{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"three"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"four"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"five"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"six"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.get(0)\n  const second = texts.get(1)\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: second.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .unwrapBlock('quote')\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"},"with-object":{input:{nodes:[{kind:"block",type:"quote",data:{key:"value"},nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .unwrapBlock({\n      type: 'quote',\n      data: { key: 'value' }\n    })\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"}},"insert-inline-at-range":{"block-end":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"},{kind:"inline",type:"hashtag",isVoid:!0}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  return state\n    .transform()\n    .insertInlineAtRange(range, {\n      type: 'hashtag',\n      isVoid: true\n    })\n    .apply()\n}\n"},"block-middle":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wo"},{kind:"inline",type:"hashtag",isVoid:!0},{kind:"text",text:"rd"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .insertInlineAtRange(range, {\n      type: 'hashtag',\n      isVoid: true\n    })\n    .apply()\n}\n"},"block-start":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"hashtag",isVoid:!0},{kind:"text",text:"word"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .insertInlineAtRange(range, {\n      type: 'hashtag',\n      isVoid: true\n    })\n    .apply()\n}\n"
},"inside-inline":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"wo"},{kind:"inline",type:"image",isVoid:!0},{kind:"text",text:"rd"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .insertInlineAtRange(range, {\n      type: 'image',\n      isVoid: true\n    })\n    .apply()\n}\n"},"is-empty":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:""}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"hashtag",isVoid:!0}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .insertInlineAtRange(range, {\n      type: 'hashtag',\n      isVoid: true\n    })\n    .apply()\n}\n"},"is-void":{input:{nodes:[{kind:"block",type:"image",isVoid:!0}]},output:{nodes:[{kind:"block",type:"image",isVoid:!0}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .insertInlineAtRange(range, {\n      type: 'hashtag',\n      isVoid: true\n    })\n    .apply()\n}\n"},"with-inline":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"image",isVoid:!0},{kind:"text",text:"word"}]}]},index:"\nimport { Inline } from '../../../../..'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .insertInlineAtRange(range, Inline.create({\n      type: 'image',\n      isVoid: true\n    }))\n    .apply()\n}\n"}},"unwrap-inline":{"across-blocks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wo"},{kind:"inline",type:"hashtag",nodes:[{kind:"text",text:"rd"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"hashtag",nodes:[{kind:"text",text:"an"}]},{kind:"text",text:"other"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .unwrapInline('hashtag')\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"},"across-inlines":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"wo"}]},{kind:"inline",type:"hashtag",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"rd"}]}]},{kind:"inline",type:"hashtag",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"an"}]}]},{kind:"inline",type:"link",nodes:[{kind:"text",text:"other"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"wo"}]},{kind:"inline",type:"link",nodes:[{kind:"text",text:"rd"}]},{kind:"inline",type:"link",nodes:[{kind:"text",text:"an"}]},{kind:"inline",type:"link",nodes:[{kind:"text",text:"other"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .unwrapInline('hashtag')\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"},"nested-block":{input:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"w"},{kind:"inline",type:"hashtag",nodes:[{kind:"text",text:"or"}]},{kind:"text",text:"d"}]}]}]},output:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 3\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .unwrapInline('hashtag')\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"},"single-block":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"w"},{kind:"inline",type:"hashtag",nodes:[{kind:"text",text:"or"}]},{kind:"text",text:"d"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 3\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .unwrapInline('hashtag')\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"},"with-object":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"w"},{kind:"inline",type:"hashtag",data:{key:"one"},nodes:[{kind:"inline",type:"hashtag",data:{key:"two"},nodes:[{kind:"text",text:"or"}]}]},{kind:"text",text:"d"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"w"},{kind:"inline",type:"hashtag",data:{key:"two"},nodes:[{kind:"text",text:"or"}]},{kind:"text",text:"d"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 3\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .unwrapInline({\n      type: 'hashtag',\n      data: { key: 'one' }\n    })\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"}},"set-inline":{"across-inlines":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"another"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"code",nodes:[{kind:"text",text:"word"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"code",nodes:[{kind:"text",text:"another"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .setInline({ type: 'code' })\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"},"data-only":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",data:{key:"value"},nodes:[{kind:"text",text:"word"}]}]}]},index:"\nimport { Data } from '../../../../..'\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .setInline({ data: Data.create({ key: 'value' }) })\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"},"nested-inline":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"hashtag",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"hashtag",nodes:[{kind:"inline",type:"code",nodes:[{kind:"text",text:"word"}]}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .setInline({ type: 'code' })\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"},"single-inline-string-shorthand":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"code",nodes:[{kind:"text",text:"word"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .setInline('code')\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"},"single-inline":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"code",nodes:[{kind:"text",text:"word"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .setInline({ type: 'code' })\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"},"with-data-object":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"code",data:{key:"value"},nodes:[{kind:"text",text:"word"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .setInline({\n      type: 'code',\n      data: { key: 'value' }\n    })\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"},"with-data":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"code",data:{key:"value"},nodes:[{kind:"text",text:"word"}]}]}]},index:"\nimport { Data } from '../../../../..'\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .setInline({\n      type: 'code',\n      data: Data.create({ key: 'value' })\n    })\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"},"with-is-void":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"emoji",isVoid:!0}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .setInline({\n      type: 'emoji',\n      isVoid: true\n    })\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"}},"insert-fragment":{"start-block":{fragment:{nodes:[{kind:"block",type:"list-item",nodes:[{kind:"text",text:"fragment"}]}]},input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"fragmentword"}]}]},index:"\nimport assert from 'assert'\nimport path from 'path'\nimport readMetadata from 'read-metadata'\nimport { Raw } from '../../../../..'\n\nexport default function (state) {\n  const file = path.resolve(__dirname, 'fragment.yaml')\n  const raw = readMetadata.sync(file)\n  const fragment = Raw.deserialize(raw, { terse: true }).document\n\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const last = fragment.getTexts().last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertFragment(fragment)\n    .apply()\n\n  const updated = next.document.getTexts().first()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.merge({\n      anchorKey: updated.key,\n      anchorOffset: last.length,\n      focusKey: updated.key,\n      focusOffset: last.length\n    }).toJS()\n  )\n\n  return next\n}\n"},"start-inline":{fragment:{nodes:[{kind:"block",type:"list-item",nodes:[{kind:"text",text:"fragment"}]}]},input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"fragment"},{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]},index:"\nimport assert from 'assert'\nimport path from 'path'\nimport readMetadata from 'read-metadata'\nimport { Raw } from '../../../../..'\n\nexport default function (state) {\n  const file = path.resolve(__dirname, 'fragment.yaml')\n  const raw = readMetadata.sync(file)\n  const fragment = Raw.deserialize(raw, { terse: true }).document\n\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const last = fragment.getTexts().last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertFragment(fragment)\n    .apply()\n\n  const updated = next.document.getTexts().first()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.merge({\n      anchorKey: updated.key,\n      anchorOffset: last.length,\n      focusKey: updated.key,\n      focusOffset: last.length\n    }).toJS()\n  )\n\n  return next\n}\n"},"fragment-multiple-blocks":{fragment:{nodes:[{kind:"block",type:"list-item",nodes:[{kind:"text",ranges:[{text:"fragment one"}]}]},{kind:"block",type:"list-item",nodes:[{kind:"text",ranges:[{text:"fragment two"}]}]}]},input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wofragment one"}]},{kind:"block",type:"list-item",nodes:[{kind:"text",text:"fragment tword"}]}]},index:"\nimport assert from 'assert'\nimport path from 'path'\nimport readMetadata from 'read-metadata'\nimport { Raw } from '../../../../..'\n\nexport default function (state) {\n  const file = path.resolve(__dirname, 'fragment.yaml')\n  const raw = readMetadata.sync(file)\n  const fragment = Raw.deserialize(raw, { terse: true }).document\n\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const last = fragment.getTexts().last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertFragment(fragment)\n    .apply()\n\n  const updated = next.document.getTexts().last()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.merge({\n      anchorKey: updated.key,\n      anchorOffset: last.length,\n      focusKey: updated.key,\n      focusOffset: last.length\n    }).toJS()\n  )\n\n  return next\n}\n"},"end-inline":{fragment:{nodes:[{kind:"block",type:"list-item",nodes:[{kind:"text",text:"fragment"}]}]},input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]},{kind:"text",text:"fragment"}]}]},index:"\nimport assert from 'assert'\nimport path from 'path'\nimport readMetadata from 'read-metadata'\nimport { Raw } from '../../../../..'\n\nexport default function (state) {\n  const file = path.resolve(__dirname, 'fragment.yaml')\n  const raw = readMetadata.sync(file)\n  const fragment = Raw.deserialize(raw, { terse: true }).document\n\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertFragment(fragment)\n    .apply()\n\n  const last = next.document.getTexts().last()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.merge({\n      anchorKey: last.key,\n      anchorOffset: last.length,\n      focusKey: last.key,\n      focusOffset: last.length\n    }).toJS()\n  )\n\n  return next\n}\n"},"middle-inline":{fragment:{nodes:[{kind:"block",type:"list-item",nodes:[{kind:"text",text:"fragment"}]}]},input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"wo"}]},{kind:"text",text:"fragment"},{kind:"inline",type:"link",nodes:[{kind:"text",text:"rd"}]}]}]},index:"\nimport assert from 'assert'\nimport path from 'path'\nimport readMetadata from 'read-metadata'\nimport { Raw } from '../../../../..'\n\nexport default function (state) {\n  const file = path.resolve(__dirname, 'fragment.yaml')\n  const raw = readMetadata.sync(file)\n  const fragment = Raw.deserialize(raw, { terse: true }).document\n\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const last = fragment.getTexts().last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertFragment(fragment)\n    .apply()\n\n  const updated = next.document.getTexts().last()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.merge({\n      anchorKey: updated.key,\n      anchorOffset: last.length,\n      focusKey: updated.key,\n      focusOffset: last.length\n    }).toJS()\n  )\n\n  return next\n}\n"},"middle-block":{fragment:{nodes:[{kind:"block",type:"list-item",nodes:[{kind:"text",text:"fragment"}]}]},input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wofragmentrd"}]}]},index:"\nimport assert from 'assert'\nimport path from 'path'\nimport readMetadata from 'read-metadata'\nimport { Raw } from '../../../../..'\n\nexport default function (state) {\n  const file = path.resolve(__dirname, 'fragment.yaml')\n  const raw = readMetadata.sync(file)\n  const fragment = Raw.deserialize(raw, { terse: true }).document\n\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const last = fragment.getTexts().last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertFragment(fragment)\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.merge({\n      anchorKey: first.key,\n      anchorOffset: range.anchorOffset + last.length,\n      focusKey: first.key,\n      focusOffset: range.focusOffset + last.length\n    }).toJS()\n  )\n\n  return next\n}\n"},"with-delete-across-blocks":{fragment:{nodes:[{kind:"block",type:"list-item",nodes:[{kind:"text",text:"fragment"}]}]},input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wofragmentother"}]}]},index:"\nimport assert from 'assert'\nimport path from 'path'\nimport readMetadata from 'read-metadata'\nimport { Raw } from '../../../../..'\n\nexport default function (state) {\n  const file = path.resolve(__dirname, 'fragment.yaml')\n  const raw = readMetadata.sync(file)\n  const fragment = Raw.deserialize(raw, { terse: true }).document\n\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const last = texts.last()\n  const fragLast = fragment.getTexts().last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: last.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertFragment(fragment)\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.merge({\n      anchorKey: first.key,\n      anchorOffset: range.anchorOffset + fragLast.length,\n      focusKey: first.key,\n      focusOffset: range.focusOffset + fragLast.length\n    }).toJS()\n  )\n\n  return next\n}\n"},"middle-inline-fragment-inline":{fragment:{nodes:[{kind:"block",type:"list-item",nodes:[{kind:"inline",type:"hashtag",nodes:[{kind:"text",text:"fragment"}]}]}]},input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"wo"}]},{kind:"inline",type:"hashtag",nodes:[{kind:"text",text:"fragment"}]},{kind:"inline",type:"link",nodes:[{kind:"text",text:"rd"}]}]}]},index:"\nimport assert from 'assert'\nimport path from 'path'\nimport readMetadata from 'read-metadata'\nimport { Raw } from '../../../../..'\n\nexport default function (state) {\n  const file = path.resolve(__dirname, 'fragment.yaml')\n  const raw = readMetadata.sync(file)\n  const fragment = Raw.deserialize(raw, { terse: true }).document\n\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const last = fragment.getTexts().last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertFragment(fragment)\n    .apply()\n\n  const updated = next.document.getTexts().get(1)\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.merge({\n      anchorKey: updated.key,\n      anchorOffset: last.length,\n      focusKey: updated.key,\n      focusOffset: last.length\n    }).toJS()\n  )\n\n  return next\n}\n"},"end-block":{fragment:{nodes:[{kind:"block",type:"list-item",nodes:[{kind:"text",text:"fragment"}]}]},input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wordfragment"}]}]},index:"\nimport assert from 'assert'\nimport path from 'path'\nimport readMetadata from 'read-metadata'\nimport { Raw } from '../../../../..'\n\nexport default function (state) {\n  const file = path.resolve(__dirname, 'fragment.yaml')\n  const raw = readMetadata.sync(file)\n  const fragment = Raw.deserialize(raw, { terse: true }).document\n\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const last = fragment.getTexts().last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertFragment(fragment)\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.merge({\n      anchorKey: first.key,\n      anchorOffset: first.length + last.length,\n      focusKey: first.key,\n      focusOffset: first.length + last.length\n    }).toJS()\n  )\n\n  return next\n}\n"},"start-second-block":{fragment:{nodes:[{kind:"block",type:"list-item",nodes:[{kind:"text",text:"fragment"}]}]},input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"fragmentanother"}]}]},index:"\nimport assert from 'assert'\nimport path from 'path'\nimport readMetadata from 'read-metadata'\nimport { Raw } from '../../../../..'\n\nexport default function (state) {\n  const file = path.resolve(__dirname, 'fragment.yaml')\n  const raw = readMetadata.sync(file)\n  const fragment = Raw.deserialize(raw, { terse: true }).document\n\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const second = texts.get(1)\n  const last = fragment.getTexts().last()\n  const range = selection.merge({\n    anchorKey: second.key,\n    anchorOffset: 0,\n    focusKey: second.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertFragment(fragment)\n    .apply()\n\n  const updated = next.document.getTexts().get(1)\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.merge({\n      anchorKey: updated.key,\n      anchorOffset: last.length,\n      focusKey: updated.key,\n      focusOffset: last.length\n    }).toJS()\n  )\n\n  return next\n}\n"},"fragment-nested-blocks":{fragment:{nodes:[{kind:"block",type:"list",nodes:[{kind:"block",type:"list-item",nodes:[{kind:"text",ranges:[{text:"fragment one"}]}]},{kind:"block",type:"list-item",nodes:[{kind:"text",ranges:[{text:"fragment two"}]}]}]}]},input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wofragment one"}]},{kind:"block",type:"list",nodes:[{kind:"block",type:"list-item",nodes:[{kind:"text",text:"fragment tword"}]}]}]},index:"\nimport assert from 'assert'\nimport path from 'path'\nimport readMetadata from 'read-metadata'\nimport { Raw } from '../../../../..'\n\nexport default function (state) {\n  const file = path.resolve(__dirname, 'fragment.yaml')\n  const raw = readMetadata.sync(file)\n  const fragment = Raw.deserialize(raw, { terse: true }).document\n\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const last = fragment.getTexts().last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertFragment(fragment)\n    .apply()\n\n  const updated = next.document.getTexts().last()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.merge({\n      anchorKey: updated.key,\n      anchorOffset: last.length,\n      focusKey: updated.key,\n      focusOffset: last.length\n    }).toJS()\n  )\n\n  return next\n}\n"}},"split-inline-at-range":{"block-end":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]},{kind:"inline",type:"link",nodes:[{kind:"text",text:""}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  return state\n    .transform()\n    .splitInlineAtRange(range)\n    .apply()\n}\n"},"block-middle":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"wo"}]},{kind:"inline",type:"link",nodes:[{kind:"text",text:"rd"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .splitInlineAtRange(range)\n    .apply()\n}\n"},"block-start":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:""}]},{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .splitInlineAtRange(range)\n    .apply()\n}\n"
},depth:{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"wo"}]},{kind:"inline",type:"link",nodes:[{kind:"text",text:"rd"}]}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .splitInlineAtRange(range, 1)\n    .apply()\n}\n"},"with-delete":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"w"}]},{kind:"inline",type:"link",nodes:[{kind:"text",text:"d"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 3\n  })\n\n  return state\n    .transform()\n    .splitInlineAtRange(range)\n    .apply()\n}\n"},"with-marks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",ranges:[{text:"word",marks:[{type:"bold"}]}]}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",ranges:[{text:"wo",marks:[{type:"bold"}]}]}]},{kind:"inline",type:"link",nodes:[{kind:"text",ranges:[{text:"rd",marks:[{type:"bold"}]}]}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .splitInlineAtRange(range)\n    .apply()\n}\n"}},"delete-at-range":{"whole-word":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:""}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  return state\n    .transform()\n    .deleteAtRange(range)\n    .apply()\n}\n"},"across-blocks-inlines":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"another"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"wo"}]},{kind:"inline",type:"link",nodes:[{kind:"text",text:"other"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const last = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: last.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .deleteAtRange(range)\n    .apply()\n}\n"},"join-blocks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wordanother"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length,\n    focusKey: second.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .deleteAtRange(range)\n    .apply()\n}\n"},"first-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"ord"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  return state\n    .transform()\n    .deleteAtRange(range)\n    .apply()\n}\n"},"across-nested-blocks":{input:{nodes:[{kind:"block",type:"list",nodes:[{kind:"block",type:"item",nodes:[{kind:"text",text:"one"}]},{kind:"block",type:"item",nodes:[{kind:"text",text:"two"}]},{kind:"block",type:"item",nodes:[{kind:"text",text:"three"}]}]}]},output:{nodes:[{kind:"block",type:"list",nodes:[{kind:"block",type:"item",nodes:[{kind:"text",text:"onetwo"}]},{kind:"block",type:"item",nodes:[{kind:"text",text:"three"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.get(0)\n  const second = texts.get(1)\n  const third = texts.get(2)\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length,\n    focusKey: second.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .deleteAtRange(range)\n    .apply()\n}\n"},"middle-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wrd"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .deleteAtRange(range)\n    .apply()\n}\n"},"last-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wor"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length - 1,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  return state\n    .transform()\n    .deleteAtRange(range)\n    .apply()\n}\n"},"nested-block":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"middle"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"woother"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const last = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: last.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .deleteAtRange(range)\n    .apply()\n}\n"},"join-blocks-and-trim":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"woother"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .deleteAtRange(range)\n    .apply()\n}\n"},"before-inline-sibling":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"one"},{kind:"inline",type:"link",nodes:[{kind:"text",text:"two"}]},{kind:"text",text:"a"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"one"},{kind:"inline",type:"link",nodes:[{kind:"text",text:"two"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const last = texts.last()\n  const range = selection.merge({\n    anchorKey: last.key,\n    anchorOffset: last.length - 1,\n    focusKey: last.key,\n    focusOffset: last.length\n  })\n\n  return state\n    .transform()\n    .deleteAtRange(range)\n    .apply()\n}\n"},"inside-inline-sibling":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"one"},{kind:"inline",type:"link",nodes:[{kind:"text",text:"a"}]},{kind:"text",text:"two"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"onetwo"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const second = texts.get(1)\n  const range = selection.merge({\n    anchorKey: second.key,\n    anchorOffset: second.length - 1,\n    focusKey: second.key,\n    focusOffset: second.length\n  })\n\n  return state\n    .transform()\n    .deleteAtRange(range)\n    .apply()\n}\n"}},"delete-backward":{"before-inline-sibling":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"one"},{kind:"inline",type:"link",nodes:[{kind:"text",text:"two"}]},{kind:"text",text:"a"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"one"},{kind:"inline",type:"link",nodes:[{kind:"text",text:"two"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const last = texts.last()\n  const range = selection.merge({\n    anchorKey: last.key,\n    anchorOffset: last.length,\n    focusKey: last.key,\n    focusOffset: last.length\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .deleteBackward()\n    .apply()\n\n  const updated = next.document.getTexts().last()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToEndOf(updated).toJS()\n  )\n\n  return next\n}\n"},"first-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"ord"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .deleteBackward()\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.moveBackward().toJS()\n  )\n\n  return next\n}\n"},"inside-inline-sibling":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"one"},{kind:"inline",type:"link",nodes:[{kind:"text",text:"a"}]},{kind:"text",text:"two"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"onetwo"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.get(0)\n  const second = texts.get(1)\n  const range = selection.merge({\n    anchorKey: second.key,\n    anchorOffset: second.length,\n    focusKey: second.key,\n    focusOffset: second.length\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .deleteBackward()\n    .apply()\n\n  const updated = next.document.getTexts().first()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStartOf(updated).moveForward(first.length).toJS()\n  )\n\n  return next\n}\n"},"join-blocks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wordanother"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: second.key,\n    anchorOffset: 0,\n    focusKey: second.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .deleteBackward()\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.merge({\n      anchorKey: first.key,\n      anchorOffset: first.length,\n      focusKey: first.key,\n      focusOffset: first.length\n    }).toJS()\n  )\n\n  return next\n}\n"},"join-nested-blocks":{input:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]}]},output:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wordanother"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: second.key,\n    anchorOffset: 0,\n    focusKey: second.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .deleteBackward()\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.merge({\n      anchorKey: first.key,\n      anchorOffset: first.length,\n      focusKey: first.key,\n      focusOffset: first.length\n    }).toJS()\n  )\n\n  return next\n}\n"},"last-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wor"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .deleteBackward()\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.moveBackward().toJS()\n  )\n\n  return next\n}\n"},"middle-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wrd"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .deleteBackward()\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.moveBackward().toJS()\n  )\n\n  return next\n}\n"},"start-of-document":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .deleteBackward()\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"}},"wrap-block-at-range":{"across-blocks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},output:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .wrapBlockAtRange(range, 'quote')\n    .apply()\n}\n"},"across-inlines":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"another"}]}]}]},output:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"another"}]}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .wrapBlockAtRange(range, 'quote')\n    .apply()\n}\n"},"nested-block":{input:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .wrapBlockAtRange(range, 'quote')\n    .apply()\n}\n"},"single-block":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .wrapBlockAtRange(range, 'quote')\n    .apply()\n}\n"},"with-object":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"quote",data:{key:"value"},nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .wrapBlockAtRange(range, {\n      type: 'quote',\n      data: { key: 'value' }\n    })\n    .apply()\n}\n"}},"toggle-mark":{"remove-with-plain-object":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w",marks:[{type:"bold",data:{key:"value"}}]},{text:"ord"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .toggleMark({\n      type: 'bold',\n      data: { key: 'value' }\n    })\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.toJS())\n\n  return next\n}\n"},"add-first-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w",marks:[{type:"bold"}]},{text:"ord"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .toggleMark('bold')\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.toJS())\n\n  return next\n}\n"},"remove-with-mark-object":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w",marks:[{type:"bold",data:{key:"value"}}]},{text:"ord"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},index:"\nimport { Mark } from '../../../../..'\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .toggleMark(Mark.create({\n      type: 'bold',\n      data: { key: 'value' }\n    }))\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.toJS())\n\n  return next\n}\n"},"remove-first-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w",marks:[{type:"bold"}]},{text:"ord"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .toggleMark('bold')\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.toJS())\n\n  return next\n}\n"},"add-with-mark-object":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w",marks:[{type:"bold",data:{key:"value"}}]},{text:"ord"}]}]}]},index:"\nimport { Mark } from '../../../../..'\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .toggleMark(Mark.create({\n      type: 'bold',\n      data: { key: 'value' }\n    }))\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.toJS())\n\n  return next\n}\n"},"add-across-blocks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"wo"},{text:"rd",marks:[{type:"bold"}]}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"an",marks:[{type:"bold"}]},{text:"other"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .toggleMark('bold')\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.toJS())\n\n  return next\n}\n"},"remove-whole-word":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"word",marks:[{type:"bold"}]}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .toggleMark('bold')\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.toJS())\n\n  return next\n}\n"},"add-collapsed-selection":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"a",marks:[{type:"bold"}]},{text:"word"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .toggleMark('bold')\n    .insertText('a')\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.moveForward().toJS())\n\n  return next\n}\n"},"remove-across-blocks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"wo"},{text:"rd",marks:[{type:"bold"}]}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"an",marks:[{type:"bold"}]},{text:"other"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .toggleMark('bold')\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.toJS())\n\n  return next\n}\n"},"add-whole-word":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"word",marks:[{type:"bold"}]}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .toggleMark('bold')\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.toJS())\n\n  return next\n}\n"},"remove-existing-marks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"wo",marks:[{type:"italic"},{type:"bold"}]},{text:"rd",marks:[{type:"italic"}]}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"word",marks:[{type:"italic"}]}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .toggleMark('bold')\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.toJS())\n\n  return next\n}\n"},"remove-collapsed-selection":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"aword"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .toggleMark('bold')\n    .toggleMark('bold')\n    .insertText('a')\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.moveForward().toJS())\n\n  return next\n}\n"},"add-existing-marks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"word",marks:[{type:"italic"}]}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"wo",marks:[{type:"italic"},{type:"bold"}]},{text:"rd",marks:[{type:"italic"}]}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .toggleMark('bold')\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.toJS())\n\n  return next\n}\n"},"remove-across-inlines":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",ranges:[{text:"wo"},{text:"rd",marks:[{type:"bold"}]}]}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",ranges:[{text:"an",marks:[{type:"bold"}]},{text:"other"}]}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"another"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .toggleMark('bold')\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.toJS())\n\n  return next\n}\n"},"add-across-inlines":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"another"}]}]}]},output:{nodes:[{kind:"block",
type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",ranges:[{text:"wo"},{text:"rd",marks:[{type:"bold"}]}]}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",ranges:[{text:"an",marks:[{type:"bold"}]},{text:"other"}]}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .toggleMark('bold')\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.toJS())\n\n  return next\n}\n"},"remove-middle-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w"},{text:"o",marks:[{type:"bold"}]},{text:"rd"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .toggleMark('bold')\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.toJS())\n\n  return next\n}\n"},"remove-last-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"wor"},{text:"d",marks:[{type:"bold"}]}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length - 1,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .toggleMark('bold')\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.toJS())\n\n  return next\n}\n"},"add-with-plain-object":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w",marks:[{type:"bold",data:{key:"value"}}]},{text:"ord"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .toggleMark({\n      type: 'bold',\n      data: { key: 'value' }\n    })\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.toJS())\n\n  return next\n}\n"},"add-middle-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w"},{text:"o",marks:[{type:"bold"}]},{text:"rd"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .toggleMark('bold')\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.toJS())\n\n  return next\n}\n"},"add-last-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"wor"},{text:"d",marks:[{type:"bold"}]}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length - 1,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .toggleMark('bold')\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.toJS())\n\n  return next\n}\n"}},"set-node-by-key":{"single-block-string-shorthand":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"code",nodes:[{kind:"text",text:"word"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const first = document.nodes.get(0)\n\n  return state\n    .transform()\n    .setNodeByKey(first.key, 'code')\n    .apply()\n}\n"},"single-block":{input:{nodes:[{kind:"block",type:"paragraph",data:{key:"foo"},nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",data:{key:"bar"},nodes:[{kind:"text",text:"word"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const first = document.nodes.get(0)\n\n  return state\n    .transform()\n    .setNodeByKey(first.key, { data: {key: 'bar'} })\n    .apply()\n}\n"}},"wrap-block":{"across-blocks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},output:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .wrapBlock('quote')\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"},"across-inlines":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"another"}]}]}]},output:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"another"}]}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .wrapBlock('quote')\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"},"nested-block":{input:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .wrapBlock('quote')\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"},"single-block":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .wrapBlock('quote')\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"},"with-object":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"quote",data:{key:"value"},nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .wrapBlock({\n      type: 'quote',\n      data: { key: 'value' }\n    })\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"}},"toggle-mark-at-range":{"remove-with-plain-object":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w",marks:[{type:"bold",data:{key:"value"}}]},{text:"ord"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  return state\n    .transform()\n    .toggleMarkAtRange(range, {\n      type: 'bold',\n      data: { key: 'value' }\n    })\n    .apply()\n}\n"},"add-first-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w",marks:[{type:"bold"}]},{text:"ord"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  return state\n    .transform()\n    .toggleMarkAtRange(range, 'bold')\n    .apply()\n}\n"},"remove-with-mark-object":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w",marks:[{type:"bold",data:{key:"value"}}]},{text:"ord"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},index:"\nimport { Mark } from '../../../../..'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  return state\n    .transform()\n    .toggleMarkAtRange(range, Mark.create({\n      type: 'bold',\n      data: { key: 'value' }\n    }))\n    .apply()\n}\n"},"remove-first-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"word",marks:[{type:"bold"}]}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w"},{text:"ord",marks:[{type:"bold"}]}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  return state\n    .transform()\n    .toggleMarkAtRange(range, 'bold')\n    .apply()\n}\n"},"add-with-mark-object":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w",marks:[{type:"bold",data:{key:"value"}}]},{text:"ord"}]}]}]},index:"\nimport { Mark } from '../../../../..'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  return state\n    .transform()\n    .toggleMarkAtRange(range, Mark.create({\n      type: 'bold',\n      data: { key: 'value' }\n    }))\n    .apply()\n}\n"},"add-across-blocks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"wo"},{text:"rd",marks:[{type:"bold"}]}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"an",marks:[{type:"bold"}]},{text:"other"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .toggleMarkAtRange(range, 'bold')\n    .apply()\n}\n"},"remove-whole-word":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"word",marks:[{type:"bold"}]}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  return state\n    .transform()\n    .toggleMarkAtRange(range, 'bold')\n    .apply()\n}\n"},"remove-across-blocks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"word",marks:[{type:"bold"}]}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"another",marks:[{type:"bold"}]}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"wo",marks:[{type:"bold"}]},{text:"rd"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"an"},{text:"other",marks:[{type:"bold"}]}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .toggleMarkAtRange(range, 'bold')\n    .apply()\n}\n"},"add-whole-word":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"word",marks:[{type:"bold"}]}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  return state\n    .transform()\n    .toggleMarkAtRange(range, 'bold')\n    .apply()\n}\n"},"remove-existing-marks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"word",marks:[{type:"italic"},{type:"bold"}]}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"wo",marks:[{type:"italic"}]},{text:"rd",marks:[{type:"italic"},{type:"bold"}]}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .toggleMarkAtRange(range, 'bold')\n    .apply()\n}\n"},"add-existing-marks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"word",marks:[{type:"italic"}]}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"wo",marks:[{type:"italic"},{type:"bold"}]},{text:"rd",marks:[{type:"italic"}]}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .toggleMarkAtRange(range, 'bold')\n    .apply()\n}\n"},"remove-across-inlines":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",ranges:[{text:"word",marks:[{type:"bold"}]}]}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",ranges:[{text:"another",marks:[{type:"bold"}]}]}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",ranges:[{text:"wo",marks:[{type:"bold"}]},{text:"rd"}]}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",ranges:[{text:"an"},{text:"other",marks:[{type:"bold"}]}]}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .toggleMarkAtRange(range, 'bold')\n    .apply()\n}\n"},"add-across-inlines":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"another"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",ranges:[{text:"wo"},{text:"rd",marks:[{type:"bold"}]}]}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",ranges:[{text:"an",marks:[{type:"bold"}]},{text:"other"}]}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .toggleMarkAtRange(range, 'bold')\n    .apply()\n}\n"},"remove-middle-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"word",marks:[{type:"bold"}]}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w",marks:[{type:"bold"}]},{text:"o"},{text:"rd",marks:[{type:"bold"}]}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .toggleMarkAtRange(range, 'bold')\n    .apply()\n}\n"},"remove-last-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"word",marks:[{type:"bold"}]}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"wor",marks:[{type:"bold"}]},{text:"d"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length - 1,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  return state\n    .transform()\n    .toggleMarkAtRange(range, 'bold')\n    .apply()\n}\n"},"add-with-plain-object":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w",marks:[{type:"bold",data:{key:"value"}}]},{text:"ord"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  return state\n    .transform()\n    .toggleMarkAtRange(range, {\n      type: 'bold',\n      data: { key: 'value' }\n    })\n    .apply()\n}\n"},"add-middle-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w"},{text:"o",marks:[{type:"bold"}]},{text:"rd"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .toggleMarkAtRange(range, 'bold')\n    .apply()\n}\n"},"add-last-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"wor"},{text:"d",marks:[{type:"bold"}]}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length - 1,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  return state\n    .transform()\n    .toggleMarkAtRange(range, 'bold')\n    .apply()\n}\n"}},delete:{"whole-word":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:""}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .delete()\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStart().toJS()\n  )\n\n  return next\n}\n"},"across-blocks-inlines":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"another"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"wo"}]},{kind:"inline",type:"link",nodes:[{kind:"text",text:"other"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const last = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: last.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .delete()\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStart().toJS()\n  )\n\n  return next\n}\n"},"join-blocks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wordanother"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length,\n    focusKey: second.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .delete()\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStart().toJS()\n  )\n\n  return next\n}\n"},"first-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"ord"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .delete()\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStart().toJS()\n  )\n\n  return next\n}\n"},"across-nested-blocks":{input:{nodes:[{kind:"block",type:"list",nodes:[{kind:"block",type:"item",nodes:[{kind:"text",text:"one"}]},{kind:"block",type:"item",nodes:[{kind:"text",text:"two"}]},{kind:"block",type:"item",nodes:[{kind:"text",text:"three"}]}]}]},output:{nodes:[{kind:"block",type:"list",nodes:[{kind:"block",type:"item",nodes:[{kind:"text",text:"onetwo"}]},{kind:"block",type:"item",nodes:[{kind:"text",text:"three"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.get(0)\n  const second = texts.get(1)\n  const third = texts.get(2)\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length,\n    focusKey: second.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .delete()\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStart().toJS()\n  )\n\n  return next\n}\n"},"middle-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wrd"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .delete()\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStart().toJS()\n  )\n\n  return next\n}\n"},"last-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wor"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length - 1,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .delete()\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStart().toJS()\n  )\n\n  return next\n}\n"},"nested-block":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"middle"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"woother"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const last = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: last.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .delete()\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStart().toJS()\n  )\n\n  return next\n}\n"},"join-blocks-and-trim":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"woother"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .delete()\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStart().toJS()\n  )\n\n  return next\n}\n"},"before-inline-sibling":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"one"},{kind:"inline",type:"link",nodes:[{kind:"text",text:"two"}]},{kind:"text",text:"a"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"one"},{kind:"inline",type:"link",nodes:[{kind:"text",text:"two"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const last = texts.last()\n  const range = selection.merge({\n    anchorKey: last.key,\n    anchorOffset: last.length - 1,\n    focusKey: last.key,\n    focusOffset: last.length\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .delete()\n    .apply()\n\n  const updated = next.document.getTexts().last()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.merge({\n      anchorKey: updated.key,\n      anchorOffset: updated.length,\n      focusKey: updated.key,\n      focusOffset: updated.length\n    }).toJS()\n  )\n\n  return next\n}\n"},"inside-inline-sibling":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"one"},{kind:"inline",type:"link",nodes:[{kind:"text",text:"a"}]},{kind:"text",text:"two"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"onetwo"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.get(0)\n  const second = texts.get(1)\n  const range = selection.merge({\n    anchorKey: second.key,\n    anchorOffset: second.length - 1,\n    focusKey: second.key,\n    focusOffset: second.length\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .delete()\n    .apply()\n\n  const updated = next.document.getTexts().first()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.merge({\n      anchorKey: updated.key,\n      anchorOffset: first.length,\n      focusKey: updated.key,\n      focusOffset: first.length\n    }).toJS()\n  )\n\n  return next\n}\n"
}},"delete-backward-at-range":{"before-inline-sibling":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"one"},{kind:"inline",type:"link",nodes:[{kind:"text",text:"two"}]},{kind:"text",text:"a"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"one"},{kind:"inline",type:"link",nodes:[{kind:"text",text:"two"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const last = texts.last()\n  const range = selection.merge({\n    anchorKey: last.key,\n    anchorOffset: last.length,\n    focusKey: last.key,\n    focusOffset: last.length\n  })\n\n  return state\n    .transform()\n    .deleteBackwardAtRange(range)\n    .apply()\n}\n"},"first-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"ord"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  return state\n    .transform()\n    .deleteBackwardAtRange(range)\n    .apply()\n}\n"},"inside-inline-sibling":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"one"},{kind:"inline",type:"link",nodes:[{kind:"text",text:"a"}]},{kind:"text",text:"two"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"onetwo"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const second = texts.get(1)\n  const range = selection.merge({\n    anchorKey: second.key,\n    anchorOffset: second.length,\n    focusKey: second.key,\n    focusOffset: second.length\n  })\n\n  return state\n    .transform()\n    .deleteBackwardAtRange(range)\n    .apply()\n}\n"},"join-blocks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wordanother"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: second.key,\n    anchorOffset: 0,\n    focusKey: second.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .deleteBackwardAtRange(range)\n    .apply()\n}\n"},"join-nested-blocks":{input:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]}]},output:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wordanother"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: second.key,\n    anchorOffset: 0,\n    focusKey: second.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .deleteBackwardAtRange(range)\n    .apply()\n}\n"},"last-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wor"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  return state\n    .transform()\n    .deleteBackwardAtRange(range)\n    .apply()\n}\n"},"middle-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wrd"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .deleteBackwardAtRange(range)\n    .apply()\n}\n"},"start-of-document":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .deleteBackwardAtRange(range)\n    .apply()\n}\n"}},"remove-node-by-key":{block:{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const first = document.getBlocks().first()\n\n  return state\n    .transform()\n    .removeNodeByKey(first.key)\n    .apply()\n}\n"},inline:{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]},{kind:"inline",type:"link",nodes:[{kind:"text",text:"another"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"another"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const first = document.getInlines().first()\n\n  return state\n    .transform()\n    .removeNodeByKey(first.key)\n    .apply()\n}\n"},text:{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:""}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const first = document.getTexts().first()\n\n  return state\n    .transform()\n    .removeNodeByKey(first.key)\n    .apply()\n}\n"}},"set-inline-at-range":{"across-inlines":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"another"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"code",nodes:[{kind:"text",text:"word"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"code",nodes:[{kind:"text",text:"another"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .setInlineAtRange(range, { type: 'code' })\n    .apply()\n}\n"},"data-only":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",data:{key:"value"},nodes:[{kind:"text",text:"word"}]}]}]},index:"\nimport { Data } from '../../../../..'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .setInlineAtRange(range, { data: Data.create({ key: 'value' }) })\n    .apply()\n}\n"},"nested-inline":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"hashtag",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"hashtag",nodes:[{kind:"inline",type:"code",nodes:[{kind:"text",text:"word"}]}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .setInlineAtRange(range, { type: 'code' })\n    .apply()\n}\n"},"single-inline-string-shorthand":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"code",nodes:[{kind:"text",text:"word"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .setInlineAtRange(range, 'code')\n    .apply()\n}\n"},"single-inline":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"code",nodes:[{kind:"text",text:"word"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .setInlineAtRange(range, { type: 'code' })\n    .apply()\n}\n"},"with-data-object":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"code",data:{key:"value"},nodes:[{kind:"text",text:"word"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .setInlineAtRange(range, {\n      type: 'code',\n      data: { key: 'value' }\n    })\n    .apply()\n}\n"},"with-data":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"code",data:{key:"value"},nodes:[{kind:"text",text:"word"}]}]}]},index:"\nimport { Data } from '../../../../..'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .setInlineAtRange(range, {\n      type: 'code',\n      data: Data.create({ key: 'value' })\n    })\n    .apply()\n}\n"},"with-is-void":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"emoji",isVoid:!0}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .setInlineAtRange(range, {\n      type: 'emoji',\n      isVoid: true\n    })\n    .apply()\n}\n"}},"split-inline":{"block-end":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]},{kind:"inline",type:"link",nodes:[{kind:"text",text:""}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .splitInline()\n    .apply()\n\n  const updated = next.document.getTexts().last()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStartOf(updated).toJS()\n  )\n\n  return next\n}\n"},"block-middle":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"wo"}]},{kind:"inline",type:"link",nodes:[{kind:"text",text:"rd"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .splitInline()\n    .apply()\n\n  const updated = next.document.getTexts().get(1)\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStartOf(updated).toJS()\n  )\n\n  return next\n}\n"},"block-start":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:""}]},{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .splitInline()\n    .apply()\n\n  const updated = next.document.getTexts().last()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStartOf(updated).toJS()\n  )\n\n  return next\n}\n"},depth:{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"wo"}]},{kind:"inline",type:"link",nodes:[{kind:"text",text:"rd"}]}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .splitInline(1)\n    .apply()\n\n  const updated = next.document.getTexts().last()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStartOf(updated).toJS()\n  )\n\n  return next\n}\n"},"with-delete":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"w"}]},{kind:"inline",type:"link",nodes:[{kind:"text",text:"d"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 3\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .splitInline()\n    .apply()\n\n  const updated = next.document.getTexts().last()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStartOf(updated).toJS()\n  )\n\n  return next\n}\n"},"with-marks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",ranges:[{text:"word",marks:[{type:"bold"}]}]}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",ranges:[{text:"wo",marks:[{type:"bold"}]}]}]},{kind:"inline",type:"link",nodes:[{kind:"text",ranges:[{text:"rd",marks:[{type:"bold"}]}]}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .splitInline()\n    .apply()\n\n  const updated = next.document.getTexts().last()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStartOf(updated).toJS()\n  )\n\n  return next\n}\n"}},"insert-fragment-at-range":{"start-block":{fragment:{nodes:[{kind:"block",type:"list-item",nodes:[{kind:"text",text:"fragment"}]}]},input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"fragmentword"}]}]},index:"\nimport path from 'path'\nimport readMetadata from 'read-metadata'\nimport { Raw } from '../../../../..'\n\nexport default function (state) {\n  const file = path.resolve(__dirname, 'fragment.yaml')\n  const raw = readMetadata.sync(file)\n  const fragment = Raw.deserialize(raw, { terse: true }).document\n\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .insertFragmentAtRange(range, fragment)\n    .apply()\n}\n"},"start-inline":{fragment:{nodes:[{kind:"block",type:"list-item",nodes:[{kind:"text",text:"fragment"}]}]},input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"fragment"},{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]},index:"\nimport path from 'path'\nimport readMetadata from 'read-metadata'\nimport { Raw } from '../../../../..'\n\nexport default function (state) {\n  const file = path.resolve(__dirname, 'fragment.yaml')\n  const raw = readMetadata.sync(file)\n  const fragment = Raw.deserialize(raw, { terse: true }).document\n\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .insertFragmentAtRange(range, fragment)\n    .apply()\n}\n"},"fragment-multiple-blocks":{fragment:{nodes:[{kind:"block",type:"list-item",nodes:[{kind:"text",ranges:[{text:"fragment one"}]}]},{kind:"block",type:"list-item",nodes:[{kind:"text",ranges:[{text:"fragment two"}]}]}]},input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wofragment one"}]},{kind:"block",type:"list-item",nodes:[{kind:"text",text:"fragment tword"}]}]},index:"\nimport path from 'path'\nimport readMetadata from 'read-metadata'\nimport { Raw } from '../../../../..'\n\nexport default function (state) {\n  const file = path.resolve(__dirname, 'fragment.yaml')\n  const raw = readMetadata.sync(file)\n  const fragment = Raw.deserialize(raw, { terse: true }).document\n\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .insertFragmentAtRange(range, fragment)\n    .apply()\n}\n"},"end-inline":{fragment:{nodes:[{kind:"block",type:"list-item",nodes:[{kind:"text",text:"fragment"}]}]},input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]},{kind:"text",text:"fragment"}]}]},index:"\nimport path from 'path'\nimport readMetadata from 'read-metadata'\nimport { Raw } from '../../../../..'\n\nexport default function (state) {\n  const file = path.resolve(__dirname, 'fragment.yaml')\n  const raw = readMetadata.sync(file)\n  const fragment = Raw.deserialize(raw, { terse: true }).document\n\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  return state\n    .transform()\n    .insertFragmentAtRange(range, fragment)\n    .apply()\n}\n"},"middle-inline":{fragment:{nodes:[{kind:"block",type:"list-item",nodes:[{kind:"text",text:"fragment"}]}]},input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"wo"}]},{kind:"text",text:"fragment"},{kind:"inline",type:"link",nodes:[{kind:"text",text:"rd"}]}]}]},index:"\nimport path from 'path'\nimport readMetadata from 'read-metadata'\nimport { Raw } from '../../../../..'\n\nexport default function (state) {\n  const file = path.resolve(__dirname, 'fragment.yaml')\n  const raw = readMetadata.sync(file)\n  const fragment = Raw.deserialize(raw, { terse: true }).document\n\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .insertFragmentAtRange(range, fragment)\n    .apply()\n}\n"},"middle-block":{fragment:{nodes:[{kind:"block",type:"list-item",nodes:[{kind:"text",text:"fragment"}]}]},input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wofragmentrd"}]}]},index:"\nimport path from 'path'\nimport readMetadata from 'read-metadata'\nimport { Raw } from '../../../../..'\n\nexport default function (state) {\n  const file = path.resolve(__dirname, 'fragment.yaml')\n  const raw = readMetadata.sync(file)\n  const fragment = Raw.deserialize(raw, { terse: true }).document\n\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .insertFragmentAtRange(range, fragment)\n    .apply()\n}\n"},"with-delete-across-blocks":{fragment:{nodes:[{kind:"block",type:"list-item",nodes:[{kind:"text",text:"fragment"}]}]},input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wofragmentother"}]}]},index:"\nimport path from 'path'\nimport readMetadata from 'read-metadata'\nimport { Raw } from '../../../../..'\n\nexport default function (state) {\n  const file = path.resolve(__dirname, 'fragment.yaml')\n  const raw = readMetadata.sync(file)\n  const fragment = Raw.deserialize(raw, { terse: true }).document\n\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const last = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: last.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .insertFragmentAtRange(range, fragment)\n    .apply()\n}\n"},"middle-inline-fragment-inline":{fragment:{nodes:[{kind:"block",type:"list-item",nodes:[{kind:"inline",type:"hashtag",nodes:[{kind:"text",text:"fragment"}]}]}]},input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"wo"}]},{kind:"inline",type:"hashtag",nodes:[{kind:"text",text:"fragment"}]},{kind:"inline",type:"link",nodes:[{kind:"text",text:"rd"}]}]}]},index:"\nimport path from 'path'\nimport readMetadata from 'read-metadata'\nimport { Raw } from '../../../../..'\n\nexport default function (state) {\n  const file = path.resolve(__dirname, 'fragment.yaml')\n  const raw = readMetadata.sync(file)\n  const fragment = Raw.deserialize(raw, { terse: true }).document\n\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .insertFragmentAtRange(range, fragment)\n    .apply()\n}\n"},"end-block":{fragment:{nodes:[{kind:"block",type:"list-item",nodes:[{kind:"text",text:"fragment"}]}]},input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wordfragment"}]}]},index:"\nimport path from 'path'\nimport readMetadata from 'read-metadata'\nimport { Raw } from '../../../../..'\n\nexport default function (state) {\n  const file = path.resolve(__dirname, 'fragment.yaml')\n  const raw = readMetadata.sync(file)\n  const fragment = Raw.deserialize(raw, { terse: true }).document\n\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  return state\n    .transform()\n    .insertFragmentAtRange(range, fragment)\n    .apply()\n}\n"},"start-second-block":{fragment:{nodes:[{kind:"block",type:"list-item",nodes:[{kind:"text",text:"fragment"}]}]},input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"fragmentanother"}]}]},index:"\nimport path from 'path'\nimport readMetadata from 'read-metadata'\nimport { Raw } from '../../../../..'\n\nexport default function (state) {\n  const file = path.resolve(__dirname, 'fragment.yaml')\n  const raw = readMetadata.sync(file)\n  const fragment = Raw.deserialize(raw, { terse: true }).document\n\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const second = texts.get(1)\n  const range = selection.merge({\n    anchorKey: second.key,\n    anchorOffset: 0,\n    focusKey: second.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .insertFragmentAtRange(range, fragment)\n    .apply()\n}\n"},"fragment-nested-blocks":{fragment:{nodes:[{kind:"block",type:"list",nodes:[{kind:"block",type:"list-item",nodes:[{kind:"text",ranges:[{text:"fragment one"}]}]},{kind:"block",type:"list-item",nodes:[{kind:"text",ranges:[{text:"fragment two"}]}]}]}]},input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wofragment one"}]},{kind:"block",type:"list",nodes:[{kind:"block",type:"list-item",nodes:[{kind:"text",text:"fragment tword"}]}]}]},index:"\nimport path from 'path'\nimport readMetadata from 'read-metadata'\nimport { Raw } from '../../../../..'\n\nexport default function (state) {\n  const file = path.resolve(__dirname, 'fragment.yaml')\n  const raw = readMetadata.sync(file)\n  const fragment = Raw.deserialize(raw, { terse: true }).document\n\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .insertFragmentAtRange(range, fragment)\n    .apply()\n}\n"}},"insert-inline":{"block-end":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"},{kind:"inline",type:"hashtag",isVoid:!0}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertInline({\n      type: 'hashtag',\n      isVoid: true\n    })\n    .apply()\n\n  const updated = next.document.getTexts().last()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToEndOf(updated).toJS()\n  )\n\n  return next\n}\n"},"block-middle":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wo"},{kind:"inline",type:"hashtag",isVoid:!0},{kind:"text",text:"rd"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertInline({\n      type: 'hashtag',\n      isVoid: true\n    })\n    .apply()\n\n  const updated = next.document.getTexts().get(1)\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToEndOf(updated).toJS()\n  )\n\n  return next\n}\n"},"block-start":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"hashtag",isVoid:!0},{kind:"text",text:"word"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertInline({\n      type: 'hashtag',\n      isVoid: true\n    })\n    .apply()\n\n  const updated = next.document.getTexts().first()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToEndOf(updated).toJS()\n  )\n\n  return next\n}\n"
},"inside-inline":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"wo"},{kind:"inline",type:"image",isVoid:!0},{kind:"text",text:"rd"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertInline({\n      type: 'image',\n      isVoid: true\n    })\n    .apply()\n\n  const updated = next.document.getTexts().get(1)\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToEndOf(updated).toJS()\n  )\n\n  return next\n}\n"},"is-empty":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:""}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"hashtag",isVoid:!0}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertInline({\n      type: 'hashtag',\n      isVoid: true\n    })\n    .apply()\n\n  const updated = next.document.getTexts().last()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToEndOf(updated).toJS()\n  )\n\n  return next\n}\n"},"is-void":{input:{nodes:[{kind:"block",type:"image",isVoid:!0}]},output:{nodes:[{kind:"block",type:"image",isVoid:!0}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertInline({\n      type: 'hashtag',\n      isVoid: true\n    })\n    .apply()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.toJS()\n  )\n\n  return next\n}\n"},"with-inline":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"image",isVoid:!0},{kind:"text",text:"word"}]}]},index:"\nimport { Inline } from '../../../../..'\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertInline(Inline.create({\n      type: 'image',\n      isVoid: true\n    }))\n    .apply()\n\n  const updated = next.document.getTexts().first()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToEndOf(updated).toJS()\n  )\n\n  return next\n}\n"}},"unwrap-inline-at-range":{"across-blocks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wo"},{kind:"inline",type:"hashtag",nodes:[{kind:"text",text:"rd"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"hashtag",nodes:[{kind:"text",text:"an"}]},{kind:"text",text:"other"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .unwrapInlineAtRange(range, 'hashtag')\n    .apply()\n}\n"},"across-inlines":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"wo"}]},{kind:"inline",type:"hashtag",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"rd"}]}]},{kind:"inline",type:"hashtag",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"an"}]}]},{kind:"inline",type:"link",nodes:[{kind:"text",text:"other"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"wo"}]},{kind:"inline",type:"link",nodes:[{kind:"text",text:"rd"}]},{kind:"inline",type:"link",nodes:[{kind:"text",text:"an"}]},{kind:"inline",type:"link",nodes:[{kind:"text",text:"other"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .unwrapInlineAtRange(range, 'hashtag')\n    .apply()\n}\n"},"nested-block":{input:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"w"},{kind:"inline",type:"hashtag",nodes:[{kind:"text",text:"or"}]},{kind:"text",text:"d"}]}]}]},output:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 3\n  })\n\n  return state\n    .transform()\n    .unwrapInlineAtRange(range, 'hashtag')\n    .apply()\n}\n"},"single-block":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"w"},{kind:"inline",type:"hashtag",nodes:[{kind:"text",text:"or"}]},{kind:"text",text:"d"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 3\n  })\n\n  return state\n    .transform()\n    .unwrapInlineAtRange(range, 'hashtag')\n    .apply()\n}\n"},"with-object":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"w"},{kind:"inline",type:"hashtag",data:{key:"one"},nodes:[{kind:"inline",type:"hashtag",data:{key:"two"},nodes:[{kind:"text",text:"or"}]}]},{kind:"text",text:"d"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"w"},{kind:"inline",type:"hashtag",data:{key:"two"},nodes:[{kind:"text",text:"or"}]},{kind:"text",text:"d"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 3\n  })\n\n  return state\n    .transform()\n    .unwrapInlineAtRange(range, {\n      type: 'hashtag',\n      data: { key: 'one' }\n    })\n    .apply()\n}\n"}},"unwrap-block-at-range":{"across-blocks":{input:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .unwrapBlockAtRange(range, 'quote')\n    .apply()\n}\n"},"across-inlines":{input:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"another"}]}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"another"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .unwrapBlockAtRange(range, 'quote')\n    .apply()\n}\n"},"ending-child-blocks":{input:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"one"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"two"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"three"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"four"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"five"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"six"}]}]}]},output:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"one"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"two"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"three"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"four"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"five"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"six"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const fifth = texts.get(4)\n  const sixth = texts.get(5)\n  const range = selection.merge({\n    anchorKey: fifth.key,\n    anchorOffset: 0,\n    focusKey: sixth.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .unwrapBlockAtRange(range, 'quote')\n    .apply()\n}\n"},"middle-child-blocks":{input:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"one"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"two"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"three"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"four"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"five"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"six"}]}]}]},output:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"one"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"two"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"three"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"four"}]},{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"five"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"six"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const third = texts.get(2)\n  const fourth = texts.get(3)\n  const range = selection.merge({\n    anchorKey: third.key,\n    anchorOffset: 0,\n    focusKey: fourth.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .unwrapBlockAtRange(range, 'quote')\n    .apply()\n}\n"},"nested-block":{input:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]}]}]},output:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .unwrapBlockAtRange(range, 'quote')\n    .apply()\n}\n"},"single-block":{input:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .unwrapBlockAtRange(range, 'quote')\n    .apply()\n}\n"},"starting-child-blocks":{input:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"one"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"two"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"three"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"four"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"five"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"six"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"one"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"two"}]},{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"three"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"four"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"five"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"six"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.get(0)\n  const second = texts.get(1)\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: second.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .unwrapBlockAtRange(range, 'quote')\n    .apply()\n}\n"},"with-object":{input:{nodes:[{kind:"block",type:"quote",data:{key:"value"},nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .unwrapBlockAtRange(range, {\n      type: 'quote',\n      data: { key: 'value' }\n    })\n    .apply()\n}\n"}},"delete-forward-at-range":{"before-inline-sibling":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"one"},{kind:"inline",type:"link",nodes:[{kind:"text",text:"two"}]},{kind:"text",text:"a"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"one"},{kind:"inline",type:"link",nodes:[{kind:"text",text:"two"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const last = texts.last()\n  const range = selection.merge({\n    anchorKey: last.key,\n    anchorOffset: 0,\n    focusKey: last.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .deleteForwardAtRange(range)\n    .apply()\n}\n"},"end-of-document":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  return state\n    .transform()\n    .deleteForwardAtRange(range)\n    .apply()\n}\n"},"first-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"ord"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .deleteForwardAtRange(range)\n    .apply()\n}\n"},"inside-inline-sibling":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"one"},{kind:"inline",type:"link",nodes:[{kind:"text",text:"a"}]},{kind:"text",text:"two"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"onetwo"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const second = texts.get(1)\n  const range = selection.merge({\n    anchorKey: second.key,\n    anchorOffset: 0,\n    focusKey: second.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .deleteForwardAtRange(range)\n    .apply()\n}\n"},"join-blocks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wordanother"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  return state\n    .transform()\n    .deleteForwardAtRange(range)\n    .apply()\n}\n"},"join-nested-blocks":{input:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]}]},output:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wordanother"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  return state\n    .transform()\n    .deleteForwardAtRange(range)\n    .apply()\n}\n"},"last-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wor"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length - 1,\n    focusKey: first.key,\n    focusOffset: first.length - 1\n  })\n\n  return state\n    .transform()\n    .deleteForwardAtRange(range)\n    .apply()\n}\n"},"middle-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wrd"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  return state\n    .transform()\n    .deleteForwardAtRange(range)\n    .apply()\n}\n"}},"set-block-at-range":{"single-block":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"code",nodes:[{kind:"text",text:"word"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .setBlockAtRange(range, { type: 'code' })\n    .apply()\n}\n"},"across-inlines":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"another"}]}]}]},output:{nodes:[{kind:"block",type:"code",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]},{kind:"block",type:"code",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"another"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .setBlockAtRange(range, { type: 'code' })\n    .apply()\n}\n"},"data-only":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",data:{key:"value"},nodes:[{kind:"text",text:"word"}]}]},index:"\nimport { Data } from '../../../../..'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .setBlockAtRange(range, { data: Data.create({ key: 'value' }) })\n    .apply()\n}\n"},"with-is-void":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"image",isVoid:!0}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .setBlockAtRange(range, {\n      type: 'image',\n      isVoid: true\n    })\n    .apply()\n}\n"},"with-data":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"code",data:{key:"value"},nodes:[{kind:"text",text:"word"}]}]},index:"\nimport { Data } from '../../../../..'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .setBlockAtRange(range, {\n      type: 'code',\n      data: Data.create({ key: 'value' })\n    })\n    .apply()\n}\n"},"single-block-string-shorthand":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"code",nodes:[{kind:"text",text:"word"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .setBlockAtRange(range, 'code')\n    .apply()\n}\n"},"across-blocks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},output:{nodes:[{kind:"block",type:"code",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"code",nodes:[{kind:"text",text:"another"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .setBlockAtRange(range, { type: 'code' })\n    .apply()\n}\n"},"nested-block":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"block",type:"code",nodes:[{kind:"text",text:"word"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .setBlockAtRange(range, { type: 'code' })\n    .apply()\n}\n"},"with-data-object":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"code",data:{key:"value"},nodes:[{kind:"text",text:"word"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .setBlockAtRange(range, {\n      type: 'code',\n      data: { key: 'value' }\n    })\n    .apply()\n}\n"}},"insert-text-at-range":{"inside-void":{input:{nodes:[{kind:"block",type:"image",isVoid:!0}]},output:{nodes:[{kind:"block",type:"image",isVoid:!0}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .insertTextAtRange(range, 'a')\n    .apply()\n}\n"},"first-space":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:" word"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .insertTextAtRange(range, ' ')\n    .apply()\n}\n"},"first-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"aword"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .insertTextAtRange(range, 'a')\n    .apply()\n}\n"},"first-words":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"a few words word"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .insertTextAtRange(range, 'a few words ')\n    .apply()\n}\n"},"middle-space":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"w ord"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  return state\n    .transform()\n    .insertTextAtRange(range, ' ')\n    .apply()\n}\n"},"last-space":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word "}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  return state\n    .transform()\n    .insertTextAtRange(range, ' ')\n    .apply()\n}\n"},"middle-words":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"w a few words ord"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  return state\n    .transform()\n    .insertTextAtRange(range, ' a few words ')\n    .apply()\n}\n"},"middle-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"waord"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  return state\n    .transform()\n    .insertTextAtRange(range, 'a')\n    .apply()\n}\n"},"last-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"worda"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  return state\n    .transform()\n    .insertTextAtRange(range, 'a')\n    .apply()\n}\n"},"last-words":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word a few words"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  return state\n    .transform()\n    .insertTextAtRange(range, ' a few words')\n    .apply()\n}\n"
},"during-mark":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w"},{text:"or",marks:[{type:"bold"}]},{text:"d"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w"},{text:"oar",marks:[{type:"bold"}]},{text:"d"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .insertTextAtRange(range, 'a')\n    .apply()\n}\n"},"before-mark":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w"},{text:"or",marks:[{type:"bold"}]},{text:"d"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"wa"},{text:"or",marks:[{type:"bold"}]},{text:"d"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  return state\n    .transform()\n    .insertTextAtRange(range, 'a')\n    .apply()\n}\n"},"after-mark":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w"},{text:"or",marks:[{type:"bold"}]},{text:"d"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w"},{text:"ora",marks:[{type:"bold"}]},{text:"d"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 3,\n    focusKey: first.key,\n    focusOffset: 3\n  })\n\n  return state\n    .transform()\n    .insertTextAtRange(range, 'a')\n    .apply()\n}\n"},"with-marks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"word"},{text:"a",marks:[{type:"bold"}]}]}]}]},index:"\nimport { Mark } from '../../../../..'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  const marks = Mark.createSet([\n    Mark.create({\n      type: 'bold'\n    })\n  ])\n\n  return state\n    .transform()\n    .insertTextAtRange(range, 'a', marks)\n    .apply()\n}\n"}},"wrap-text":{"start-of-block":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"[[wo]]rd"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .wrapText('[[', ']]')\n    .apply()\n\n\n  const updated = next.document.getTexts().get(0)\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.merge({\n      anchorKey: updated.key,\n      anchorOffset: 2,\n      focusKey: updated.key,\n      focusOffset: 4,\n      isBackward: false\n    }).toJS()\n  )\n\n  return next\n}\n"},"end-of-block":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wo[[rd]]"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: first.key,\n    focusOffset: 4\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .wrapText('[[', ']]')\n    .apply()\n\n\n  const updated = next.document.getTexts().get(0)\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.merge({\n      anchorKey: updated.key,\n      anchorOffset: 4,\n      focusKey: updated.key,\n      focusOffset: 6,\n      isBackward: false\n    }).toJS()\n  )\n\n  return next\n}\n"},"across-inlines":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]},{kind:"inline",type:"link",nodes:[{kind:"text",text:"another"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"wo[[rd"}]},{kind:"inline",type:"link",nodes:[{kind:"text",text:"an]]other"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const last = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: last.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .wrapText('[[', ']]')\n    .apply()\n\n\n  const updated = next.document.getTexts()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.merge({\n      anchorKey: updated.get(0).key,\n      anchorOffset: 4,\n      focusKey: updated.get(1).key,\n      focusOffset: 2,\n      isBackward: false\n    }).toJS()\n  )\n\n  return next\n}\n"},"empty-block":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:""}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"[[]]"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .wrapText('[[', ']]')\n    .apply()\n\n\n  const updated = next.document.getTexts().get(0)\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.merge({\n      anchorKey: updated.key,\n      anchorOffset: 2,\n      focusKey: updated.key,\n      focusOffset: 2,\n      isBackward: false\n    }).toJS()\n  )\n\n  return next\n}\n"},"backwards-selection":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"w[[or]]d"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 3,\n    focusKey: first.key,\n    focusOffset: 1,\n    isBackward: true\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .wrapText('[[', ']]')\n    .apply()\n\n\n  const updated = next.document.getTexts().get(0)\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.merge({\n      anchorKey: updated.key,\n      anchorOffset: 5,\n      focusKey: updated.key,\n      focusOffset: 3\n    }).toJS()\n  )\n\n  return next\n}\n"},"middle-of-block":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"w[[or]]d"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 3\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .wrapText('[[', ']]')\n    .apply()\n\n\n  const updated = next.document.getTexts().get(0)\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.merge({\n      anchorKey: updated.key,\n      anchorOffset: 3,\n      focusKey: updated.key,\n      focusOffset: 5,\n      isBackward: false\n    }).toJS()\n  )\n\n  return next\n}\n"},"across-blocks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wo[[rd"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"an]]other"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const last = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: last.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .wrapText('[[', ']]')\n    .apply()\n\n\n  const updated = next.document.getTexts()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.merge({\n      anchorKey: updated.get(0).key,\n      anchorOffset: 4,\n      focusKey: updated.get(1).key,\n      focusOffset: 2,\n      isBackward: false\n    }).toJS()\n  )\n\n  return next\n}\n"},"without-suffix":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"w**or**d"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 3\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .wrapText('**')\n    .apply()\n\n\n  const updated = next.document.getTexts().get(0)\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.merge({\n      anchorKey: updated.key,\n      anchorOffset: 3,\n      focusKey: updated.key,\n      focusOffset: 5,\n      isBackward: false\n    }).toJS()\n  )\n\n  return next\n}\n"},"whole-block":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"[[word]]"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 4\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .wrapText('[[', ']]')\n    .apply()\n\n\n  const updated = next.document.getTexts().get(0)\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.merge({\n      anchorKey: updated.key,\n      anchorOffset: 2,\n      focusKey: updated.key,\n      focusOffset: 6,\n      isBackward: false\n    }).toJS()\n  )\n\n  return next\n}\n"}},"wrap-inline-at-range":{"across-blocks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wo"},{kind:"inline",type:"hashtag",nodes:[{kind:"text",text:"rd"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"hashtag",nodes:[{kind:"text",text:"an"}]},{kind:"text",text:"other"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .wrapInlineAtRange(range, 'hashtag')\n    .apply()\n}\n"},"across-inlines":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]},{kind:"inline",type:"link",nodes:[{kind:"text",text:"another"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"wo"}]},{kind:"inline",type:"hashtag",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"rd"}]}]},{kind:"inline",type:"hashtag",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"an"}]}]},{kind:"inline",type:"link",nodes:[{kind:"text",text:"other"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .wrapInlineAtRange(range, 'hashtag')\n    .apply()\n}\n"},"nested-block":{input:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"w"},{kind:"inline",type:"hashtag",nodes:[{kind:"text",text:"or"}]},{kind:"text",text:"d"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 3\n  })\n\n  return state\n    .transform()\n    .wrapInlineAtRange(range, 'hashtag')\n    .apply()\n}\n"},"single-block":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"w"},{kind:"inline",type:"hashtag",nodes:[{kind:"text",text:"or"}]},{kind:"text",text:"d"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 3\n  })\n\n  return state\n    .transform()\n    .wrapInlineAtRange(range, 'hashtag')\n    .apply()\n}\n"},"with-object":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"w"},{kind:"inline",type:"hashtag",data:{key:"value"},nodes:[{kind:"text",text:"or"}]},{kind:"text",text:"d"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 3\n  })\n\n  return state\n    .transform()\n    .wrapInlineAtRange(range, {\n      type: 'hashtag',\n      data: { key: 'value' }\n    })\n    .apply()\n}\n"}},"remove-mark":{"whole-word":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"word",marks:[{type:"bold"}]}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .removeMark('bold')\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.toJS())\n\n  return next\n}\n"},"existing-marks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"wo",marks:[{type:"italic"},{type:"bold"}]},{text:"rd",marks:[{type:"italic"}]}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"word",marks:[{type:"italic"}]}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .removeMark('bold')\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.toJS())\n\n  return next\n}\n"},"with-plain-object":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w",marks:[{type:"bold",data:{key:"value"}}]},{text:"ord"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .removeMark({\n      type: 'bold',\n      data: { key: 'value' }\n    })\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.toJS())\n\n  return next\n}\n"},"first-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w",marks:[{type:"bold"}]},{text:"ord"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .removeMark('bold')\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.toJS())\n\n  return next\n}\n"},"across-inlines":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",ranges:[{text:"wo"},{text:"rd",marks:[{type:"bold"}]}]}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",ranges:[{text:"an",marks:[{type:"bold"}]},{text:"other"}]}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"another"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .removeMark('bold')\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.toJS())\n\n  return next\n}\n"},"middle-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w"},{text:"o",marks:[{type:"bold"}]},{text:"rd"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .removeMark('bold')\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.toJS())\n\n  return next\n}\n"},"last-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"wor"},{text:"d",marks:[{type:"bold"}]}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length - 1,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .removeMark('bold')\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.toJS())\n\n  return next\n}\n"},"across-blocks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"wo"},{text:"rd",marks:[{type:"bold"}]}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"an",marks:[{type:"bold"}]},{text:"other"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .removeMark('bold')\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.toJS())\n\n  return next\n}\n"},"collapsed-selection":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"aword"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .addMark('bold')\n    .removeMark('bold')\n    .insertText('a')\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.moveForward().toJS())\n\n  return next\n}\n"},"with-mark-object":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w",marks:[{type:"bold",data:{key:"value"}}]},{text:"ord"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},index:"\nimport { Mark } from '../../../../..'\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .removeMark(Mark.create({\n      type: 'bold',\n      data: { key: 'value' }\n    }))\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.toJS())\n\n  return next\n}\n"}},"split-block-at-range":{"block-end":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:""}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  return state\n    .transform()\n    .splitBlockAtRange(range)\n    .apply()\n}\n"},"block-middle":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wo"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"rd"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .splitBlockAtRange(range)\n    .apply()\n}\n"},"block-start":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:""}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const second = texts.get(1)\n  const range = selection.merge({\n    anchorKey: second.key,\n    anchorOffset: 0,\n    focusKey: second.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .splitBlockAtRange(range)\n    .apply()\n}\n"},depth:{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wo"}]}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"rd"}]}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .splitBlockAtRange(range, Infinity)\n    .apply()\n}\n"},"with-delete-across-blocks-and-inlines":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"one",nodes:[{kind:"text",text:"word"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"two",nodes:[{kind:"text",text:"another"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"one",nodes:[{kind:"text",text:"wo"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"two",nodes:[{kind:"text",text:"other"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .splitBlockAtRange(range)\n    .apply()\n}\n"},"with-delete-across-blocks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wo"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"other"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .splitBlockAtRange(range)\n    .apply()\n}\n"},"with-delete":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"w"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"d"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 3\n  })\n\n  return state\n    .transform()\n    .splitBlockAtRange(range)\n    .apply()\n}\n"},"with-inline":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"wo"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"rd"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .splitBlockAtRange(range)\n    .apply()\n}\n"}},"insert-block-at-range":{"block-end":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"image",nodes:[{kind:"text",text:""}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  return state\n    .transform()\n    .insertBlockAtRange(range, 'image')\n    .apply()\n}\n"},"block-middle":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wo"}]},{kind:"block",type:"image",nodes:[{kind:"text",text:""}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"rd"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .insertBlockAtRange(range, 'image')\n    .apply()\n}\n"},"block-start":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"image",nodes:[{kind:"text",text:""}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .insertBlockAtRange(range, 'image')\n    .apply()\n}\n"},"is-empty":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:""}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"not empty"}]}]},output:{nodes:[{kind:"block",type:"image",
nodes:[{kind:"text",text:""}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"not empty"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .insertBlockAtRange(range, 'image')\n    .apply()\n}\n"},"is-void":{input:{nodes:[{kind:"block",type:"image",isVoid:!0,nodes:[{kind:"text",text:""}]}]},output:{nodes:[{kind:"block",type:"image",isVoid:!0},{kind:"block",type:"image",nodes:[{kind:"text",text:""}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .insertBlockAtRange(range, 'image')\n    .apply()\n}\n"},"with-block":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"image",nodes:[{kind:"text",text:""}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},index:"\nimport { Block } from '../../../../..'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .insertBlockAtRange(range, Block.create({ type: 'image' }))\n    .apply()\n}\n"},"with-object":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"image",nodes:[{kind:"text",text:""}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  return state\n    .transform()\n    .insertBlockAtRange(range, { type: 'image' })\n    .apply()\n}\n"}},"add-mark-at-range":{"whole-word":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"word",marks:[{type:"bold"}]}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  return state\n    .transform()\n    .addMarkAtRange(range, 'bold')\n    .apply()\n}\n"},"existing-marks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"word",marks:[{type:"italic"}]}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"wo",marks:[{type:"italic"},{type:"bold"}]},{text:"rd",marks:[{type:"italic"}]}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .addMarkAtRange(range, 'bold')\n    .apply()\n}\n"},"with-plain-object":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w",marks:[{type:"bold",data:{key:"value"}}]},{text:"ord"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  return state\n    .transform()\n    .addMarkAtRange(range, {\n      type: 'bold',\n      data: { key: 'value' }\n    })\n    .apply()\n}\n"},"first-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w",marks:[{type:"bold"}]},{text:"ord"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  return state\n    .transform()\n    .addMarkAtRange(range, 'bold')\n    .apply()\n}\n"},"across-inlines":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"another"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",ranges:[{text:"wo"},{text:"rd",marks:[{type:"bold"}]}]}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",ranges:[{text:"an",marks:[{type:"bold"}]},{text:"other"}]}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .addMarkAtRange(range, 'bold')\n    .apply()\n}\n"},"middle-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w"},{text:"o",marks:[{type:"bold"}]},{text:"rd"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .addMarkAtRange(range, 'bold')\n    .apply()\n}\n"},"last-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"wor"},{text:"d",marks:[{type:"bold"}]}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length - 1,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  return state\n    .transform()\n    .addMarkAtRange(range, 'bold')\n    .apply()\n}\n"},"across-blocks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"wo"},{text:"rd",marks:[{type:"bold"}]}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"an",marks:[{type:"bold"}]},{text:"other"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .addMarkAtRange(range, 'bold')\n    .apply()\n}\n"},"with-mark-object":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w",marks:[{type:"bold",data:{key:"value"}}]},{text:"ord"}]}]}]},index:"\nimport { Mark } from '../../../../..'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  return state\n    .transform()\n    .addMarkAtRange(range, Mark.create({\n      type: 'bold',\n      data: { key: 'value' }\n    }))\n    .apply()\n}\n"}},"add-mark":{"whole-word":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"word",marks:[{type:"bold"}]}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .addMark('bold')\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.toJS())\n\n  return next\n}\n"},"existing-marks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"word",marks:[{type:"italic"}]}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"wo",marks:[{type:"italic"},{type:"bold"}]},{text:"rd",marks:[{type:"italic"}]}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .addMark('bold')\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.toJS())\n\n  return next\n}\n"},"with-plain-object":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w",marks:[{type:"bold",data:{key:"value"}}]},{text:"ord"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .addMark({\n      type: 'bold',\n      data: { key: 'value' }\n    })\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.toJS())\n\n  return next\n}\n"},"first-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w",marks:[{type:"bold"}]},{text:"ord"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .addMark('bold')\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.toJS())\n\n  return next\n}\n"},"across-inlines":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"another"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",ranges:[{text:"wo"},{text:"rd",marks:[{type:"bold"}]}]}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",ranges:[{text:"an",marks:[{type:"bold"}]},{text:"other"}]}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .addMark('bold')\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.toJS())\n\n  return next\n}\n"},"middle-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w"},{text:"o",marks:[{type:"bold"}]},{text:"rd"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .addMark('bold')\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.toJS())\n\n  return next\n}\n"},"last-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"wor"},{text:"d",marks:[{type:"bold"}]}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length - 1,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .addMark('bold')\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.toJS())\n\n  return next\n}\n"},"across-blocks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"wo"},{text:"rd",marks:[{type:"bold"}]}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"an",marks:[{type:"bold"}]},{text:"other"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .addMark('bold')\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.toJS())\n\n  return next\n}\n"},"collapsed-selection":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"a",marks:[{type:"bold"}]},{text:"word"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .addMark('bold')\n    .insertText('a')\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.moveForward().toJS())\n\n  return next\n}\n"},"with-mark-object":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w",marks:[{type:"bold",data:{key:"value"}}]},{text:"ord"}]}]}]},index:"\nimport { Mark } from '../../../../..'\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .addMark(Mark.create({\n      type: 'bold',\n      data: { key: 'value' }\n    }))\n    .apply()\n\n  assert.deepEqual(next.selection.toJS(), range.toJS())\n\n  return next\n}\n"}},"insert-block":{"block-end":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"image",nodes:[{kind:"text",text:""}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertBlock('image')\n    .apply()\n\n  const updated = next.document.getTexts().last()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStartOf(updated).toJS()\n  )\n\n  return next\n}\n"},"block-middle":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wo"}]},{kind:"block",type:"image",nodes:[{kind:"text",text:""}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"rd"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertBlock('image')\n    .apply()\n\n  const updated = next.document.getTexts().get(1)\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStartOf(updated).toJS()\n  )\n\n  return next\n}\n"},"block-start":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"image",nodes:[{kind:"text",text:""}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertBlock('image')\n    .apply()\n\n  const updated = next.document.getTexts().first()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStartOf(updated).toJS()\n  )\n\n  return next\n}\n"},"is-empty":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:""}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"not empty"}]}]},output:{nodes:[{kind:"block",type:"image",nodes:[{kind:"text",text:""}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"not empty"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertBlock('image')\n    .apply()\n\n  const updated = next.document.getTexts().first()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStartOf(updated).toJS()\n  )\n\n  return next\n}\n"},"is-void":{input:{nodes:[{kind:"block",type:"image",isVoid:!0,nodes:[{kind:"text",text:""}]}]},output:{nodes:[{kind:"block",type:"image",isVoid:!0},{kind:"block",type:"image",nodes:[{kind:"text",text:""}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertBlock('image')\n    .apply()\n\n  const updated = next.document.getTexts().last()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStartOf(updated).toJS()\n  )\n\n  return next\n}\n"},"with-block":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"image",nodes:[{kind:"text",text:""}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},index:"\nimport { Block } from '../../../../..'\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertBlock(Block.create({ type: 'image' }))\n    .apply()\n\n  const updated = next.document.getTexts().first()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStartOf(updated).toJS()\n  )\n\n  return next\n}\n"},"with-object":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"image",nodes:[{kind:"text",text:""}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .insertBlock({ type: 'image' })\n    .apply()\n\n  const updated = next.document.getTexts().first()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStartOf(updated).toJS()\n  )\n\n  return next\n}\n"}},"split-block":{"block-end":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:""}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .splitBlock()\n    .apply()\n\n  const updated = next.document.getTexts().get(1)\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStartOf(updated).toJS()\n  )\n\n  return next\n}\n"},"block-middle":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wo"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"rd"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .splitBlock()\n    .apply()\n\n  const updated = next.document.getTexts().get(1)\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStartOf(updated).toJS()\n  )\n\n  return next\n}\n"},"block-start":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:""}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const second = texts.get(1)\n  const range = selection.merge({\n    anchorKey: second.key,\n    anchorOffset: 0,\n    focusKey: second.key,\n    focusOffset: 0\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .splitBlock()\n    .apply()\n\n  const updated = next.document.getTexts().last()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStartOf(updated).toJS()\n  )\n\n  return next\n}\n"},depth:{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wo"}]}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"rd"}]}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .splitBlock(Infinity)\n    .apply()\n\n  const updated = next.document.getTexts().last()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStartOf(updated).toJS()\n  )\n\n  return next\n}\n"},"with-delete-across-blocks-and-inlines":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"one",nodes:[{kind:"text",text:"word"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"two",nodes:[{kind:"text",text:"another"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"one",nodes:[{kind:"text",text:"wo"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"two",nodes:[{kind:"text",text:"other"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .splitBlock()\n    .apply()\n\n  const updated = next.document.getTexts().get(1)\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStartOf(updated).toJS()\n  )\n\n  return next\n}\n"},"with-delete-across-blocks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wo"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"other"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .splitBlock()\n    .apply()\n\n  const updated = next.document.getTexts().last()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStartOf(updated).toJS()\n  )\n\n  return next\n}\n"},"with-delete":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"w"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"d"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 3\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .splitBlock()\n    .apply()\n\n  const updated = next.document.getTexts().last()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStartOf(updated).toJS()\n  )\n\n  return next\n}\n"},"with-inline":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"wo"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"rd"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .splitBlock()\n    .apply()\n\n  const updated = next.document.getTexts().last()\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.collapseToStartOf(updated).toJS()\n  )\n\n  return next\n}\n"}},"remove-mark-at-range":{"whole-word":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"word",marks:[{type:"bold"}]}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  return state\n    .transform()\n    .removeMarkAtRange(range, 'bold')\n    .apply()\n}\n"},"existing-marks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"word",marks:[{type:"italic"},{type:"bold"}]}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"wo",marks:[{type:"italic"}]},{text:"rd",marks:[{type:"italic"},{type:"bold"}]}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .removeMarkAtRange(range, 'bold')\n    .apply()\n}\n"
},"with-plain-object":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w",marks:[{type:"bold",data:{key:"value"}}]},{text:"ord"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  return state\n    .transform()\n    .removeMarkAtRange(range, {\n      type: 'bold',\n      data: { key: 'value' }\n    })\n    .apply()\n}\n"},"first-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"word",marks:[{type:"bold"}]}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w"},{text:"ord",marks:[{type:"bold"}]}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  return state\n    .transform()\n    .removeMarkAtRange(range, 'bold')\n    .apply()\n}\n"},"across-inlines":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",ranges:[{text:"word",marks:[{type:"bold"}]}]}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",ranges:[{text:"another",marks:[{type:"bold"}]}]}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",ranges:[{text:"wo",marks:[{type:"bold"}]},{text:"rd"}]}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",ranges:[{text:"an"},{text:"other",marks:[{type:"bold"}]}]}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .removeMarkAtRange(range, 'bold')\n    .apply()\n}\n"},"middle-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"word",marks:[{type:"bold"}]}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w",marks:[{type:"bold"}]},{text:"o"},{text:"rd",marks:[{type:"bold"}]}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .removeMarkAtRange(range, 'bold')\n    .apply()\n}\n"},"last-character":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"word",marks:[{type:"bold"}]}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"wor",marks:[{type:"bold"}]},{text:"d"}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: first.length - 1,\n    focusKey: first.key,\n    focusOffset: first.length\n  })\n\n  return state\n    .transform()\n    .removeMarkAtRange(range, 'bold')\n    .apply()\n}\n"},"across-blocks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"word",marks:[{type:"bold"}]}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"another",marks:[{type:"bold"}]}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"wo",marks:[{type:"bold"}]},{text:"rd"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"an"},{text:"other",marks:[{type:"bold"}]}]}]}]},index:"\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  return state\n    .transform()\n    .removeMarkAtRange(range, 'bold')\n    .apply()\n}\n"},"with-mark-object":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",ranges:[{text:"w",marks:[{type:"bold",data:{key:"value"}}]},{text:"ord"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},index:"\nimport { Mark } from '../../../../..'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 0,\n    focusKey: first.key,\n    focusOffset: 1\n  })\n\n  return state\n    .transform()\n    .removeMarkAtRange(range, Mark.create({\n      type: 'bold',\n      data: { key: 'value' }\n    }))\n    .apply()\n}\n"}},"wrap-inline":{"across-blocks":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]},{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"another"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"wo"},{kind:"inline",type:"hashtag",nodes:[{kind:"text",text:"rd"}]}]},{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"hashtag",nodes:[{kind:"text",text:"an"}]},{kind:"text",text:"other"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .wrapInline('hashtag')\n    .apply()\n\n  const two = next.document.getTexts().get(1)\n  const three = next.document.getTexts().get(2)\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.merge({\n      anchorKey: two.key,\n      anchorOffset: 0,\n      focusKey: three.key,\n      focusOffset: three.length\n    }).toJS()\n  )\n\n  return next\n}\n"},"across-inlines":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"word"}]},{kind:"inline",type:"link",nodes:[{kind:"text",text:"another"}]}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"wo"}]},{kind:"inline",type:"hashtag",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"rd"}]}]},{kind:"inline",type:"hashtag",nodes:[{kind:"inline",type:"link",nodes:[{kind:"text",text:"an"}]}]},{kind:"inline",type:"link",nodes:[{kind:"text",text:"other"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const second = texts.last()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 2,\n    focusKey: second.key,\n    focusOffset: 2\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .wrapInline('hashtag')\n    .apply()\n\n  const two = next.document.getTexts().get(1)\n  const three = next.document.getTexts().get(2)\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.merge({\n      anchorKey: two.key,\n      anchorOffset: 0,\n      focusKey: three.key,\n      focusOffset: three.length\n    }).toJS()\n  )\n\n  return next\n}\n"},"nested-block":{input:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]}]},output:{nodes:[{kind:"block",type:"quote",nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"w"},{kind:"inline",type:"hashtag",nodes:[{kind:"text",text:"or"}]},{kind:"text",text:"d"}]}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 3\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .wrapInline('hashtag')\n    .apply()\n\n  const updated = next.document.getTexts().get(1)\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.merge({\n      anchorKey: updated.key,\n      anchorOffset: 0,\n      focusKey: updated.key,\n      focusOffset: updated.length\n    }).toJS()\n  )\n\n  return next\n}\n"},"single-block":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"w"},{kind:"inline",type:"hashtag",nodes:[{kind:"text",text:"or"}]},{kind:"text",text:"d"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 3\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .wrapInline('hashtag')\n    .apply()\n\n  const updated = next.document.getTexts().get(1)\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.merge({\n      anchorKey: updated.key,\n      anchorOffset: 0,\n      focusKey: updated.key,\n      focusOffset: updated.length\n    }).toJS()\n  )\n\n  return next\n}\n"},twice:{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"before word after"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"before "},{kind:"inline",type:"outer",nodes:[{kind:"inline",type:"inner",nodes:[{kind:"text",text:"word"}]}]},{kind:"text",text:" after"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const text = texts.first()\n  const range = selection.merge({\n    anchorKey: text.key,\n    anchorOffset: 7,\n    focusKey: text.key,\n    focusOffset: 11\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .wrapInline('inner')\n    .wrapInline('outer')\n    .apply()\n\n  const updated = next.document.getTexts().get(1)\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.merge({\n      anchorKey: updated.key,\n      anchorOffset: 0,\n      focusKey: updated.key,\n      focusOffset: updated.length\n    }).toJS()\n  )\n\n  return next\n}\n"},"with-object":{input:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"word"}]}]},output:{nodes:[{kind:"block",type:"paragraph",nodes:[{kind:"text",text:"w"},{kind:"inline",type:"hashtag",data:{key:"value"},nodes:[{kind:"text",text:"or"}]},{kind:"text",text:"d"}]}]},index:"\nimport assert from 'assert'\n\nexport default function (state) {\n  const { document, selection } = state\n  const texts = document.getTexts()\n  const first = texts.first()\n  const range = selection.merge({\n    anchorKey: first.key,\n    anchorOffset: 1,\n    focusKey: first.key,\n    focusOffset: 3\n  })\n\n  const next = state\n    .transform()\n    .moveTo(range)\n    .wrapInline({\n      type: 'hashtag',\n      data: { key: 'value' }\n    })\n    .apply()\n\n  const updated = next.document.getTexts().get(1)\n\n  assert.deepEqual(\n    next.selection.toJS(),\n    range.merge({\n      anchorKey: updated.key,\n      anchorOffset: 0,\n      focusKey: updated.key,\n      focusOffset: updated.length\n    }).toJS()\n  )\n\n  return next\n}\n"}}}},function(t,e,n){"use strict";function r(t){var e=new o(o._61);return e._81=1,e._65=t,e}var o=n(132);t.exports=o;var s=r(!0),i=r(!1),a=r(null),c=r(void 0),u=r(0),l=r("");o.resolve=function(t){if(t instanceof o)return t;if(null===t)return a;if(void 0===t)return c;if(t===!0)return s;if(t===!1)return i;if(0===t)return u;if(""===t)return l;if("object"==typeof t||"function"==typeof t)try{var e=t.then;if("function"==typeof e)return new o(e.bind(t))}catch(n){return new o(function(t,e){e(n)})}return r(t)},o.all=function(t){var e=Array.prototype.slice.call(t);return new o(function(t,n){function r(i,a){if(a&&("object"==typeof a||"function"==typeof a)){if(a instanceof o&&a.then===o.prototype.then){for(;3===a._81;)a=a._65;return 1===a._81?r(i,a._65):(2===a._81&&n(a._65),void a.then(function(t){r(i,t)},n))}var c=a.then;if("function"==typeof c){var u=new o(c.bind(a));return void u.then(function(t){r(i,t)},n)}}e[i]=a,0===--s&&t(e)}if(0===e.length)return t([]);for(var s=e.length,i=0;i<e.length;i++)r(i,e[i])})},o.reject=function(t){return new o(function(e,n){n(t)})},o.race=function(t){return new o(function(e,n){t.forEach(function(t){o.resolve(t).then(e,n)})})},o.prototype.catch=function(t){return this.then(null,t)}},function(t,e,n){"use strict";function r(){u=!1,a._10=null,a._97=null}function o(t){function e(e){(t.allRejections||i(d[e].error,t.whitelist||c))&&(d[e].displayId=l++,t.onUnhandled?(d[e].logged=!0,t.onUnhandled(d[e].displayId,d[e].error)):(d[e].logged=!0,s(d[e].displayId,d[e].error)))}function n(e){d[e].logged&&(t.onHandled?t.onHandled(d[e].displayId,d[e].error):d[e].onUnhandled||(console.warn("Promise Rejection Handled (id: "+d[e].displayId+"):"),console.warn('  This means you can ignore any previous messages of the form "Possible Unhandled Promise Rejection" with id '+d[e].displayId+".")))}t=t||{},u&&r(),u=!0;var o=0,l=0,d={};a._10=function(t){2===t._81&&d[t._72]&&(d[t._72].logged?n(t._72):clearTimeout(d[t._72].timeout),delete d[t._72])},a._97=function(t,n){0===t._45&&(t._72=o++,d[t._72]={displayId:null,error:n,timeout:setTimeout(e.bind(null,t._72),i(n,c)?100:2e3),logged:!1})}}function s(t,e){console.warn("Possible Unhandled Promise Rejection (id: "+t+"):");var n=(e&&(e.stack||e))+"";n.split("\n").forEach(function(t){console.warn("  "+t)})}function i(t,e){return e.some(function(e){return t instanceof e})}var a=n(132),c=[ReferenceError,TypeError,RangeError],u=!1;e.disable=r,e.enable=o},function(t,e){t.exports=Array.isArray||function(t){return"[object Array]"==Object.prototype.toString.call(t)}},function(t,e,n){t.exports=n(25)},function(t,e,n){t.exports=n(133)},function(t,e,n){(function(r){e=t.exports=n(134),e.Stream=n(43),e.Readable=e,e.Writable=n(79),e.Duplex=n(25),e.Transform=n(78),e.PassThrough=n(133),r.browser||"disable"!==r.env.READABLE_STREAM||(t.exports=n(43))}).call(e,n(13))},function(t,e,n){t.exports=n(78)},function(t,e,n){t.exports=n(79)},function(t,e){t.exports=function(t){return t&&"object"==typeof t&&"function"==typeof t.copy&&"function"==typeof t.fill&&"function"==typeof t.readUInt8}},function(t,e){(function(e){t.exports=e}).call(e,{})},function(t,e){!function(t){"use strict";function e(t){if("string"!=typeof t&&(t=String(t)),/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(t))throw new TypeError("Invalid character in header field name");return t.toLowerCase()}function n(t){return"string"!=typeof t&&(t=String(t)),t}function r(t){var e={next:function(){var e=t.shift();return{done:void 0===e,value:e}}};return g.iterable&&(e[Symbol.iterator]=function(){return e}),e}function o(t){this.map={},t instanceof o?t.forEach(function(t,e){this.append(e,t)},this):t&&Object.getOwnPropertyNames(t).forEach(function(e){this.append(e,t[e])},this)}function s(t){return t.bodyUsed?Promise.reject(new TypeError("Already read")):void(t.bodyUsed=!0)}function i(t){return new Promise(function(e,n){t.onload=function(){e(t.result)},t.onerror=function(){n(t.error)}})}function a(t){var e=new FileReader;return e.readAsArrayBuffer(t),i(e)}function c(t){var e=new FileReader;return e.readAsText(t),i(e)}function u(){return this.bodyUsed=!1,this._initBody=function(t){if(this._bodyInit=t,"string"==typeof t)this._bodyText=t;else if(g.blob&&Blob.prototype.isPrototypeOf(t))this._bodyBlob=t;else if(g.formData&&FormData.prototype.isPrototypeOf(t))this._bodyFormData=t;else if(g.searchParams&&URLSearchParams.prototype.isPrototypeOf(t))this._bodyText=t.toString();else if(t){if(!g.arrayBuffer||!ArrayBuffer.prototype.isPrototypeOf(t))throw new Error("unsupported BodyInit type")}else this._bodyText="";this.headers.get("content-type")||("string"==typeof t?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):g.searchParams&&URLSearchParams.prototype.isPrototypeOf(t)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},g.blob?(this.blob=function(){var t=s(this);if(t)return t;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this.blob().then(a)},this.text=function(){var t=s(this);if(t)return t;if(this._bodyBlob)return c(this._bodyBlob);if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)}):this.text=function(){var t=s(this);return t?t:Promise.resolve(this._bodyText)},g.formData&&(this.formData=function(){return this.text().then(f)}),this.json=function(){return this.text().then(JSON.parse)},this}function l(t){var e=t.toUpperCase();return y.indexOf(e)>-1?e:t}function d(t,e){e=e||{};var n=e.body;if(d.prototype.isPrototypeOf(t)){if(t.bodyUsed)throw new TypeError("Already read");this.url=t.url,this.credentials=t.credentials,e.headers||(this.headers=new o(t.headers)),this.method=t.method,this.mode=t.mode,n||(n=t._bodyInit,t.bodyUsed=!0)}else this.url=t;if(this.credentials=e.credentials||this.credentials||"omit",!e.headers&&this.headers||(this.headers=new o(e.headers)),this.method=l(e.method||this.method||"GET"),this.mode=e.mode||this.mode||null,this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&n)throw new TypeError("Body not allowed for GET or HEAD requests");this._initBody(n)}function f(t){var e=new FormData;return t.trim().split("&").forEach(function(t){if(t){var n=t.split("="),r=n.shift().replace(/\+/g," "),o=n.join("=").replace(/\+/g," ");e.append(decodeURIComponent(r),decodeURIComponent(o))}}),e}function p(t){var e=new o,n=(t.getAllResponseHeaders()||"").trim().split("\n");return n.forEach(function(t){var n=t.trim().split(":"),r=n.shift().trim(),o=n.join(":").trim();e.append(r,o)}),e}function h(t,e){e||(e={}),this.type="default",this.status=e.status,this.ok=this.status>=200&&this.status<300,this.statusText=e.statusText,this.headers=e.headers instanceof o?e.headers:new o(e.headers),this.url=e.url||"",this._initBody(t)}if(!t.fetch){var g={searchParams:"URLSearchParams"in t,iterable:"Symbol"in t&&"iterator"in Symbol,blob:"FileReader"in t&&"Blob"in t&&function(){try{return new Blob,!0}catch(t){return!1}}(),formData:"FormData"in t,arrayBuffer:"ArrayBuffer"in t};o.prototype.append=function(t,r){t=e(t),r=n(r);var o=this.map[t];o||(o=[],this.map[t]=o),o.push(r)},o.prototype.delete=function(t){delete this.map[e(t)]},o.prototype.get=function(t){var n=this.map[e(t)];return n?n[0]:null},o.prototype.getAll=function(t){return this.map[e(t)]||[]},o.prototype.has=function(t){return this.map.hasOwnProperty(e(t))},o.prototype.set=function(t,r){this.map[e(t)]=[n(r)]},o.prototype.forEach=function(t,e){Object.getOwnPropertyNames(this.map).forEach(function(n){this.map[n].forEach(function(r){t.call(e,r,n,this)},this)},this)},o.prototype.keys=function(){var t=[];return this.forEach(function(e,n){t.push(n)}),r(t)},o.prototype.values=function(){var t=[];return this.forEach(function(e){t.push(e)}),r(t)},o.prototype.entries=function(){var t=[];return this.forEach(function(e,n){t.push([n,e])}),r(t)},g.iterable&&(o.prototype[Symbol.iterator]=o.prototype.entries);var y=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];d.prototype.clone=function(){return new d(this)},u.call(d.prototype),u.call(h.prototype),h.prototype.clone=function(){return new h(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new o(this.headers),url:this.url})},h.error=function(){var t=new h(null,{status:0,statusText:""});return t.type="error",t};var m=[301,302,303,307,308];h.redirect=function(t,e){if(m.indexOf(e)===-1)throw new RangeError("Invalid status code");return new h(null,{status:e,headers:{location:t}})},t.Headers=o,t.Request=d,t.Response=h,t.fetch=function(t,e){return new Promise(function(n,r){function o(){return"responseURL"in i?i.responseURL:/^X-Request-URL:/m.test(i.getAllResponseHeaders())?i.getResponseHeader("X-Request-URL"):void 0}var s;s=d.prototype.isPrototypeOf(t)&&!e?t:new d(t,e);var i=new XMLHttpRequest;i.onload=function(){var t={status:i.status,statusText:i.statusText,headers:p(i),url:o()},e="response"in i?i.response:i.responseText;n(new h(e,t))},i.onerror=function(){r(new TypeError("Network request failed"))},i.ontimeout=function(){r(new TypeError("Network request failed"))},i.open(s.method,s.url,!0),"include"===s.credentials&&(i.withCredentials=!0),"responseType"in i&&g.blob&&(i.responseType="blob"),s.headers.forEach(function(t,e){i.setRequestHeader(e,t)}),i.send("undefined"==typeof s._bodyInit?null:s._bodyInit)})},t.fetch.polyfill=!0}}("undefined"!=typeof self?self:this)},function(t,e,n){"use strict";var r=n(5),o=n(113),s={focusDOMComponent:function(){o(r.getNodeFromInstance(this))}};t.exports=s},function(t,e,n){"use strict";function r(){var t=window.opera;return"object"==typeof t&&"function"==typeof t.version&&parseInt(t.version(),10)<=12}function o(t){return(t.ctrlKey||t.altKey||t.metaKey)&&!(t.ctrlKey&&t.altKey)}function s(t){switch(t){case C.topCompositionStart:return A.compositionStart;case C.topCompositionEnd:return A.compositionEnd;case C.topCompositionUpdate:return A.compositionUpdate}}function i(t,e){return t===C.topKeyDown&&e.keyCode===b}function a(t,e){switch(t){case C.topKeyUp:return v.indexOf(e.keyCode)!==-1;case C.topKeyDown:return e.keyCode!==b;case C.topKeyPress:case C.topMouseDown:case C.topBlur:return!0;default:return!1}}function c(t){var e=t.detail;return"object"==typeof e&&"data"in e?e.data:null}function u(t,e,n,r){var o,u;if(_?o=s(t):D?a(t,n)&&(o=A.compositionEnd):i(t,n)&&(o=A.compositionStart),!o)return null;T&&(D||o!==A.compositionStart?o===A.compositionEnd&&D&&(u=D.getData()):D=y.getPooled(r));var l=m.getPooled(o,e,n,r);if(u)l.data=u;else{var d=c(n);null!==d&&(l.data=d)}return h.accumulateTwoPhaseDispatches(l),l}function l(t,e){switch(t){case C.topCompositionEnd:return c(e);case C.topKeyPress:var n=e.which;return n!==E?null:(R=!0,S);case C.topTextInput:var r=e.data;return r===S&&R?null:r;default:return null}}function d(t,e){if(D){if(t===C.topCompositionEnd||a(t,e)){var n=D.getData();return y.release(D),D=null,n}return null}switch(t){case C.topPaste:return null;case C.topKeyPress:return e.which&&!o(e)?String.fromCharCode(e.which):null;case C.topCompositionEnd:return T?null:e.data;default:return null}}function f(t,e,n,r){var o;if(o=O?l(t,n):d(t,n),!o)return null;var s=k.getPooled(A.beforeInput,e,n,r);return s.data=o,h.accumulateTwoPhaseDispatches(s),s}var p=n(14),h=n(45),g=n(7),y=n(323),m=n(359),k=n(362),x=n(18),v=[9,13,27,32],b=229,_=g.canUseDOM&&"CompositionEvent"in window,w=null;g.canUseDOM&&"documentMode"in document&&(w=document.documentMode);var O=g.canUseDOM&&"TextEvent"in window&&!w&&!r(),T=g.canUseDOM&&(!_||w&&w>8&&w<=11),E=32,S=String.fromCharCode(E),C=p.topLevelTypes,A={beforeInput:{phasedRegistrationNames:{bubbled:x({onBeforeInput:null}),captured:x({onBeforeInputCapture:null})},dependencies:[C.topCompositionEnd,C.topKeyPress,C.topTextInput,C.topPaste]},compositionEnd:{phasedRegistrationNames:{bubbled:x({onCompositionEnd:null}),captured:x({onCompositionEndCapture:null})},dependencies:[C.topBlur,C.topCompositionEnd,C.topKeyDown,C.topKeyPress,C.topKeyUp,C.topMouseDown]},compositionStart:{phasedRegistrationNames:{bubbled:x({onCompositionStart:null}),captured:x({onCompositionStartCapture:null})},dependencies:[C.topBlur,C.topCompositionStart,C.topKeyDown,C.topKeyPress,C.topKeyUp,C.topMouseDown]},compositionUpdate:{phasedRegistrationNames:{bubbled:x({onCompositionUpdate:null}),captured:x({onCompositionUpdateCapture:null})},dependencies:[C.topBlur,C.topCompositionUpdate,C.topKeyDown,C.topKeyPress,C.topKeyUp,C.topMouseDown]}},R=!1,D=null,I={eventTypes:A,extractEvents:function(t,e,n,r){return[u(t,e,n,r),f(t,e,n,r)]}};t.exports=I},function(t,e,n){"use strict";var r=n(137),o=n(7),s=(n(8),n(201),n(369)),i=n(208),a=n(212),c=(n(3),a(function(t){return i(t)})),u=!1,l="cssFloat";if(o.canUseDOM){var d=document.createElement("div").style;try{d.font=""}catch(f){u=!0}void 0===document.documentElement.style.cssFloat&&(l="styleFloat")}var p={createMarkupForStyles:function(t,e){var n="";for(var r in t)if(t.hasOwnProperty(r)){var o=t[r];null!=o&&(n+=c(r)+":",n+=s(r,o,e)+";")}return n||null},setValueForStyles:function(t,e,n){var o=t.style;for(var i in e)if(e.hasOwnProperty(i)){var a=s(i,e[i],n);if("float"!==i&&"cssFloat"!==i||(i=l),a)o[i]=a;else{var c=u&&r.shorthandPropertyExpansions[i];if(c)for(var d in c)o[d]="";else o[i]=""}}}};t.exports=p},function(t,e,n){"use strict";function r(t){var e=t.nodeName&&t.nodeName.toLowerCase();return"select"===e||"input"===e&&"file"===t.type}function o(t){var e=O.getPooled(R.change,I,t,T(t));v.accumulateTwoPhaseDispatches(e),w.batchedUpdates(s,e)}function s(t){x.enqueueEvents(t),x.processEventQueue(!1)}function i(t,e){D=t,I=e,D.attachEvent("onchange",o)}function a(){D&&(D.detachEvent("onchange",o),D=null,I=null)}function c(t,e){if(t===A.topChange)return e}function u(t,e,n){t===A.topFocus?(a(),i(e,n)):t===A.topBlur&&a()}function l(t,e){D=t,I=e,M=t.value,K=Object.getOwnPropertyDescriptor(t.constructor.prototype,"value"),Object.defineProperty(D,"value",B),D.attachEvent?D.attachEvent("onpropertychange",f):D.addEventListener("propertychange",f,!1)}function d(){D&&(delete D.value,D.detachEvent?D.detachEvent("onpropertychange",f):D.removeEventListener("propertychange",f,!1),D=null,I=null,M=null,K=null)}function f(t){if("value"===t.propertyName){var e=t.srcElement.value;e!==M&&(M=e,o(t))}}function p(t,e){if(t===A.topInput)return e}function h(t,e,n){t===A.topFocus?(d(),l(e,n)):t===A.topBlur&&d()}function g(t,e){if((t===A.topSelectionChange||t===A.topKeyUp||t===A.topKeyDown)&&D&&D.value!==M)return M=D.value,I}function y(t){return t.nodeName&&"input"===t.nodeName.toLowerCase()&&("checkbox"===t.type||"radio"===t.type)}function m(t,e){if(t===A.topClick)return e}var k=n(14),x=n(44),v=n(45),b=n(7),_=n(5),w=n(12),O=n(15),T=n(99),E=n(101),S=n(165),C=n(18),A=k.topLevelTypes,R={change:{phasedRegistrationNames:{bubbled:C({onChange:null}),captured:C({onChangeCapture:null})},dependencies:[A.topBlur,A.topChange,A.topClick,A.topFocus,A.topInput,A.topKeyDown,A.topKeyUp,A.topSelectionChange]}},D=null,I=null,M=null,K=null,P=!1;b.canUseDOM&&(P=E("change")&&(!("documentMode"in document)||document.documentMode>8));var N=!1;b.canUseDOM&&(N=E("input")&&(!("documentMode"in document)||document.documentMode>11));var B={get:function(){return K.get.call(this)},set:function(t){M=""+t,K.set.call(this,t)}},j={eventTypes:R,extractEvents:function(t,e,n,o){var s,i,a=e?_.getNodeFromInstance(e):window;if(r(a)?P?s=c:i=u:S(a)?N?s=p:(s=g,i=h):y(a)&&(s=m),s){var l=s(t,e);if(l){var d=O.getPooled(R.change,l,n,o);return d.type="change",v.accumulateTwoPhaseDispatches(d),d}}i&&i(t,a,e)}};t.exports=j},function(t,e,n){"use strict";var r=n(2),o=n(33),s=n(7),i=n(204),a=n(10),c=(n(1),{dangerouslyReplaceNodeWithMarkup:function(t,e){if(s.canUseDOM?void 0:r("56"),e?void 0:r("57"),"HTML"===t.nodeName?r("58"):void 0,"string"==typeof e){var n=i(e,a)[0];t.parentNode.replaceChild(n,t)}else o.replaceChildWithTree(t,e)}});t.exports=c},function(t,e,n){"use strict";var r=n(18),o=[r({ResponderEventPlugin:null}),r({SimpleEventPlugin:null}),r({TapEventPlugin:null}),r({EnterLeaveEventPlugin:null}),r({ChangeEventPlugin:null}),r({SelectEventPlugin:null}),r({BeforeInputEventPlugin:null})];t.exports=o},function(t,e,n){"use strict";var r=n(14),o=n(45),s=n(5),i=n(62),a=n(18),c=r.topLevelTypes,u={mouseEnter:{registrationName:a({onMouseEnter:null}),dependencies:[c.topMouseOut,c.topMouseOver]},mouseLeave:{registrationName:a({onMouseLeave:null}),dependencies:[c.topMouseOut,c.topMouseOver]}},l={eventTypes:u,extractEvents:function(t,e,n,r){if(t===c.topMouseOver&&(n.relatedTarget||n.fromElement))return null;if(t!==c.topMouseOut&&t!==c.topMouseOver)return null;var a;if(r.window===r)a=r;else{var l=r.ownerDocument;a=l?l.defaultView||l.parentWindow:window}var d,f;if(t===c.topMouseOut){d=e;var p=n.relatedTarget||n.toElement;f=p?s.getClosestInstanceFromNode(p):null}else d=null,f=e;if(d===f)return null;var h=null==d?a:s.getNodeFromInstance(d),g=null==f?a:s.getNodeFromInstance(f),y=i.getPooled(u.mouseLeave,d,n,r);y.type="mouseleave",y.target=h,y.relatedTarget=g;var m=i.getPooled(u.mouseEnter,f,n,r);return m.type="mouseenter",m.target=g,m.relatedTarget=h,o.accumulateEnterLeaveDispatches(y,m,d,f),[y,m]}};t.exports=l},function(t,e,n){"use strict";function r(t){this._root=t,this._startText=this.getText(),this._fallbackText=null}var o=n(4),s=n(19),i=n(164);o(r.prototype,{destructor:function(){this._root=null,this._startText=null,this._fallbackText=null},getText:function(){return"value"in this._root?this._root.value:this._root[i()]},getData:function(){if(this._fallbackText)return this._fallbackText;var t,e,n=this._startText,r=n.length,o=this.getText(),s=o.length;for(t=0;t<r&&n[t]===o[t];t++);var i=r-t;for(e=1;e<=i&&n[r-e]===o[s-e];e++);var a=e>1?1-e:void 0;return this._fallbackText=o.slice(t,a),this._fallbackText}}),s.addPoolingTo(r),t.exports=r},function(t,e,n){"use strict";var r=n(34),o=r.injection.MUST_USE_PROPERTY,s=r.injection.HAS_BOOLEAN_VALUE,i=r.injection.HAS_NUMERIC_VALUE,a=r.injection.HAS_POSITIVE_NUMERIC_VALUE,c=r.injection.HAS_OVERLOADED_BOOLEAN_VALUE,u={isCustomAttribute:RegExp.prototype.test.bind(new RegExp("^(data|aria)-["+r.ATTRIBUTE_NAME_CHAR+"]*$")),Properties:{accept:0,acceptCharset:0,accessKey:0,action:0,allowFullScreen:s,allowTransparency:0,alt:0,async:s,autoComplete:0,autoPlay:s,capture:s,cellPadding:0,cellSpacing:0,charSet:0,challenge:0,checked:o|s,cite:0,classID:0,className:0,cols:a,colSpan:0,content:0,contentEditable:0,contextMenu:0,controls:s,coords:0,crossOrigin:0,data:0,dateTime:0,default:s,defer:s,dir:0,disabled:s,download:c,draggable:0,encType:0,form:0,formAction:0,formEncType:0,formMethod:0,formNoValidate:s,formTarget:0,frameBorder:0,headers:0,height:0,hidden:s,high:0,href:0,hrefLang:0,htmlFor:0,httpEquiv:0,icon:0,id:0,inputMode:0,integrity:0,is:0,keyParams:0,keyType:0,kind:0,label:0,lang:0,list:0,loop:s,low:0,manifest:0,marginHeight:0,marginWidth:0,max:0,maxLength:0,media:0,mediaGroup:0,method:0,min:0,minLength:0,multiple:o|s,muted:o|s,name:0,nonce:0,noValidate:s,open:s,optimum:0,pattern:0,placeholder:0,poster:0,preload:0,profile:0,radioGroup:0,readOnly:s,referrerPolicy:0,rel:0,required:s,reversed:s,role:0,rows:a,rowSpan:i,sandbox:0,scope:0,scoped:s,scrolling:0,seamless:s,selected:o|s,shape:0,size:a,sizes:0,span:a,spellCheck:0,src:0,srcDoc:0,srcLang:0,srcSet:0,start:i,step:0,style:0,summary:0,tabIndex:0,target:0,title:0,type:0,useMap:0,value:0,width:0,wmode:0,wrap:0,about:0,datatype:0,inlist:0,prefix:0,property:0,resource:0,typeof:0,vocab:0,autoCapitalize:0,autoCorrect:0,autoSave:0,color:0,itemProp:0,itemScope:s,itemType:0,itemID:0,itemRef:0,results:0,security:0,unselectable:0},DOMAttributeNames:{acceptCharset:"accept-charset",className:"class",htmlFor:"for",httpEquiv:"http-equiv"},DOMPropertyNames:{}};t.exports=u},function(t,e,n){"use strict";var r=n(4),o=n(140),s=n(86),i=n(348),a=n(141),c=n(332),u=n(11),l=n(156),d=n(95),f=n(375),p=(n(3),
u.createElement),h=u.createFactory,g=u.cloneElement,y=r,m={Children:{map:o.map,forEach:o.forEach,count:o.count,toArray:o.toArray,only:f},Component:s,PureComponent:i,createElement:p,cloneElement:g,isValidElement:u.isValidElement,PropTypes:l,createClass:a.createClass,createFactory:h,createMixin:function(t){return t},DOM:c,version:d,__spread:y};t.exports=m},function(t,e,n){(function(e){"use strict";function r(t,e,n,r){var o=void 0===t[n];null!=e&&o&&(t[n]=s(e,!0))}var o=n(26),s=n(100),i=(n(84),n(102)),a=n(103);n(3);"undefined"!=typeof e&&e.env,1;var c={instantiateChildren:function(t,e,n,o){if(null==t)return null;var s={};return a(t,r,s),s},updateChildren:function(t,e,n,r,a,c,u,l){if(e||t){var d,f;for(d in e)if(e.hasOwnProperty(d)){f=t&&t[d];var p=f&&f._currentElement,h=e[d];if(null!=f&&i(p,h))o.receiveComponent(f,h,a,l),e[d]=f;else{f&&(r[d]=o.getHostNode(f),o.unmountComponent(f,!1));var g=s(h,!0);e[d]=g;var y=o.mountComponent(g,a,c,u,l);n.push(y)}}for(d in t)!t.hasOwnProperty(d)||e&&e.hasOwnProperty(d)||(f=t[d],r[d]=o.getHostNode(f),o.unmountComponent(f,!1))}},unmountChildren:function(t,e){for(var n in t)if(t.hasOwnProperty(n)){var r=t[n];o.unmountComponent(r,e)}}};t.exports=c}).call(e,n(13))},function(t,e,n){"use strict";function r(t){}function o(t,e){}function s(t){return!(!t.prototype||!t.prototype.isReactComponent)}function i(t){return!(!t.prototype||!t.prototype.isPureReactComponent)}var a=n(2),c=n(4),u=n(87),l=n(20),d=n(11),f=n(89),p=n(46),h=(n(8),n(155)),g=(n(92),n(26)),y=n(368),m=n(29),k=(n(1),n(71)),x=n(102),v=(n(3),{ImpureClass:0,PureClass:1,StatelessFunctional:2});r.prototype.render=function(){var t=p.get(this)._currentElement.type,e=t(this.props,this.context,this.updater);return o(t,e),e};var b=1,_={construct:function(t){this._currentElement=t,this._rootNodeID=null,this._compositeType=null,this._instance=null,this._hostParent=null,this._hostContainerInfo=null,this._updateBatchNumber=null,this._pendingElement=null,this._pendingStateQueue=null,this._pendingReplaceState=!1,this._pendingForceUpdate=!1,this._renderedNodeType=null,this._renderedComponent=null,this._context=null,this._mountOrder=0,this._topLevelWrapper=null,this._pendingCallbacks=null,this._calledComponentWillUnmount=!1},mountComponent:function(t,e,n,c){this._context=c,this._mountOrder=b++,this._hostParent=e,this._hostContainerInfo=n;var u,l=this._currentElement.props,f=this._processContext(c),h=this._currentElement.type,g=t.getUpdateQueue(),y=s(h),k=this._constructComponent(y,l,f,g);y||null!=k&&null!=k.render?i(h)?this._compositeType=v.PureClass:this._compositeType=v.ImpureClass:(u=k,o(h,u),null===k||k===!1||d.isValidElement(k)?void 0:a("105",h.displayName||h.name||"Component"),k=new r(h),this._compositeType=v.StatelessFunctional);k.props=l,k.context=f,k.refs=m,k.updater=g,this._instance=k,p.set(k,this);var x=k.state;void 0===x&&(k.state=x=null),"object"!=typeof x||Array.isArray(x)?a("106",this.getName()||"ReactCompositeComponent"):void 0,this._pendingStateQueue=null,this._pendingReplaceState=!1,this._pendingForceUpdate=!1;var _;_=k.unstable_handleError?this.performInitialMountWithErrorHandling(u,e,n,t,c):this.performInitialMount(u,e,n,t,c),k.componentDidMount&&t.getReactMountReady().enqueue(k.componentDidMount,k);return _},_constructComponent:function(t,e,n,r){return this._constructComponentWithoutOwner(t,e,n,r)},_constructComponentWithoutOwner:function(t,e,n,r){var o,s=this._currentElement.type;return o=t?new s(e,n,r):s(e,n,r)},performInitialMountWithErrorHandling:function(t,e,n,r,o){var s,i=r.checkpoint();try{s=this.performInitialMount(t,e,n,r,o)}catch(a){r.rollback(i),this._instance.unstable_handleError(a),this._pendingStateQueue&&(this._instance.state=this._processPendingState(this._instance.props,this._instance.context)),i=r.checkpoint(),this._renderedComponent.unmountComponent(!0),r.rollback(i),s=this.performInitialMount(t,e,n,r,o)}return s},performInitialMount:function(t,e,n,r,o){var s=this._instance;s.componentWillMount&&(s.componentWillMount(),this._pendingStateQueue&&(s.state=this._processPendingState(s.props,s.context))),void 0===t&&(t=this._renderValidatedComponent());var i=h.getType(t);this._renderedNodeType=i;var a=this._instantiateReactComponent(t,i!==h.EMPTY);this._renderedComponent=a;var c=g.mountComponent(a,r,e,n,this._processChildContext(o));return c},getHostNode:function(){return g.getHostNode(this._renderedComponent)},unmountComponent:function(t){if(this._renderedComponent){var e=this._instance;if(e.componentWillUnmount&&!e._calledComponentWillUnmount)if(e._calledComponentWillUnmount=!0,t){var n=this.getName()+".componentWillUnmount()";f.invokeGuardedCallback(n,e.componentWillUnmount.bind(e))}else e.componentWillUnmount();this._renderedComponent&&(g.unmountComponent(this._renderedComponent,t),this._renderedNodeType=null,this._renderedComponent=null,this._instance=null),this._pendingStateQueue=null,this._pendingReplaceState=!1,this._pendingForceUpdate=!1,this._pendingCallbacks=null,this._pendingElement=null,this._context=null,this._rootNodeID=null,this._topLevelWrapper=null,p.remove(e)}},_maskContext:function(t){var e=this._currentElement.type,n=e.contextTypes;if(!n)return m;var r={};for(var o in n)r[o]=t[o];return r},_processContext:function(t){var e=this._maskContext(t);return e},_processChildContext:function(t){var e=this._currentElement.type,n=this._instance,r=n.getChildContext&&n.getChildContext();if(r){"object"!=typeof e.childContextTypes?a("107",this.getName()||"ReactCompositeComponent"):void 0;for(var o in r)o in e.childContextTypes?void 0:a("108",this.getName()||"ReactCompositeComponent",o);return c({},t,r)}return t},_checkContextTypes:function(t,e,n){y(t,e,n,this.getName(),null,this._debugID)},receiveComponent:function(t,e,n){var r=this._currentElement,o=this._context;this._pendingElement=null,this.updateComponent(e,r,t,o,n)},performUpdateIfNecessary:function(t){null!=this._pendingElement?g.receiveComponent(this,this._pendingElement,t,this._context):null!==this._pendingStateQueue||this._pendingForceUpdate?this.updateComponent(t,this._currentElement,this._currentElement,this._context,this._context):this._updateBatchNumber=null},updateComponent:function(t,e,n,r,o){var s=this._instance;null==s?a("136",this.getName()||"ReactCompositeComponent"):void 0;var i,c=!1;this._context===o?i=s.context:(i=this._processContext(o),c=!0);var u=e.props,l=n.props;e!==n&&(c=!0),c&&s.componentWillReceiveProps&&s.componentWillReceiveProps(l,i);var d=this._processPendingState(l,i),f=!0;this._pendingForceUpdate||(s.shouldComponentUpdate?f=s.shouldComponentUpdate(l,d,i):this._compositeType===v.PureClass&&(f=!k(u,l)||!k(s.state,d))),this._updateBatchNumber=null,f?(this._pendingForceUpdate=!1,this._performComponentUpdate(n,l,d,i,t,o)):(this._currentElement=n,this._context=o,s.props=l,s.state=d,s.context=i)},_processPendingState:function(t,e){var n=this._instance,r=this._pendingStateQueue,o=this._pendingReplaceState;if(this._pendingReplaceState=!1,this._pendingStateQueue=null,!r)return n.state;if(o&&1===r.length)return r[0];for(var s=c({},o?r[0]:n.state),i=o?1:0;i<r.length;i++){var a=r[i];c(s,"function"==typeof a?a.call(n,s,t,e):a)}return s},_performComponentUpdate:function(t,e,n,r,o,s){var i,a,c,u=this._instance,l=Boolean(u.componentDidUpdate);l&&(i=u.props,a=u.state,c=u.context),u.componentWillUpdate&&u.componentWillUpdate(e,n,r),this._currentElement=t,this._context=s,u.props=e,u.state=n,u.context=r,this._updateRenderedComponent(o,s),l&&o.getReactMountReady().enqueue(u.componentDidUpdate.bind(u,i,a,c),u)},_updateRenderedComponent:function(t,e){var n=this._renderedComponent,r=n._currentElement,o=this._renderValidatedComponent();if(x(r,o))g.receiveComponent(n,o,t,this._processChildContext(e));else{var s=g.getHostNode(n);g.unmountComponent(n,!1);var i=h.getType(o);this._renderedNodeType=i;var a=this._instantiateReactComponent(o,i!==h.EMPTY);this._renderedComponent=a;var c=g.mountComponent(a,t,this._hostParent,this._hostContainerInfo,this._processChildContext(e));this._replaceNodeWithMarkup(s,c,n)}},_replaceNodeWithMarkup:function(t,e,n){u.replaceNodeWithMarkup(t,e,n)},_renderValidatedComponentWithoutOwnerOrContext:function(){var t=this._instance,e=t.render();return e},_renderValidatedComponent:function(){var t;if(this._compositeType!==v.StatelessFunctional){l.current=this;try{t=this._renderValidatedComponentWithoutOwnerOrContext()}finally{l.current=null}}else t=this._renderValidatedComponentWithoutOwnerOrContext();return null===t||t===!1||d.isValidElement(t)?void 0:a("109",this.getName()||"ReactCompositeComponent"),t},attachRef:function(t,e){var n=this.getPublicInstance();null==n?a("110"):void 0;var r=e.getPublicInstance(),o=n.refs===m?n.refs={}:n.refs;o[t]=r},detachRef:function(t){var e=this.getPublicInstance().refs;delete e[t]},getName:function(){var t=this._currentElement.type,e=this._instance&&this._instance.constructor;return t.displayName||e&&e.displayName||t.name||e&&e.name||null},getPublicInstance:function(){var t=this._instance;return this._compositeType===v.StatelessFunctional?null:t},_instantiateReactComponent:null},w={Mixin:_};t.exports=w},function(t,e,n){"use strict";var r=n(5),o=n(147),s=n(153),i=n(26),a=n(12),c=n(95),u=n(370),l=n(162),d=n(377);n(3);o.inject();var f={findDOMNode:u,render:s.render,unmountComponentAtNode:s.unmountComponentAtNode,version:c,unstable_batchedUpdates:a.batchedUpdates,unstable_renderSubtreeIntoContainer:d};"undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject&&__REACT_DEVTOOLS_GLOBAL_HOOK__.inject({ComponentTree:{getClosestInstanceFromNode:r.getClosestInstanceFromNode,getNodeFromInstance:function(t){return t._renderedComponent&&(t=l(t)),t?r.getNodeFromInstance(t):null}},Mount:s,Reconciler:i});t.exports=f},function(t,e,n){"use strict";var r=n(60),o={getHostProps:r.getHostProps};t.exports=o},function(t,e,n){"use strict";function r(t){if(t){var e=t._currentElement._owner||null;if(e){var n=e.getName();if(n)return" This DOM node was rendered by `"+n+"`."}}return""}function o(t,e){e&&(Q[t._tag]&&(null!=e.children||null!=e.dangerouslySetInnerHTML?g("137",t._tag,t._currentElement._owner?" Check the render method of "+t._currentElement._owner.getName()+".":""):void 0),null!=e.dangerouslySetInnerHTML&&(null!=e.children?g("60"):void 0,"object"==typeof e.dangerouslySetInnerHTML&&H in e.dangerouslySetInnerHTML?void 0:g("61")),null!=e.style&&"object"!=typeof e.style?g("62",r(t)):void 0)}function s(t,e,n,r){if(!(r instanceof N)){var o=t._hostContainerInfo,s=o._node&&o._node.nodeType===Y,a=s?o._node:o._ownerDocument;U(e,a),r.getReactMountReady().enqueue(i,{inst:t,registrationName:e,listener:n})}}function i(){var t=this;O.putListener(t.inst,t.registrationName,t.listener)}function a(){var t=this;D.postMountWrapper(t)}function c(){var t=this;K.postMountWrapper(t)}function u(){var t=this;I.postMountWrapper(t)}function l(){var t=this;t._rootNodeID?void 0:g("63");var e=F(t);switch(e?void 0:g("64"),t._tag){case"iframe":case"object":t._wrapperState.listeners=[E.trapBubbledEvent(w.topLevelTypes.topLoad,"load",e)];break;case"video":case"audio":t._wrapperState.listeners=[];for(var n in G)G.hasOwnProperty(n)&&t._wrapperState.listeners.push(E.trapBubbledEvent(w.topLevelTypes[n],G[n],e));break;case"source":t._wrapperState.listeners=[E.trapBubbledEvent(w.topLevelTypes.topError,"error",e)];break;case"img":t._wrapperState.listeners=[E.trapBubbledEvent(w.topLevelTypes.topError,"error",e),E.trapBubbledEvent(w.topLevelTypes.topLoad,"load",e)];break;case"form":t._wrapperState.listeners=[E.trapBubbledEvent(w.topLevelTypes.topReset,"reset",e),E.trapBubbledEvent(w.topLevelTypes.topSubmit,"submit",e)];break;case"input":case"select":case"textarea":t._wrapperState.listeners=[E.trapBubbledEvent(w.topLevelTypes.topInvalid,"invalid",e)]}}function d(){M.postUpdateWrapper(this)}function f(t){et.call(tt,t)||(Z.test(t)?void 0:g("65",t),tt[t]=!0)}function p(t,e){return t.indexOf("-")>=0||null!=e.is}function h(t){var e=t.type;f(e),this._currentElement=t,this._tag=e.toLowerCase(),this._namespaceURI=null,this._renderedChildren=null,this._previousStyle=null,this._previousStyleCopy=null,this._hostNode=null,this._hostParent=null,this._rootNodeID=null,this._domID=null,this._hostContainerInfo=null,this._wrapperState=null,this._topLevelWrapper=null,this._flags=0}var g=n(2),y=n(4),m=n(316),k=n(318),x=n(33),v=n(81),b=n(34),_=n(139),w=n(14),O=n(44),T=n(82),E=n(61),S=n(142),C=n(329),A=n(143),R=n(5),D=n(335),I=n(337),M=n(145),K=n(341),P=(n(8),n(346)),N=n(157),B=(n(10),n(63)),j=(n(1),n(101),n(18)),q=(n(71),n(104),n(3),A),L=O.deleteListener,F=R.getNodeFromInstance,U=E.listenTo,z=T.registrationNameModules,J={string:!0,number:!0},V=j({style:null}),H=j({__html:null}),W={children:null,dangerouslySetInnerHTML:null,suppressContentEditableWarning:null},Y=11,G={topAbort:"abort",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topLoadedData:"loadeddata",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topSeeked:"seeked",topSeeking:"seeking",topStalled:"stalled",topSuspend:"suspend",topTimeUpdate:"timeupdate",topVolumeChange:"volumechange",topWaiting:"waiting"},$={area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0},X={listing:!0,pre:!0,textarea:!0},Q=y({menuitem:!0},$),Z=/^[a-zA-Z][a-zA-Z:_\.\-\d]*$/,tt={},et={}.hasOwnProperty,nt=1;h.displayName="ReactDOMComponent",h.Mixin={mountComponent:function(t,e,n,r){this._rootNodeID=nt++,this._domID=n._idCounter++,this._hostParent=e,this._hostContainerInfo=n;var s=this._currentElement.props;switch(this._tag){case"audio":case"form":case"iframe":case"img":case"link":case"object":case"source":case"video":this._wrapperState={listeners:null},t.getReactMountReady().enqueue(l,this);break;case"button":s=C.getHostProps(this,s,e);break;case"input":D.mountWrapper(this,s,e),s=D.getHostProps(this,s),t.getReactMountReady().enqueue(l,this);break;case"option":I.mountWrapper(this,s,e),s=I.getHostProps(this,s);break;case"select":M.mountWrapper(this,s,e),s=M.getHostProps(this,s),t.getReactMountReady().enqueue(l,this);break;case"textarea":K.mountWrapper(this,s,e),s=K.getHostProps(this,s),t.getReactMountReady().enqueue(l,this)}o(this,s);var i,d;null!=e?(i=e._namespaceURI,d=e._tag):n._tag&&(i=n._namespaceURI,d=n._tag),(null==i||i===v.svg&&"foreignobject"===d)&&(i=v.html),i===v.html&&("svg"===this._tag?i=v.svg:"math"===this._tag&&(i=v.mathml)),this._namespaceURI=i;var f;if(t.useCreateElement){var p,h=n._ownerDocument;if(i===v.html)if("script"===this._tag){var g=h.createElement("div"),y=this._currentElement.type;g.innerHTML="<"+y+"></"+y+">",p=g.removeChild(g.firstChild)}else p=s.is?h.createElement(this._currentElement.type,s.is):h.createElement(this._currentElement.type);else p=h.createElementNS(i,this._currentElement.type);R.precacheNode(this,p),this._flags|=q.hasCachedChildNodes,this._hostParent||_.setAttributeForRoot(p),this._updateDOMProperties(null,s,t);var k=x(p);this._createInitialChildren(t,s,r,k),f=k}else{var b=this._createOpenTagMarkupAndPutListeners(t,s),w=this._createContentMarkup(t,s,r);f=!w&&$[this._tag]?b+"/>":b+">"+w+"</"+this._currentElement.type+">"}switch(this._tag){case"input":t.getReactMountReady().enqueue(a,this),s.autoFocus&&t.getReactMountReady().enqueue(m.focusDOMComponent,this);break;case"textarea":t.getReactMountReady().enqueue(c,this),s.autoFocus&&t.getReactMountReady().enqueue(m.focusDOMComponent,this);break;case"select":s.autoFocus&&t.getReactMountReady().enqueue(m.focusDOMComponent,this);break;case"button":s.autoFocus&&t.getReactMountReady().enqueue(m.focusDOMComponent,this);break;case"option":t.getReactMountReady().enqueue(u,this)}return f},_createOpenTagMarkupAndPutListeners:function(t,e){var n="<"+this._currentElement.type;for(var r in e)if(e.hasOwnProperty(r)){var o=e[r];if(null!=o)if(z.hasOwnProperty(r))o&&s(this,r,o,t);else{r===V&&(o&&(o=this._previousStyleCopy=y({},e.style)),o=k.createMarkupForStyles(o,this));var i=null;null!=this._tag&&p(this._tag,e)?W.hasOwnProperty(r)||(i=_.createMarkupForCustomAttribute(r,o)):i=_.createMarkupForProperty(r,o),i&&(n+=" "+i)}}return t.renderToStaticMarkup?n:(this._hostParent||(n+=" "+_.createMarkupForRoot()),n+=" "+_.createMarkupForID(this._domID))},_createContentMarkup:function(t,e,n){var r="",o=e.dangerouslySetInnerHTML;if(null!=o)null!=o.__html&&(r=o.__html);else{var s=J[typeof e.children]?e.children:null,i=null!=s?null:e.children;if(null!=s)r=B(s);else if(null!=i){var a=this.mountChildren(i,t,n);r=a.join("")}}return X[this._tag]&&"\n"===r.charAt(0)?"\n"+r:r},_createInitialChildren:function(t,e,n,r){var o=e.dangerouslySetInnerHTML;if(null!=o)null!=o.__html&&x.queueHTML(r,o.__html);else{var s=J[typeof e.children]?e.children:null,i=null!=s?null:e.children;if(null!=s)x.queueText(r,s);else if(null!=i)for(var a=this.mountChildren(i,t,n),c=0;c<a.length;c++)x.queueChild(r,a[c])}},receiveComponent:function(t,e,n){var r=this._currentElement;this._currentElement=t,this.updateComponent(e,r,t,n)},updateComponent:function(t,e,n,r){var s=e.props,i=this._currentElement.props;switch(this._tag){case"button":s=C.getHostProps(this,s),i=C.getHostProps(this,i);break;case"input":D.updateWrapper(this),s=D.getHostProps(this,s),i=D.getHostProps(this,i);break;case"option":s=I.getHostProps(this,s),i=I.getHostProps(this,i);break;case"select":s=M.getHostProps(this,s),i=M.getHostProps(this,i);break;case"textarea":K.updateWrapper(this),s=K.getHostProps(this,s),i=K.getHostProps(this,i)}o(this,i),this._updateDOMProperties(s,i,t),this._updateDOMChildren(s,i,t,r),"select"===this._tag&&t.getReactMountReady().enqueue(d,this)},_updateDOMProperties:function(t,e,n){var r,o,i;for(r in t)if(!e.hasOwnProperty(r)&&t.hasOwnProperty(r)&&null!=t[r])if(r===V){var a=this._previousStyleCopy;for(o in a)a.hasOwnProperty(o)&&(i=i||{},i[o]="");this._previousStyleCopy=null}else z.hasOwnProperty(r)?t[r]&&L(this,r):p(this._tag,t)?W.hasOwnProperty(r)||_.deleteValueForAttribute(F(this),r):(b.properties[r]||b.isCustomAttribute(r))&&_.deleteValueForProperty(F(this),r);for(r in e){var c=e[r],u=r===V?this._previousStyleCopy:null!=t?t[r]:void 0;if(e.hasOwnProperty(r)&&c!==u&&(null!=c||null!=u))if(r===V)if(c?c=this._previousStyleCopy=y({},c):this._previousStyleCopy=null,u){for(o in u)!u.hasOwnProperty(o)||c&&c.hasOwnProperty(o)||(i=i||{},i[o]="");for(o in c)c.hasOwnProperty(o)&&u[o]!==c[o]&&(i=i||{},i[o]=c[o])}else i=c;else if(z.hasOwnProperty(r))c?s(this,r,c,n):u&&L(this,r);else if(p(this._tag,e))W.hasOwnProperty(r)||_.setValueForAttribute(F(this),r,c);else if(b.properties[r]||b.isCustomAttribute(r)){var l=F(this);null!=c?_.setValueForProperty(l,r,c):_.deleteValueForProperty(l,r)}}i&&k.setValueForStyles(F(this),i,this)},_updateDOMChildren:function(t,e,n,r){var o=J[typeof t.children]?t.children:null,s=J[typeof e.children]?e.children:null,i=t.dangerouslySetInnerHTML&&t.dangerouslySetInnerHTML.__html,a=e.dangerouslySetInnerHTML&&e.dangerouslySetInnerHTML.__html,c=null!=o?null:t.children,u=null!=s?null:e.children,l=null!=o||null!=i,d=null!=s||null!=a;null!=c&&null==u?this.updateChildren(null,n,r):l&&!d&&this.updateTextContent(""),null!=s?o!==s&&this.updateTextContent(""+s):null!=a?i!==a&&this.updateMarkup(""+a):null!=u&&this.updateChildren(u,n,r)},getHostNode:function(){return F(this)},unmountComponent:function(t){switch(this._tag){case"audio":case"form":case"iframe":case"img":case"link":case"object":case"source":case"video":var e=this._wrapperState.listeners;if(e)for(var n=0;n<e.length;n++)e[n].remove();break;case"html":case"head":case"body":g("66",this._tag)}this.unmountChildren(t),R.uncacheNode(this),O.deleteAllListeners(this),S.unmountIDFromEnvironment(this._rootNodeID),this._rootNodeID=null,this._domID=null,this._wrapperState=null},getPublicInstance:function(){return F(this)}},y(h.prototype,h.Mixin,P.Mixin),t.exports=h},function(t,e,n){"use strict";var r=n(4),o=n(33),s=n(5),i=function(t){this._currentElement=null,this._hostNode=null,this._hostParent=null,this._hostContainerInfo=null,this._domID=null};r(i.prototype,{mountComponent:function(t,e,n,r){var i=n._idCounter++;this._domID=i,this._hostParent=e,this._hostContainerInfo=n;var a=" react-empty: "+this._domID+" ";if(t.useCreateElement){var c=n._ownerDocument,u=c.createComment(a);return s.precacheNode(this,u),o(u)}return t.renderToStaticMarkup?"":"<!--"+a+"-->"},receiveComponent:function(){},getHostNode:function(){return s.getNodeFromInstance(this)},unmountComponent:function(){s.uncacheNode(this)}}),t.exports=i},function(t,e,n){"use strict";function r(t){return o.createFactory(t)}var o=n(11),s=n(211),i=s({a:"a",abbr:"abbr",address:"address",area:"area",article:"article",aside:"aside",audio:"audio",b:"b",base:"base",bdi:"bdi",bdo:"bdo",big:"big",blockquote:"blockquote",body:"body",br:"br",button:"button",canvas:"canvas",caption:"caption",cite:"cite",code:"code",col:"col",colgroup:"colgroup",data:"data",datalist:"datalist",dd:"dd",del:"del",details:"details",dfn:"dfn",dialog:"dialog",div:"div",dl:"dl",dt:"dt",em:"em",embed:"embed",fieldset:"fieldset",figcaption:"figcaption",figure:"figure",footer:"footer",form:"form",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",h6:"h6",head:"head",header:"header",hgroup:"hgroup",hr:"hr",html:"html",i:"i",iframe:"iframe",img:"img",input:"input",ins:"ins",kbd:"kbd",keygen:"keygen",label:"label",legend:"legend",li:"li",link:"link",main:"main",map:"map",mark:"mark",menu:"menu",menuitem:"menuitem",meta:"meta",meter:"meter",nav:"nav",noscript:"noscript",object:"object",ol:"ol",optgroup:"optgroup",option:"option",output:"output",p:"p",param:"param",picture:"picture",pre:"pre",progress:"progress",q:"q",rp:"rp",rt:"rt",ruby:"ruby",s:"s",samp:"samp",script:"script",section:"section",select:"select",small:"small",source:"source",span:"span",strong:"strong",style:"style",sub:"sub",summary:"summary",sup:"sup",table:"table",tbody:"tbody",td:"td",textarea:"textarea",tfoot:"tfoot",th:"th",thead:"thead",time:"time",title:"title",tr:"tr",track:"track",u:"u",ul:"ul",var:"var",video:"video",wbr:"wbr",circle:"circle",clipPath:"clipPath",defs:"defs",ellipse:"ellipse",g:"g",image:"image",line:"line",linearGradient:"linearGradient",mask:"mask",path:"path",pattern:"pattern",polygon:"polygon",polyline:"polyline",radialGradient:"radialGradient",rect:"rect",stop:"stop",svg:"svg",text:"text",tspan:"tspan"},r);t.exports=i},function(t,e){"use strict";var n={useCreateElement:!0};t.exports=n},function(t,e,n){"use strict";var r=n(80),o=n(5),s={dangerouslyProcessChildrenUpdates:function(t,e){var n=o.getNodeFromInstance(t);r.processUpdates(n,e)}};t.exports=s},function(t,e,n){"use strict";function r(){this._rootNodeID&&f.updateWrapper(this)}function o(t){var e=this._currentElement.props,n=u.executeOnChange(e,t);d.asap(r,this);var o=e.name;if("radio"===e.type&&null!=o){for(var i=l.getNodeFromInstance(this),a=i;a.parentNode;)a=a.parentNode;for(var c=a.querySelectorAll("input[name="+JSON.stringify(""+o)+'][type="radio"]'),f=0;f<c.length;f++){var p=c[f];if(p!==i&&p.form===i.form){var h=l.getInstanceFromNode(p);h?void 0:s("90"),d.asap(r,h)}}}return n}var s=n(2),i=n(4),a=n(60),c=n(139),u=n(85),l=n(5),d=n(12),f=(n(1),n(3),{getHostProps:function(t,e){var n=u.getValue(e),r=u.getChecked(e),o=i({type:void 0,step:void 0},a.getHostProps(t,e),{defaultChecked:void 0,defaultValue:void 0,value:null!=n?n:t._wrapperState.initialValue,checked:null!=r?r:t._wrapperState.initialChecked,onChange:t._wrapperState.onChange});return o},mountWrapper:function(t,e){var n=e.defaultValue;t._wrapperState={initialChecked:null!=e.checked?e.checked:e.defaultChecked,initialValue:null!=e.value?e.value:n,listeners:null,onChange:o.bind(t)}},updateWrapper:function(t){var e=t._currentElement.props,n=e.checked;null!=n&&c.setValueForProperty(l.getNodeFromInstance(t),"checked",n||!1);var r=l.getNodeFromInstance(t),o=u.getValue(e);if(null!=o){var s=""+o;s!==r.value&&(r.value=s)}else null==e.value&&null!=e.defaultValue&&(r.defaultValue=""+e.defaultValue),null==e.checked&&null!=e.defaultChecked&&(r.defaultChecked=!!e.defaultChecked)},postMountWrapper:function(t){var e=t._currentElement.props,n=l.getNodeFromInstance(t);"submit"!==e.type&&"reset"!==e.type&&(n.value=n.value);var r=n.name;""!==r&&(n.name=""),n.defaultChecked=!n.defaultChecked,n.defaultChecked=!n.defaultChecked,""!==r&&(n.name=r)}});t.exports=f},function(t,e,n){"use strict";var r=null;t.exports={debugTool:r}},function(t,e,n){"use strict";function r(t){var e="";return s.forEach(t,function(t){null!=t&&("string"==typeof t||"number"==typeof t?e+=t:c||(c=!0))}),e}var o=n(4),s=n(140),i=n(5),a=n(145),c=(n(3),!1),u={mountWrapper:function(t,e,n){var o=null;if(null!=n){var s=n;"optgroup"===s._tag&&(s=s._hostParent),null!=s&&"select"===s._tag&&(o=a.getSelectValueContext(s))}var i=null;if(null!=o){var c;if(c=null!=e.value?e.value+"":r(e.children),i=!1,Array.isArray(o)){for(var u=0;u<o.length;u++)if(""+o[u]===c){i=!0;break}}else i=""+o===c}t._wrapperState={selected:i}},postMountWrapper:function(t){var e=t._currentElement.props;if(null!=e.value){var n=i.getNodeFromInstance(t);n.setAttribute("value",e.value)}},getHostProps:function(t,e){var n=o({selected:void 0,children:void 0},e);null!=t._wrapperState.selected&&(n.selected=t._wrapperState.selected);var s=r(e.children);return s&&(n.children=s),n}};t.exports=u},function(t,e,n){"use strict";function r(t,e,n,r){return t===n&&e===r}function o(t){var e=document.selection,n=e.createRange(),r=n.text.length,o=n.duplicate();o.moveToElementText(t),o.setEndPoint("EndToStart",n);var s=o.text.length,i=s+r;return{start:s,end:i}}function s(t){var e=window.getSelection&&window.getSelection();if(!e||0===e.rangeCount)return null;var n=e.anchorNode,o=e.anchorOffset,s=e.focusNode,i=e.focusOffset,a=e.getRangeAt(0);try{a.startContainer.nodeType,a.endContainer.nodeType}catch(c){return null}var u=r(e.anchorNode,e.anchorOffset,e.focusNode,e.focusOffset),l=u?0:a.toString().length,d=a.cloneRange();d.selectNodeContents(t),d.setEnd(a.startContainer,a.startOffset);var f=r(d.startContainer,d.startOffset,d.endContainer,d.endOffset),p=f?0:d.toString().length,h=p+l,g=document.createRange();g.setStart(n,o),g.setEnd(s,i);var y=g.collapsed;return{start:y?h:p,end:y?p:h}}function i(t,e){var n,r,o=document.selection.createRange().duplicate();void 0===e.end?(n=e.start,r=n):e.start>e.end?(n=e.end,r=e.start):(n=e.start,r=e.end),o.moveToElementText(t),o.moveStart("character",n),o.setEndPoint("EndToStart",o),o.moveEnd("character",r-n),o.select()}function a(t,e){if(window.getSelection){var n=window.getSelection(),r=t[l()].length,o=Math.min(e.start,r),s=void 0===e.end?o:Math.min(e.end,r);if(!n.extend&&o>s){var i=s;s=o,o=i}var a=u(t,o),c=u(t,s);if(a&&c){var d=document.createRange();d.setStart(a.node,a.offset),n.removeAllRanges(),o>s?(n.addRange(d),n.extend(c.node,c.offset)):(d.setEnd(c.node,c.offset),n.addRange(d))}}}var c=n(7),u=n(373),l=n(164),d=c.canUseDOM&&"selection"in document&&!("getSelection"in window),f={getOffsets:d?o:s,setOffsets:d?i:a};t.exports=f},function(t,e,n){"use strict";var r=n(147),o=n(352),s=n(95);r.inject();var i={renderToString:o.renderToString,renderToStaticMarkup:o.renderToStaticMarkup,version:s};t.exports=i},function(t,e,n){"use strict";var r=n(2),o=n(4),s=n(80),i=n(33),a=n(5),c=(n(8),n(63)),u=(n(1),n(104),function(t){this._currentElement=t,this._stringText=""+t,this._hostNode=null,this._hostParent=null,this._domID=null,this._mountIndex=0,this._closingComment=null,this._commentNodes=null});o(u.prototype,{mountComponent:function(t,e,n,r){var o=n._idCounter++,s=" react-text: "+o+" ",u=" /react-text ";if(this._domID=o,this._hostParent=e,t.useCreateElement){var l=n._ownerDocument,d=l.createComment(s),f=l.createComment(u),p=i(l.createDocumentFragment());return i.queueChild(p,i(d)),this._stringText&&i.queueChild(p,i(l.createTextNode(this._stringText))),i.queueChild(p,i(f)),a.precacheNode(this,d),this._closingComment=f,p}var h=c(this._stringText);return t.renderToStaticMarkup?h:"<!--"+s+"-->"+h+"<!--"+u+"-->"},receiveComponent:function(t,e){if(t!==this._currentElement){this._currentElement=t;var n=""+t;if(n!==this._stringText){this._stringText=n;var r=this.getHostNode();s.replaceDelimitedText(r[0],r[1],n)}}},getHostNode:function(){var t=this._commentNodes;if(t)return t;if(!this._closingComment)for(var e=a.getNodeFromInstance(this),n=e.nextSibling;;){if(null==n?r("67",this._domID):void 0,8===n.nodeType&&" /react-text "===n.nodeValue){this._closingComment=n;break}n=n.nextSibling}return t=[this._hostNode,this._closingComment],this._commentNodes=t,t},unmountComponent:function(){this._closingComment=null,this._commentNodes=null,a.uncacheNode(this)}}),t.exports=u},function(t,e,n){"use strict";function r(){this._rootNodeID&&d.updateWrapper(this)}function o(t){var e=this._currentElement.props,n=c.executeOnChange(e,t);return l.asap(r,this),n}var s=n(2),i=n(4),a=n(60),c=n(85),u=n(5),l=n(12),d=(n(1),n(3),{getHostProps:function(t,e){null!=e.dangerouslySetInnerHTML?s("91"):void 0;var n=i({},a.getHostProps(t,e),{value:void 0,defaultValue:void 0,children:""+t._wrapperState.initialValue,onChange:t._wrapperState.onChange});return n},mountWrapper:function(t,e){var n=c.getValue(e),r=n;if(null==n){var i=e.defaultValue,a=e.children;null!=a&&(null!=i?s("92"):void 0,Array.isArray(a)&&(a.length<=1?void 0:s("93"),a=a[0]),i=""+a),null==i&&(i=""),r=i}t._wrapperState={initialValue:""+r,listeners:null,onChange:o.bind(t)}},updateWrapper:function(t){var e=t._currentElement.props,n=u.getNodeFromInstance(t),r=c.getValue(e);if(null!=r){var o=""+r;o!==n.value&&(n.value=o),null==e.defaultValue&&(n.defaultValue=o)}null!=e.defaultValue&&(n.defaultValue=e.defaultValue)},postMountWrapper:function(t){var e=u.getNodeFromInstance(t);e.value=e.textContent}});t.exports=d},function(t,e,n){"use strict";function r(t,e){"_hostNode"in t?void 0:c("33"),"_hostNode"in e?void 0:c("33");for(var n=0,r=t;r;r=r._hostParent)n++;for(var o=0,s=e;s;s=s._hostParent)o++;for(;n-o>0;)t=t._hostParent,n--;for(;o-n>0;)e=e._hostParent,o--;for(var i=n;i--;){if(t===e)return t;t=t._hostParent,e=e._hostParent}return null}function o(t,e){"_hostNode"in t?void 0:c("35"),"_hostNode"in e?void 0:c("35");for(;e;){if(e===t)return!0;e=e._hostParent}return!1}function s(t){return"_hostNode"in t?void 0:c("36"),t._hostParent}function i(t,e,n){for(var r=[];t;)r.push(t),t=t._hostParent;var o;for(o=r.length;o-- >0;)e(r[o],!1,n);for(o=0;o<r.length;o++)e(r[o],!0,n)}function a(t,e,n,o,s){for(var i=t&&e?r(t,e):null,a=[];t&&t!==i;)a.push(t),t=t._hostParent;for(var c=[];e&&e!==i;)c.push(e),e=e._hostParent;var u;for(u=0;u<a.length;u++)n(a[u],!0,o);for(u=c.length;u-- >0;)n(c[u],!1,s)}var c=n(2);n(1);t.exports={isAncestor:o,getLowestCommonAncestor:r,getParentInstance:s,traverseTwoPhase:i,traverseEnterLeave:a}},function(t,e,n){"use strict";function r(t){o.enqueueEvents(t),o.processEventQueue(!1)}var o=n(44),s={handleTopLevel:function(t,e,n,s){var i=o.extractEvents(t,e,n,s);r(i)}};t.exports=s},function(t,e,n){"use strict";function r(t){for(;t._hostParent;)t=t._hostParent;var e=d.getNodeFromInstance(t),n=e.parentNode;return d.getClosestInstanceFromNode(n)}function o(t,e){this.topLevelType=t,this.nativeEvent=e,this.ancestors=[]}function s(t){var e=p(t.nativeEvent),n=d.getClosestInstanceFromNode(e),o=n;do t.ancestors.push(o),o=o&&r(o);while(o);for(var s=0;s<t.ancestors.length;s++)n=t.ancestors[s],g._handleTopLevel(t.topLevelType,n,t.nativeEvent,p(t.nativeEvent))}function i(t){var e=h(window);t(e)}var a=n(4),c=n(112),u=n(7),l=n(19),d=n(5),f=n(12),p=n(99),h=n(206);a(o.prototype,{destructor:function(){this.topLevelType=null,this.nativeEvent=null,this.ancestors.length=0}}),l.addPoolingTo(o,l.twoArgumentPooler);var g={_enabled:!0,_handleTopLevel:null,WINDOW_HANDLE:u.canUseDOM?window:null,setHandleTopLevel:function(t){g._handleTopLevel=t},setEnabled:function(t){g._enabled=!!t},isEnabled:function(){return g._enabled;
},trapBubbledEvent:function(t,e,n){var r=n;return r?c.listen(r,e,g.dispatchEvent.bind(null,t)):null},trapCapturedEvent:function(t,e,n){var r=n;return r?c.capture(r,e,g.dispatchEvent.bind(null,t)):null},monitorScrollValue:function(t){var e=i.bind(null,t);c.listen(window,"scroll",e)},dispatchEvent:function(t,e){if(g._enabled){var n=o.getPooled(t,e);try{f.batchedUpdates(s,n)}finally{o.release(n)}}}};t.exports=g},function(t,e,n){"use strict";var r=n(34),o=n(44),s=n(83),i=n(87),a=n(141),c=n(148),u=n(61),l=n(150),d=n(12),f={Component:i.injection,Class:a.injection,DOMProperty:r.injection,EmptyComponent:c.injection,EventPluginHub:o.injection,EventPluginUtils:s.injection,EventEmitter:u.injection,HostComponent:l.injection,Updates:d.injection};t.exports=f},function(t,e,n){"use strict";function r(t,e,n){return{type:f.INSERT_MARKUP,content:t,fromIndex:null,fromNode:null,toIndex:n,afterNode:e}}function o(t,e,n){return{type:f.MOVE_EXISTING,content:null,fromIndex:t._mountIndex,fromNode:p.getHostNode(t),toIndex:n,afterNode:e}}function s(t,e){return{type:f.REMOVE_NODE,content:null,fromIndex:t._mountIndex,fromNode:e,toIndex:null,afterNode:null}}function i(t){return{type:f.SET_MARKUP,content:t,fromIndex:null,fromNode:null,toIndex:null,afterNode:null}}function a(t){return{type:f.TEXT_CONTENT,content:t,fromIndex:null,fromNode:null,toIndex:null,afterNode:null}}function c(t,e){return e&&(t=t||[],t.push(e)),t}function u(t,e){d.processChildrenUpdates(t,e)}var l=n(2),d=n(87),f=(n(46),n(8),n(154)),p=(n(20),n(26)),h=n(326),g=(n(10),n(371)),y=(n(1),{Mixin:{_reconcilerInstantiateChildren:function(t,e,n){return h.instantiateChildren(t,e,n)},_reconcilerUpdateChildren:function(t,e,n,r,o,s){var i;return i=g(e),h.updateChildren(t,i,n,r,o,this,this._hostContainerInfo,s),i},mountChildren:function(t,e,n){var r=this._reconcilerInstantiateChildren(t,e,n);this._renderedChildren=r;var o=[],s=0;for(var i in r)if(r.hasOwnProperty(i)){var a=r[i],c=p.mountComponent(a,e,this,this._hostContainerInfo,n);a._mountIndex=s++,o.push(c)}return o},updateTextContent:function(t){var e=this._renderedChildren;h.unmountChildren(e,!1);for(var n in e)e.hasOwnProperty(n)&&l("118");var r=[a(t)];u(this,r)},updateMarkup:function(t){var e=this._renderedChildren;h.unmountChildren(e,!1);for(var n in e)e.hasOwnProperty(n)&&l("118");var r=[i(t)];u(this,r)},updateChildren:function(t,e,n){this._updateChildren(t,e,n)},_updateChildren:function(t,e,n){var r=this._renderedChildren,o={},s=[],i=this._reconcilerUpdateChildren(r,t,s,o,e,n);if(i||r){var a,l=null,d=0,f=0,h=0,g=null;for(a in i)if(i.hasOwnProperty(a)){var y=r&&r[a],m=i[a];y===m?(l=c(l,this.moveChild(y,g,d,f)),f=Math.max(y._mountIndex,f),y._mountIndex=d):(y&&(f=Math.max(y._mountIndex,f)),l=c(l,this._mountChildAtIndex(m,s[h],g,d,e,n)),h++),d++,g=p.getHostNode(m)}for(a in o)o.hasOwnProperty(a)&&(l=c(l,this._unmountChild(r[a],o[a])));l&&u(this,l),this._renderedChildren=i}},unmountChildren:function(t){var e=this._renderedChildren;h.unmountChildren(e,t),this._renderedChildren=null},moveChild:function(t,e,n,r){if(t._mountIndex<r)return o(t,e,n)},createChild:function(t,e,n){return r(n,e,t._mountIndex)},removeChild:function(t,e){return s(t,e)},_mountChildAtIndex:function(t,e,n,r,o,s){return t._mountIndex=r,this.createChild(t,n,e)},_unmountChild:function(t,e){var n=this.removeChild(t,e);return t._mountIndex=null,n}}});t.exports=y},function(t,e,n){"use strict";var r=n(2),o=(n(1),{isValidOwner:function(t){return!(!t||"function"!=typeof t.attachRef||"function"!=typeof t.detachRef)},addComponentAsRefTo:function(t,e,n){o.isValidOwner(n)?void 0:r("119"),n.attachRef(e,t)},removeComponentAsRefFrom:function(t,e,n){o.isValidOwner(n)?void 0:r("120");var s=n.getPublicInstance();s&&s.refs[e]===t.getPublicInstance()&&n.detachRef(e)}});t.exports=o},function(t,e,n){"use strict";function r(t,e,n){this.props=t,this.context=e,this.refs=c,this.updater=n||a}function o(){}var s=n(4),i=n(86),a=n(90),c=n(29);o.prototype=i.prototype,r.prototype=new o,r.prototype.constructor=r,s(r.prototype,i.prototype),r.prototype.isPureReactComponent=!0,t.exports=r},function(t,e,n){"use strict";function r(t){this.reinitializeTransaction(),this.renderToStaticMarkup=!1,this.reactMountReady=s.getPooled(null),this.useCreateElement=t}var o=n(4),s=n(138),i=n(19),a=n(61),c=n(151),u=(n(8),n(48)),l=n(94),d={initialize:c.getSelectionInformation,close:c.restoreSelection},f={initialize:function(){var t=a.isEnabled();return a.setEnabled(!1),t},close:function(t){a.setEnabled(t)}},p={initialize:function(){this.reactMountReady.reset()},close:function(){this.reactMountReady.notifyAll()}},h=[d,f,p],g={getTransactionWrappers:function(){return h},getReactMountReady:function(){return this.reactMountReady},getUpdateQueue:function(){return l},checkpoint:function(){return this.reactMountReady.checkpoint()},rollback:function(t){this.reactMountReady.rollback(t)},destructor:function(){s.release(this.reactMountReady),this.reactMountReady=null}};o(r.prototype,u.Mixin,g),i.addPoolingTo(r),t.exports=r},function(t,e,n){"use strict";function r(t,e,n){"function"==typeof t?t(e.getPublicInstance()):s.addComponentAsRefTo(e,t,n)}function o(t,e,n){"function"==typeof t?t(null):s.removeComponentAsRefFrom(e,t,n)}var s=n(347),i={};i.attachRefs=function(t,e){if(null!==e&&e!==!1){var n=e.ref;null!=n&&r(n,t,e._owner)}},i.shouldUpdateRefs=function(t,e){var n=null===t||t===!1,r=null===e||e===!1;return n||r||e.ref!==t.ref||"string"==typeof e.ref&&e._owner!==t._owner},i.detachRefs=function(t,e){if(null!==e&&e!==!1){var n=e.ref;null!=n&&o(n,t,e._owner)}},t.exports=i},function(t,e){"use strict";var n={isBatchingUpdates:!1,batchedUpdates:function(t){}};t.exports=n},function(t,e,n){"use strict";function r(t,e){var n;try{return h.injection.injectBatchingStrategy(f),n=p.getPooled(e),m++,n.perform(function(){var r=y(t,!0),o=d.mountComponent(r,n,null,a(),g);return e||(o=l.addChecksumToMarkup(o)),o},null)}finally{m--,p.release(n),m||h.injection.injectBatchingStrategy(c)}}function o(t){return u.isValidElement(t)?void 0:i("46"),r(t,!1)}function s(t){return u.isValidElement(t)?void 0:i("47"),r(t,!0)}var i=n(2),a=n(144),c=n(146),u=n(11),l=(n(8),n(152)),d=n(26),f=n(351),p=n(157),h=n(12),g=n(29),y=n(100),m=(n(1),0);t.exports={renderToString:o,renderToStaticMarkup:s}},function(t,e,n){"use strict";function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function o(t,e){}var s=n(94),i=(n(48),n(3),function(){function t(e){r(this,t),this.transaction=e}return t.prototype.isMounted=function(t){return!1},t.prototype.enqueueCallback=function(t,e,n){this.transaction.isInTransaction()&&s.enqueueCallback(t,e,n)},t.prototype.enqueueForceUpdate=function(t){this.transaction.isInTransaction()?s.enqueueForceUpdate(t):o(t,"forceUpdate")},t.prototype.enqueueReplaceState=function(t,e){this.transaction.isInTransaction()?s.enqueueReplaceState(t,e):o(t,"replaceState")},t.prototype.enqueueSetState=function(t,e){this.transaction.isInTransaction()?s.enqueueSetState(t,e):o(t,"setState")},t}());t.exports=i},function(t,e){"use strict";var n={xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace"},r={accentHeight:"accent-height",accumulate:0,additive:0,alignmentBaseline:"alignment-baseline",allowReorder:"allowReorder",alphabetic:0,amplitude:0,arabicForm:"arabic-form",ascent:0,attributeName:"attributeName",attributeType:"attributeType",autoReverse:"autoReverse",azimuth:0,baseFrequency:"baseFrequency",baseProfile:"baseProfile",baselineShift:"baseline-shift",bbox:0,begin:0,bias:0,by:0,calcMode:"calcMode",capHeight:"cap-height",clip:0,clipPath:"clip-path",clipRule:"clip-rule",clipPathUnits:"clipPathUnits",colorInterpolation:"color-interpolation",colorInterpolationFilters:"color-interpolation-filters",colorProfile:"color-profile",colorRendering:"color-rendering",contentScriptType:"contentScriptType",contentStyleType:"contentStyleType",cursor:0,cx:0,cy:0,d:0,decelerate:0,descent:0,diffuseConstant:"diffuseConstant",direction:0,display:0,divisor:0,dominantBaseline:"dominant-baseline",dur:0,dx:0,dy:0,edgeMode:"edgeMode",elevation:0,enableBackground:"enable-background",end:0,exponent:0,externalResourcesRequired:"externalResourcesRequired",fill:0,fillOpacity:"fill-opacity",fillRule:"fill-rule",filter:0,filterRes:"filterRes",filterUnits:"filterUnits",floodColor:"flood-color",floodOpacity:"flood-opacity",focusable:0,fontFamily:"font-family",fontSize:"font-size",fontSizeAdjust:"font-size-adjust",fontStretch:"font-stretch",fontStyle:"font-style",fontVariant:"font-variant",fontWeight:"font-weight",format:0,from:0,fx:0,fy:0,g1:0,g2:0,glyphName:"glyph-name",glyphOrientationHorizontal:"glyph-orientation-horizontal",glyphOrientationVertical:"glyph-orientation-vertical",glyphRef:"glyphRef",gradientTransform:"gradientTransform",gradientUnits:"gradientUnits",hanging:0,horizAdvX:"horiz-adv-x",horizOriginX:"horiz-origin-x",ideographic:0,imageRendering:"image-rendering",in:0,in2:0,intercept:0,k:0,k1:0,k2:0,k3:0,k4:0,kernelMatrix:"kernelMatrix",kernelUnitLength:"kernelUnitLength",kerning:0,keyPoints:"keyPoints",keySplines:"keySplines",keyTimes:"keyTimes",lengthAdjust:"lengthAdjust",letterSpacing:"letter-spacing",lightingColor:"lighting-color",limitingConeAngle:"limitingConeAngle",local:0,markerEnd:"marker-end",markerMid:"marker-mid",markerStart:"marker-start",markerHeight:"markerHeight",markerUnits:"markerUnits",markerWidth:"markerWidth",mask:0,maskContentUnits:"maskContentUnits",maskUnits:"maskUnits",mathematical:0,mode:0,numOctaves:"numOctaves",offset:0,opacity:0,operator:0,order:0,orient:0,orientation:0,origin:0,overflow:0,overlinePosition:"overline-position",overlineThickness:"overline-thickness",paintOrder:"paint-order",panose1:"panose-1",pathLength:"pathLength",patternContentUnits:"patternContentUnits",patternTransform:"patternTransform",patternUnits:"patternUnits",pointerEvents:"pointer-events",points:0,pointsAtX:"pointsAtX",pointsAtY:"pointsAtY",pointsAtZ:"pointsAtZ",preserveAlpha:"preserveAlpha",preserveAspectRatio:"preserveAspectRatio",primitiveUnits:"primitiveUnits",r:0,radius:0,refX:"refX",refY:"refY",renderingIntent:"rendering-intent",repeatCount:"repeatCount",repeatDur:"repeatDur",requiredExtensions:"requiredExtensions",requiredFeatures:"requiredFeatures",restart:0,result:0,rotate:0,rx:0,ry:0,scale:0,seed:0,shapeRendering:"shape-rendering",slope:0,spacing:0,specularConstant:"specularConstant",specularExponent:"specularExponent",speed:0,spreadMethod:"spreadMethod",startOffset:"startOffset",stdDeviation:"stdDeviation",stemh:0,stemv:0,stitchTiles:"stitchTiles",stopColor:"stop-color",stopOpacity:"stop-opacity",strikethroughPosition:"strikethrough-position",strikethroughThickness:"strikethrough-thickness",string:0,stroke:0,strokeDasharray:"stroke-dasharray",strokeDashoffset:"stroke-dashoffset",strokeLinecap:"stroke-linecap",strokeLinejoin:"stroke-linejoin",strokeMiterlimit:"stroke-miterlimit",strokeOpacity:"stroke-opacity",strokeWidth:"stroke-width",surfaceScale:"surfaceScale",systemLanguage:"systemLanguage",tableValues:"tableValues",targetX:"targetX",targetY:"targetY",textAnchor:"text-anchor",textDecoration:"text-decoration",textRendering:"text-rendering",textLength:"textLength",to:0,transform:0,u1:0,u2:0,underlinePosition:"underline-position",underlineThickness:"underline-thickness",unicode:0,unicodeBidi:"unicode-bidi",unicodeRange:"unicode-range",unitsPerEm:"units-per-em",vAlphabetic:"v-alphabetic",vHanging:"v-hanging",vIdeographic:"v-ideographic",vMathematical:"v-mathematical",values:0,vectorEffect:"vector-effect",version:0,vertAdvY:"vert-adv-y",vertOriginX:"vert-origin-x",vertOriginY:"vert-origin-y",viewBox:"viewBox",viewTarget:"viewTarget",visibility:0,widths:0,wordSpacing:"word-spacing",writingMode:"writing-mode",x:0,xHeight:"x-height",x1:0,x2:0,xChannelSelector:"xChannelSelector",xlinkActuate:"xlink:actuate",xlinkArcrole:"xlink:arcrole",xlinkHref:"xlink:href",xlinkRole:"xlink:role",xlinkShow:"xlink:show",xlinkTitle:"xlink:title",xlinkType:"xlink:type",xmlBase:"xml:base",xmlns:0,xmlnsXlink:"xmlns:xlink",xmlLang:"xml:lang",xmlSpace:"xml:space",y:0,y1:0,y2:0,yChannelSelector:"yChannelSelector",z:0,zoomAndPan:"zoomAndPan"},o={Properties:{},DOMAttributeNamespaces:{xlinkActuate:n.xlink,xlinkArcrole:n.xlink,xlinkHref:n.xlink,xlinkRole:n.xlink,xlinkShow:n.xlink,xlinkTitle:n.xlink,xlinkType:n.xlink,xmlBase:n.xml,xmlLang:n.xml,xmlSpace:n.xml},DOMAttributeNames:{}};Object.keys(r).forEach(function(t){o.Properties[t]=0,r[t]&&(o.DOMAttributeNames[t]=r[t])}),t.exports=o},function(t,e,n){"use strict";function r(t){if("selectionStart"in t&&u.hasSelectionCapabilities(t))return{start:t.selectionStart,end:t.selectionEnd};if(window.getSelection){var e=window.getSelection();return{anchorNode:e.anchorNode,anchorOffset:e.anchorOffset,focusNode:e.focusNode,focusOffset:e.focusOffset}}if(document.selection){var n=document.selection.createRange();return{parentElement:n.parentElement(),text:n.text,top:n.boundingTop,left:n.boundingLeft}}}function o(t,e){if(b||null==k||k!==d())return null;var n=r(k);if(!v||!h(v,n)){v=n;var o=l.getPooled(m.select,x,t,e);return o.type="select",o.target=k,i.accumulateTwoPhaseDispatches(o),o}return null}var s=n(14),i=n(45),a=n(7),c=n(5),u=n(151),l=n(15),d=n(114),f=n(165),p=n(18),h=n(71),g=s.topLevelTypes,y=a.canUseDOM&&"documentMode"in document&&document.documentMode<=11,m={select:{phasedRegistrationNames:{bubbled:p({onSelect:null}),captured:p({onSelectCapture:null})},dependencies:[g.topBlur,g.topContextMenu,g.topFocus,g.topKeyDown,g.topMouseDown,g.topMouseUp,g.topSelectionChange]}},k=null,x=null,v=null,b=!1,_=!1,w=p({onSelect:null}),O={eventTypes:m,extractEvents:function(t,e,n,r){if(!_)return null;var s=e?c.getNodeFromInstance(e):window;switch(t){case g.topFocus:(f(s)||"true"===s.contentEditable)&&(k=s,x=e,v=null);break;case g.topBlur:k=null,x=null,v=null;break;case g.topMouseDown:b=!0;break;case g.topContextMenu:case g.topMouseUp:return b=!1,o(n,r);case g.topSelectionChange:if(y)break;case g.topKeyDown:case g.topKeyUp:return o(n,r)}return null},didPutListener:function(t,e,n){e===w&&(_=!0)}};t.exports=O},function(t,e,n){"use strict";function r(t){return"."+t._rootNodeID}var o=n(2),s=n(14),i=n(112),a=n(45),c=n(5),u=n(357),l=n(358),d=n(15),f=n(361),p=n(363),h=n(62),g=n(360),y=n(364),m=n(365),k=n(47),x=n(366),v=n(10),b=n(97),_=(n(1),n(18)),w=s.topLevelTypes,O={abort:{phasedRegistrationNames:{bubbled:_({onAbort:!0}),captured:_({onAbortCapture:!0})}},animationEnd:{phasedRegistrationNames:{bubbled:_({onAnimationEnd:!0}),captured:_({onAnimationEndCapture:!0})}},animationIteration:{phasedRegistrationNames:{bubbled:_({onAnimationIteration:!0}),captured:_({onAnimationIterationCapture:!0})}},animationStart:{phasedRegistrationNames:{bubbled:_({onAnimationStart:!0}),captured:_({onAnimationStartCapture:!0})}},blur:{phasedRegistrationNames:{bubbled:_({onBlur:!0}),captured:_({onBlurCapture:!0})}},canPlay:{phasedRegistrationNames:{bubbled:_({onCanPlay:!0}),captured:_({onCanPlayCapture:!0})}},canPlayThrough:{phasedRegistrationNames:{bubbled:_({onCanPlayThrough:!0}),captured:_({onCanPlayThroughCapture:!0})}},click:{phasedRegistrationNames:{bubbled:_({onClick:!0}),captured:_({onClickCapture:!0})}},contextMenu:{phasedRegistrationNames:{bubbled:_({onContextMenu:!0}),captured:_({onContextMenuCapture:!0})}},copy:{phasedRegistrationNames:{bubbled:_({onCopy:!0}),captured:_({onCopyCapture:!0})}},cut:{phasedRegistrationNames:{bubbled:_({onCut:!0}),captured:_({onCutCapture:!0})}},doubleClick:{phasedRegistrationNames:{bubbled:_({onDoubleClick:!0}),captured:_({onDoubleClickCapture:!0})}},drag:{phasedRegistrationNames:{bubbled:_({onDrag:!0}),captured:_({onDragCapture:!0})}},dragEnd:{phasedRegistrationNames:{bubbled:_({onDragEnd:!0}),captured:_({onDragEndCapture:!0})}},dragEnter:{phasedRegistrationNames:{bubbled:_({onDragEnter:!0}),captured:_({onDragEnterCapture:!0})}},dragExit:{phasedRegistrationNames:{bubbled:_({onDragExit:!0}),captured:_({onDragExitCapture:!0})}},dragLeave:{phasedRegistrationNames:{bubbled:_({onDragLeave:!0}),captured:_({onDragLeaveCapture:!0})}},dragOver:{phasedRegistrationNames:{bubbled:_({onDragOver:!0}),captured:_({onDragOverCapture:!0})}},dragStart:{phasedRegistrationNames:{bubbled:_({onDragStart:!0}),captured:_({onDragStartCapture:!0})}},drop:{phasedRegistrationNames:{bubbled:_({onDrop:!0}),captured:_({onDropCapture:!0})}},durationChange:{phasedRegistrationNames:{bubbled:_({onDurationChange:!0}),captured:_({onDurationChangeCapture:!0})}},emptied:{phasedRegistrationNames:{bubbled:_({onEmptied:!0}),captured:_({onEmptiedCapture:!0})}},encrypted:{phasedRegistrationNames:{bubbled:_({onEncrypted:!0}),captured:_({onEncryptedCapture:!0})}},ended:{phasedRegistrationNames:{bubbled:_({onEnded:!0}),captured:_({onEndedCapture:!0})}},error:{phasedRegistrationNames:{bubbled:_({onError:!0}),captured:_({onErrorCapture:!0})}},focus:{phasedRegistrationNames:{bubbled:_({onFocus:!0}),captured:_({onFocusCapture:!0})}},input:{phasedRegistrationNames:{bubbled:_({onInput:!0}),captured:_({onInputCapture:!0})}},invalid:{phasedRegistrationNames:{bubbled:_({onInvalid:!0}),captured:_({onInvalidCapture:!0})}},keyDown:{phasedRegistrationNames:{bubbled:_({onKeyDown:!0}),captured:_({onKeyDownCapture:!0})}},keyPress:{phasedRegistrationNames:{bubbled:_({onKeyPress:!0}),captured:_({onKeyPressCapture:!0})}},keyUp:{phasedRegistrationNames:{bubbled:_({onKeyUp:!0}),captured:_({onKeyUpCapture:!0})}},load:{phasedRegistrationNames:{bubbled:_({onLoad:!0}),captured:_({onLoadCapture:!0})}},loadedData:{phasedRegistrationNames:{bubbled:_({onLoadedData:!0}),captured:_({onLoadedDataCapture:!0})}},loadedMetadata:{phasedRegistrationNames:{bubbled:_({onLoadedMetadata:!0}),captured:_({onLoadedMetadataCapture:!0})}},loadStart:{phasedRegistrationNames:{bubbled:_({onLoadStart:!0}),captured:_({onLoadStartCapture:!0})}},mouseDown:{phasedRegistrationNames:{bubbled:_({onMouseDown:!0}),captured:_({onMouseDownCapture:!0})}},mouseMove:{phasedRegistrationNames:{bubbled:_({onMouseMove:!0}),captured:_({onMouseMoveCapture:!0})}},mouseOut:{phasedRegistrationNames:{bubbled:_({onMouseOut:!0}),captured:_({onMouseOutCapture:!0})}},mouseOver:{phasedRegistrationNames:{bubbled:_({onMouseOver:!0}),captured:_({onMouseOverCapture:!0})}},mouseUp:{phasedRegistrationNames:{bubbled:_({onMouseUp:!0}),captured:_({onMouseUpCapture:!0})}},paste:{phasedRegistrationNames:{bubbled:_({onPaste:!0}),captured:_({onPasteCapture:!0})}},pause:{phasedRegistrationNames:{bubbled:_({onPause:!0}),captured:_({onPauseCapture:!0})}},play:{phasedRegistrationNames:{bubbled:_({onPlay:!0}),captured:_({onPlayCapture:!0})}},playing:{phasedRegistrationNames:{bubbled:_({onPlaying:!0}),captured:_({onPlayingCapture:!0})}},progress:{phasedRegistrationNames:{bubbled:_({onProgress:!0}),captured:_({onProgressCapture:!0})}},rateChange:{phasedRegistrationNames:{bubbled:_({onRateChange:!0}),captured:_({onRateChangeCapture:!0})}},reset:{phasedRegistrationNames:{bubbled:_({onReset:!0}),captured:_({onResetCapture:!0})}},scroll:{phasedRegistrationNames:{bubbled:_({onScroll:!0}),captured:_({onScrollCapture:!0})}},seeked:{phasedRegistrationNames:{bubbled:_({onSeeked:!0}),captured:_({onSeekedCapture:!0})}},seeking:{phasedRegistrationNames:{bubbled:_({onSeeking:!0}),captured:_({onSeekingCapture:!0})}},stalled:{phasedRegistrationNames:{bubbled:_({onStalled:!0}),captured:_({onStalledCapture:!0})}},submit:{phasedRegistrationNames:{bubbled:_({onSubmit:!0}),captured:_({onSubmitCapture:!0})}},suspend:{phasedRegistrationNames:{bubbled:_({onSuspend:!0}),captured:_({onSuspendCapture:!0})}},timeUpdate:{phasedRegistrationNames:{bubbled:_({onTimeUpdate:!0}),captured:_({onTimeUpdateCapture:!0})}},touchCancel:{phasedRegistrationNames:{bubbled:_({onTouchCancel:!0}),captured:_({onTouchCancelCapture:!0})}},touchEnd:{phasedRegistrationNames:{bubbled:_({onTouchEnd:!0}),captured:_({onTouchEndCapture:!0})}},touchMove:{phasedRegistrationNames:{bubbled:_({onTouchMove:!0}),captured:_({onTouchMoveCapture:!0})}},touchStart:{phasedRegistrationNames:{bubbled:_({onTouchStart:!0}),captured:_({onTouchStartCapture:!0})}},transitionEnd:{phasedRegistrationNames:{bubbled:_({onTransitionEnd:!0}),captured:_({onTransitionEndCapture:!0})}},volumeChange:{phasedRegistrationNames:{bubbled:_({onVolumeChange:!0}),captured:_({onVolumeChangeCapture:!0})}},waiting:{phasedRegistrationNames:{bubbled:_({onWaiting:!0}),captured:_({onWaitingCapture:!0})}},wheel:{phasedRegistrationNames:{bubbled:_({onWheel:!0}),captured:_({onWheelCapture:!0})}}},T={topAbort:O.abort,topAnimationEnd:O.animationEnd,topAnimationIteration:O.animationIteration,topAnimationStart:O.animationStart,topBlur:O.blur,topCanPlay:O.canPlay,topCanPlayThrough:O.canPlayThrough,topClick:O.click,topContextMenu:O.contextMenu,topCopy:O.copy,topCut:O.cut,topDoubleClick:O.doubleClick,topDrag:O.drag,topDragEnd:O.dragEnd,topDragEnter:O.dragEnter,topDragExit:O.dragExit,topDragLeave:O.dragLeave,topDragOver:O.dragOver,topDragStart:O.dragStart,topDrop:O.drop,topDurationChange:O.durationChange,topEmptied:O.emptied,topEncrypted:O.encrypted,topEnded:O.ended,topError:O.error,topFocus:O.focus,topInput:O.input,topInvalid:O.invalid,topKeyDown:O.keyDown,topKeyPress:O.keyPress,topKeyUp:O.keyUp,topLoad:O.load,topLoadedData:O.loadedData,topLoadedMetadata:O.loadedMetadata,topLoadStart:O.loadStart,topMouseDown:O.mouseDown,topMouseMove:O.mouseMove,topMouseOut:O.mouseOut,topMouseOver:O.mouseOver,topMouseUp:O.mouseUp,topPaste:O.paste,topPause:O.pause,topPlay:O.play,topPlaying:O.playing,topProgress:O.progress,topRateChange:O.rateChange,topReset:O.reset,topScroll:O.scroll,topSeeked:O.seeked,topSeeking:O.seeking,topStalled:O.stalled,topSubmit:O.submit,topSuspend:O.suspend,topTimeUpdate:O.timeUpdate,topTouchCancel:O.touchCancel,topTouchEnd:O.touchEnd,topTouchMove:O.touchMove,topTouchStart:O.touchStart,topTransitionEnd:O.transitionEnd,topVolumeChange:O.volumeChange,topWaiting:O.waiting,topWheel:O.wheel};for(var E in T)T[E].dependencies=[E];var S=_({onClick:null}),C={},A={eventTypes:O,extractEvents:function(t,e,n,r){var s=T[t];if(!s)return null;var i;switch(t){case w.topAbort:case w.topCanPlay:case w.topCanPlayThrough:case w.topDurationChange:case w.topEmptied:case w.topEncrypted:case w.topEnded:case w.topError:case w.topInput:case w.topInvalid:case w.topLoad:case w.topLoadedData:case w.topLoadedMetadata:case w.topLoadStart:case w.topPause:case w.topPlay:case w.topPlaying:case w.topProgress:case w.topRateChange:case w.topReset:case w.topSeeked:case w.topSeeking:case w.topStalled:case w.topSubmit:case w.topSuspend:case w.topTimeUpdate:case w.topVolumeChange:case w.topWaiting:i=d;break;case w.topKeyPress:if(0===b(n))return null;case w.topKeyDown:case w.topKeyUp:i=p;break;case w.topBlur:case w.topFocus:i=f;break;case w.topClick:if(2===n.button)return null;case w.topContextMenu:case w.topDoubleClick:case w.topMouseDown:case w.topMouseMove:case w.topMouseOut:case w.topMouseOver:case w.topMouseUp:i=h;break;case w.topDrag:case w.topDragEnd:case w.topDragEnter:case w.topDragExit:case w.topDragLeave:case w.topDragOver:case w.topDragStart:case w.topDrop:i=g;break;case w.topTouchCancel:case w.topTouchEnd:case w.topTouchMove:case w.topTouchStart:i=y;break;case w.topAnimationEnd:case w.topAnimationIteration:case w.topAnimationStart:i=u;break;case w.topTransitionEnd:i=m;break;case w.topScroll:i=k;break;case w.topWheel:i=x;break;case w.topCopy:case w.topCut:case w.topPaste:i=l}i?void 0:o("86",t);var c=i.getPooled(s,e,n,r);return a.accumulateTwoPhaseDispatches(c),c},didPutListener:function(t,e,n){if(e===S){var o=r(t),s=c.getNodeFromInstance(t);C[o]||(C[o]=i.listen(s,"click",v))}},willDeleteListener:function(t,e){if(e===S){var n=r(t);C[n].remove(),delete C[n]}}};t.exports=A},function(t,e,n){"use strict";function r(t,e,n,r){return o.call(this,t,e,n,r)}var o=n(15),s={animationName:null,elapsedTime:null,pseudoElement:null};o.augmentClass(r,s),t.exports=r},function(t,e,n){"use strict";function r(t,e,n,r){return o.call(this,t,e,n,r)}var o=n(15),s={clipboardData:function(t){return"clipboardData"in t?t.clipboardData:window.clipboardData}};o.augmentClass(r,s),t.exports=r},function(t,e,n){"use strict";function r(t,e,n,r){return o.call(this,t,e,n,r)}var o=n(15),s={data:null};o.augmentClass(r,s),t.exports=r},function(t,e,n){"use strict";function r(t,e,n,r){return o.call(this,t,e,n,r)}var o=n(62),s={dataTransfer:null};o.augmentClass(r,s),t.exports=r},function(t,e,n){"use strict";function r(t,e,n,r){return o.call(this,t,e,n,r)}var o=n(47),s={relatedTarget:null};o.augmentClass(r,s),t.exports=r},function(t,e,n){"use strict";function r(t,e,n,r){return o.call(this,t,e,n,r)}var o=n(15),s={data:null};o.augmentClass(r,s),t.exports=r},function(t,e,n){"use strict";function r(t,e,n,r){return o.call(this,t,e,n,r)}var o=n(47),s=n(97),i=n(372),a=n(98),c={key:i,location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:a,charCode:function(t){return"keypress"===t.type?s(t):0},keyCode:function(t){return"keydown"===t.type||"keyup"===t.type?t.keyCode:0},which:function(t){return"keypress"===t.type?s(t):"keydown"===t.type||"keyup"===t.type?t.keyCode:0}};o.augmentClass(r,c),t.exports=r},function(t,e,n){"use strict";function r(t,e,n,r){return o.call(this,t,e,n,r)}var o=n(47),s=n(98),i={touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:s};o.augmentClass(r,i),t.exports=r},function(t,e,n){"use strict";function r(t,e,n,r){return o.call(this,t,e,n,r)}var o=n(15),s={propertyName:null,elapsedTime:null,pseudoElement:null};o.augmentClass(r,s),t.exports=r},function(t,e,n){"use strict";function r(t,e,n,r){return o.call(this,t,e,n,r)}var o=n(62),s={deltaX:function(t){return"deltaX"in t?t.deltaX:"wheelDeltaX"in t?-t.wheelDeltaX:0},deltaY:function(t){return"deltaY"in t?t.deltaY:"wheelDeltaY"in t?-t.wheelDeltaY:"wheelDelta"in t?-t.wheelDelta:0},deltaZ:null,deltaMode:null};o.augmentClass(r,s),t.exports=r},function(t,e){"use strict";function n(t){for(var e=1,n=0,o=0,s=t.length,i=s&-4;o<i;){for(var a=Math.min(o+4096,i);o<a;o+=4)n+=(e+=t.charCodeAt(o))+(e+=t.charCodeAt(o+1))+(e+=t.charCodeAt(o+2))+(e+=t.charCodeAt(o+3));e%=r,n%=r}for(;o<s;o++)n+=e+=t.charCodeAt(o);return e%=r,n%=r,e|n<<16}var r=65521;t.exports=n},function(t,e,n){(function(e){"use strict";function r(t,e,n,r,c,u){for(var l in t)if(t.hasOwnProperty(l)){var d;try{"function"!=typeof t[l]?o("84",r||"React class",s[n],l):void 0,d=t[l](e,l,r,n,null,i)}catch(f){d=f}if(d instanceof Error&&!(d.message in a)){a[d.message]=!0}}}var o=n(2),s=n(91),i=n(93);n(1),n(3);"undefined"!=typeof e&&e.env,1;var a={};t.exports=r}).call(e,n(13))},function(t,e,n){"use strict";function r(t,e,n){var r=null==e||"boolean"==typeof e||""===e;if(r)return"";var o=isNaN(e);if(o||0===e||s.hasOwnProperty(t)&&s[t])return""+e;if("string"==typeof e){e=e.trim()}return e+"px"}var o=n(137),s=(n(3),o.isUnitlessNumber);t.exports=r},function(t,e,n){"use strict";function r(t){if(null==t)return null;if(1===t.nodeType)return t;var e=i.get(t);return e?(e=a(e),e?s.getNodeFromInstance(e):null):void("function"==typeof t.render?o("44"):o("45",Object.keys(t)))}var o=n(2),s=(n(20),n(5)),i=n(46),a=n(162);n(1),n(3);t.exports=r},function(t,e,n){(function(e){"use strict";function r(t,e,n,r){if(t&&"object"==typeof t){var o=t,s=void 0===o[n];s&&null!=e&&(o[n]=e)}}function o(t,e){if(null==t)return t;var n={};return s(t,r,n),n}var s=(n(84),n(103));n(3);"undefined"!=typeof e&&e.env,1,t.exports=o}).call(e,n(13))},function(t,e,n){"use strict";function r(t){if(t.key){var e=s[t.key]||t.key;if("Unidentified"!==e)return e}if("keypress"===t.type){var n=o(t);return 13===n?"Enter":String.fromCharCode(n)}return"keydown"===t.type||"keyup"===t.type?i[t.keyCode]||"Unidentified":""}var o=n(97),s={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},i={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"};t.exports=r},function(t,e){"use strict";function n(t){for(;t&&t.firstChild;)t=t.firstChild;return t}function r(t){for(;t;){if(t.nextSibling)return t.nextSibling;t=t.parentNode}}function o(t,e){for(var o=n(t),s=0,i=0;o;){if(3===o.nodeType){if(i=s+o.textContent.length,s<=e&&i>=e)return{node:o,offset:e-s};s=i}o=n(r(o))}}t.exports=o},function(t,e,n){"use strict";function r(t,e){var n={};return n[t.toLowerCase()]=e.toLowerCase(),n["Webkit"+t]="webkit"+e,n["Moz"+t]="moz"+e,n["ms"+t]="MS"+e,n["O"+t]="o"+e.toLowerCase(),n}function o(t){if(a[t])return a[t];if(!i[t])return t;var e=i[t];for(var n in e)if(e.hasOwnProperty(n)&&n in c)return a[t]=e[n];return""}var s=n(7),i={animationend:r("Animation","AnimationEnd"),animationiteration:r("Animation","AnimationIteration"),animationstart:r("Animation","AnimationStart"),transitionend:r("Transition","TransitionEnd")},a={},c={};s.canUseDOM&&(c=document.createElement("div").style,"AnimationEvent"in window||(delete i.animationend.animation,delete i.animationiteration.animation,delete i.animationstart.animation),"TransitionEvent"in window||delete i.transitionend.transition),t.exports=o},function(t,e,n){"use strict";function r(t){return s.isValidElement(t)?void 0:o("23"),t}var o=n(2),s=n(11);n(1);t.exports=r},function(t,e,n){"use strict";function r(t){return'"'+o(t)+'"'}var o=n(63);t.exports=r},function(t,e,n){"use strict";var r=n(153);t.exports=r.renderSubtreeIntoContainer},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function o(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function a(){}function c(t){var e=t.target,n=t.currentTarget,r=e.closest('[contenteditable="false"]'),o=n.contains(r);return o}Object.defineProperty(e,"__esModule",{value:!0});var u=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},l=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),d=n(65),f=r(d),p=n(40),h=r(p),g=n(380),y=r(g),m=n(108),k=r(m),x=n(9),v=r(x),b=n(49),_=r(b),w=n(391),O=r(w),T=n(105),E=r(T),S=n(54),C=r(S),A=n(31),R=(r(A),n(118)),D=r(R),I=n(169),M=(0,h.default)("slate:content"),K=function(t){function e(t){o(this,e);var n=s(this,Object.getPrototypeOf(e).call(this,t));return P.call(n),n.tmp={},n.tmp.compositions=0,n.forces=0,n}return i(e,t),l(e,[{key:"getPoint",value:function(t,e){var n=this.props,r=n.state,o=n.editor,s=r.document,i=o.getSchema(),a=k.default.findKey(t,e),c=a.key,u=s.getDescendant(c),l=s.getDescendantDecorators(c,i),d=u.getRanges(l),f=k.default.findPoint(a,d);return f}}]),e}(v.default.Component);K.propTypes={className:v.default.PropTypes.string,editor:v.default.PropTypes.object.isRequired,onBeforeInput:v.default.PropTypes.func.isRequired,onBlur:v.default.PropTypes.func.isRequired,onChange:v.default.PropTypes.func.isRequired,onCopy:v.default.PropTypes.func.isRequired,onCut:v.default.PropTypes.func.isRequired,onDrop:v.default.PropTypes.func.isRequired,onKeyDown:v.default.PropTypes.func.isRequired,
onPaste:v.default.PropTypes.func.isRequired,onSelect:v.default.PropTypes.func.isRequired,readOnly:v.default.PropTypes.bool.isRequired,schema:v.default.PropTypes.object,spellCheck:v.default.PropTypes.bool.isRequired,state:v.default.PropTypes.object.isRequired,style:v.default.PropTypes.object},K.defaultProps={style:{}};var P=function(){var t=this;this.shouldComponentUpdate=function(e,n){return!e.state.isNative&&(e.className!=t.props.className||e.readOnly!=t.props.readOnly||e.schema!=t.props.schema||e.spellCheck!=t.props.spellCheck||e.state!=t.props.state||e.style!=t.props.style)},this.componentWillUpdate=function(e,n){t.tmp.isRendering=!0},this.componentDidUpdate=function(e,n){setTimeout(function(){t.tmp.isRendering=!1},1)},this.onBeforeInput=function(e){if(!t.props.readOnly&&!c(e)){var n={};M("onBeforeInput",n),t.props.onBeforeInput(e,n)}},this.onBlur=function(e){if(!t.props.readOnly&&!t.tmp.isCopying&&!c(e)){var n={};M("onBlur",n),t.props.onBlur(e,n)}},this.onChange=function(e){M("onChange",e),t.props.onChange(e)},this.onCompositionStart=function(e){c(e)||(t.tmp.isComposing=!0,t.tmp.compositions++,M("onCompositionStart"))},this.onCompositionEnd=function(e){if(!c(e)){t.forces++;var n=t.tmp.compositions;setTimeout(function(){t.tmp.compositions>n||(t.tmp.isComposing=!1)}),M("onCompositionEnd")}},this.onCopy=function(e){if(!c(e)){var n=(0,C.default)(e.target);t.tmp.isCopying=!0,n.requestAnimationFrame(function(){t.tmp.isCopying=!1});var r=t.props.state,o={};o.type="fragment",o.fragment=r.fragment,M("onCopy",o),t.props.onCopy(e,o)}},this.onCut=function(e){if(!t.props.readOnly&&!c(e)){var n=(0,C.default)(e.target);t.tmp.isCopying=!0,n.requestAnimationFrame(function(){t.tmp.isCopying=!1});var r=t.props.state,o={};o.type="fragment",o.fragment=r.fragment,M("onCut",o),t.props.onCut(e,o)}},this.onDragEnd=function(e){c(e)||(t.tmp.isDragging=!1,t.tmp.isInternalDrag=null,M("onDragEnd"))},this.onDragOver=function(e){if(!c(e)){var n=e.nativeEvent.dataTransfer,r=new O.default(n);"node"==r.getType()&&e.preventDefault(),t.tmp.isDragging||(t.tmp.isDragging=!0,t.tmp.isInternalDrag=!1,M("onDragOver"))}},this.onDragStart=function(e){if(!c(e)){t.tmp.isDragging=!0,t.tmp.isInternalDrag=!0;var n=e.nativeEvent.dataTransfer,r=new O.default(n);if("node"!=r.getType()){var o=t.props.state,s=o.fragment,i=f.default.serializeNode(s);n.setData(E.default.FRAGMENT,i),M("onDragStart")}}},this.onDrop=function(e){if(!t.props.readOnly&&!c(e)){e.preventDefault();var n=(0,C.default)(e.target),r=t.props.state,o=(r.selection,e.nativeEvent),s=o.dataTransfer,i=o.x,a=o.y,u=new O.default(s),l=u.getData(),d=void 0;n.document.caretRangeFromPoint?d=n.document.caretRangeFromPoint(i,a):(d=n.document.createRange(),d.setStart(e.nativeEvent.rangeParent,e.nativeEvent.rangeOffset));var f=d.startContainer,p=d.startOffset,h=t.getPoint(f,p),g=_.default.create({anchorKey:h.key,anchorOffset:h.offset,focusKey:h.key,focusOffset:h.offset,isFocused:!0});r.document.hasVoidParent(h.key)||(l.target=g,l.effect=s.dropEffect,"fragment"!=l.type&&"node"!=l.type||(l.isInternal=t.tmp.isInternalDrag),M("onDrop",l),t.props.onDrop(e,l))}},this.onInput=function(e){if(!t.tmp.isRendering&&!t.tmp.isComposing&&!c(e)){M("onInput");var n=(0,C.default)(e.target),r=n.getSelection(),o=r.anchorNode,s=r.anchorOffset,i=(r.focusOffset,t.getPoint(o,s)),a=i.key,u=i.index,l=i.start,d=i.end,f=t.props,p=f.state,h=f.editor,g=p.document,y=p.selection,m=h.getSchema(),k=g.getDescendantDecorators(a,m),x=g.getDescendant(a),v=x.getRanges(k),b=v.get(u),_=u==v.size-1,w=b.text,O=b.marks,T=o.textContent,E=T.charAt(T.length-1);if(_&&"\n"==E&&(T=T.slice(0,-1)),T!=w){var S=T.length-w.length,A=y.collapseToEnd().moveForward(S),R=p.transform().moveTo({anchorKey:a,anchorOffset:l,focusKey:a,focusOffset:d}).delete().insertText(T,O).moveTo(A).apply();t.onChange(R)}}},this.onKeyDown=function(e){if(!t.props.readOnly&&!c(e)){var n=(0,D.default)(e.which),r={};if(t.tmp.isComposing&&("left"==n||"right"==n||"up"==n||"down"==n))return void e.preventDefault();r.code=e.which,r.key=n,r.isAlt=e.altKey,r.isCmd=!!I.IS_MAC&&(e.metaKey&&!e.altKey),r.isCtrl=e.ctrlKey&&!e.altKey,r.isLine=!!I.IS_MAC&&e.metaKey,r.isMeta=e.metaKey,r.isMod=I.IS_MAC?e.metaKey&&!e.altKey:e.ctrlKey&&!e.altKey,r.isModAlt=I.IS_MAC?e.metaKey&&e.altKey:e.ctrlKey&&e.altKey,r.isShift=e.shiftKey,r.isWord=I.IS_MAC?e.altKey:e.ctrlKey,("enter"==n||"backspace"==n||"delete"==n||"b"==n&&r.isMod||"i"==n&&r.isMod||"y"==n&&r.isMod||"z"==n&&r.isMod)&&e.preventDefault(),M("onKeyDown",r),t.props.onKeyDown(e,r)}},this.onPaste=function(e){if(!t.props.readOnly&&!c(e)){e.preventDefault();var n=new O.default(e.clipboardData),r=n.getData();M("onPaste",r),t.props.onPaste(e,r)}},this.onSelect=function(e){if(!t.props.readOnly&&!(t.tmp.isRendering||t.tmp.isCopying||t.tmp.isComposing||c(e))){var n=(0,C.default)(e.target),r=t.props.state,o=r.document,s=r.selection,i=n.getSelection(),a={};if(i.rangeCount){var u=i.anchorNode,l=i.anchorOffset,d=i.focusNode,f=i.focusOffset,p=t.getPoint(u,l),h=t.getPoint(d,f);if(p.key==s.anchorKey&&p.offset==s.anchorOffset&&h.key==s.focusKey&&h.offset==s.focusOffset&&s.isFocused)return;var g={anchorKey:p.key,anchorOffset:p.offset,focusKey:h.key,focusOffset:h.offset,isFocused:!0,isBackward:null};a.selection=s.merge(g).normalize(o)}else a.selection=s.merge({isFocused:!1}),a.isNative=!0;M("onSelect",{data:a,selection:a.selection.toJS()}),t.props.onSelect(e,a)}},this.render=function(){M("render");var e=t.props,n=e.className,r=e.readOnly,o=e.state,s=o.document,i=s.nodes.map(function(e){return t.renderNode(e)}).toArray(),c=u({outline:"none",whiteSpace:"pre-wrap",wordWrap:"break-word"},r?{}:{WebkitUserModify:"read-write-plaintext-only"},t.props.style),l=!I.IS_FIREFOX&&t.props.spellCheck;return v.default.createElement("div",{key:t.forces,contentEditable:!r,suppressContentEditableWarning:!0,className:n,onBeforeInput:t.onBeforeInput,onBlur:t.onBlur,onCompositionEnd:t.onCompositionEnd,onCompositionStart:t.onCompositionStart,onCopy:t.onCopy,onCut:t.onCut,onDragEnd:t.onDragEnd,onDragOver:t.onDragOver,onDragStart:t.onDragStart,onDrop:t.onDrop,onInput:t.onInput,onKeyDown:t.onKeyDown,onKeyUp:a,onPaste:t.onPaste,onSelect:t.onSelect,spellCheck:l,style:c},i)},this.renderNode=function(e){var n=t.props,r=n.editor,o=n.schema,s=n.state;return v.default.createElement(y.default,{key:e.key,node:e,schema:o,state:s,editor:r})}};e.default=K},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function o(t){if(Array.isArray(t)){for(var e=0,n=Array(t.length);e<t.length;e++)n[e]=t[e];return n}return Array.from(t)}function s(t,e){var n={};for(var r in t)e.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r]);return n}function i(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function a(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function c(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function u(){}Object.defineProperty(e,"__esModule",{value:!0});var l=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},d=n(378),f=r(d),p=n(385),h=r(p),g=n(40),y=r(g),m=n(9),k=r(m),x=n(170),v=r(x),b=n(50),_=(r(b),n(171)),w=(r(_),n(66)),O=(r(w),(0,y.default)("slate:editor")),T=["onBeforeInput","onBlur","onCopy","onCut","onDrop","onKeyDown","onPaste","onSelect"],E=function(t){function e(t){i(this,e);var n=a(this,Object.getPrototypeOf(e).call(this,t));S.call(n),n.tmp={},n.state={},n.state.plugins=n.resolvePlugins(t),n.state.schema=n.resolveSchema(n.state.plugins),n.state.state=n.onBeforeChange(t.state);var r=!0,o=!1,s=void 0;try{for(var c,u=function(){var t=c.value;n[t]=function(){for(var e=arguments.length,r=Array(e),o=0;o<e;o++)r[o]=arguments[o];n.onEvent.apply(n,[t].concat(r))}},l=T[Symbol.iterator]();!(r=(c=l.next()).done);r=!0)u()}catch(d){o=!0,s=d}finally{try{!r&&l.return&&l.return()}finally{if(o)throw s}}return n}return c(e,t),e}(k.default.Component);E.propTypes={className:k.default.PropTypes.string,onBeforeChange:k.default.PropTypes.func,onChange:k.default.PropTypes.func,onDocumentChange:k.default.PropTypes.func,onSelectionChange:k.default.PropTypes.func,placeholder:k.default.PropTypes.any,placeholderClassName:k.default.PropTypes.string,placeholderStyle:k.default.PropTypes.object,plugins:k.default.PropTypes.array,readOnly:k.default.PropTypes.bool,schema:k.default.PropTypes.object,spellCheck:k.default.PropTypes.bool,state:k.default.PropTypes.object.isRequired,style:k.default.PropTypes.object},E.defaultProps={onChange:u,onDocumentChange:u,onSelectionChange:u,plugins:[],readOnly:!1,schema:{},spellCheck:!0};var S=function(){var t=this;this.componentWillReceiveProps=function(e){if(e.plugins!=t.props.plugins){var n=t.resolvePlugins(e),r=t.resolveSchema(n);t.setState({plugins:n,schema:r})}else if(e.schema!=t.props.schema){var o=t.resolveSchema(t.state.plugins);t.setState({schema:o})}t.setState({state:t.onBeforeChange(e.state)})},this.blur=function(){var e=t.state.state.transform().blur().apply();t.onChange(e)},this.focus=function(){var e=t.state.state.transform().focus().apply();t.onChange(e)},this.getSchema=function(){return t.state.schema},this.getState=function(){return t.state.state},this.onBeforeChange=function(e){if(e==t.state.state)return e;var n=!0,r=!1,o=void 0;try{for(var s,i=t.state.plugins[Symbol.iterator]();!(n=(s=i.next()).done);n=!0){var a=s.value;if(a.onBeforeChange){var c=a.onBeforeChange(e,t);null!=c&&(e=c)}}}catch(u){r=!0,o=u}finally{try{!n&&i.return&&i.return()}finally{if(r)throw o}}return e},this.onChange=function(e){if(e!=t.state.state){e=t.onBeforeChange(e);var n=!0,r=!1,o=void 0;try{for(var s,i=t.state.plugins[Symbol.iterator]();!(n=(s=i.next()).done);n=!0){var a=s.value;if(a.onChange){var c=a.onChange(e,t);null!=c&&(e=c)}}}catch(u){r=!0,o=u}finally{try{!n&&i.return&&i.return()}finally{if(r)throw o}}t.props.onChange(e),e.document!=t.tmp.document&&(t.props.onDocumentChange(e.document,e),t.tmp.document=e.document),e.selection!=t.tmp.selection&&(t.props.onSelectionChange(e.selection,e),t.tmp.selection=e.selection)}},this.onEvent=function(e){for(var n=arguments.length,r=Array(n>1?n-1:0),o=1;o<n;o++)r[o-1]=arguments[o];var s=!0,i=!1,a=void 0;try{for(var c,u=t.state.plugins[Symbol.iterator]();!(s=(c=u.next()).done);s=!0){var l=c.value;if(l[e]){var d=l[e].apply(l,r.concat([t.state.state,t]));if(d){t.onChange(d);break}}}}catch(f){i=!0,a=f}finally{try{!s&&u.return&&u.return()}finally{if(i)throw a}}},this.render=function(){O("render");var e={},n=!0,r=!1,o=void 0;try{for(var s,i=T[Symbol.iterator]();!(n=(s=i.next()).done);n=!0){var a=s.value;e[a]=t[a]}}catch(c){r=!0,o=c}finally{try{!n&&i.return&&i.return()}finally{if(r)throw o}}return k.default.createElement(f.default,l({},e,{className:t.props.className,editor:t,onChange:t.onChange,readOnly:t.props.readOnly,schema:t.state.schema,spellCheck:t.props.spellCheck,state:t.state.state,style:t.props.style}))},this.resolvePlugins=function(t){var e=(t.onChange,t.plugins),n=s(t,["onChange","plugins"]),r=(0,h.default)(t);return[n].concat(o(e),[r])},this.resolveSchema=function(t){var e=[],n=!0,r=!1,o=void 0;try{for(var s,i=t[Symbol.iterator]();!(n=(s=i.next()).done);n=!0){var a=s.value;if(a.schema){var c=v.default.create(a.schema);e=e.concat(c.rules)}}}catch(u){r=!0,o=u}finally{try{!n&&i.return&&i.return()}finally{if(r)throw o}}var l=v.default.create({rules:e});return l}},C=!0,A=!1,R=void 0;try{for(var D,I=T[Symbol.iterator]();!(C=(D=I.next()).done);C=!0){var M=D.value;E.propTypes[M]=k.default.PropTypes.func}}catch(K){A=!0,R=K}finally{try{!C&&I.return&&I.return()}finally{if(A)throw R}}e.default=E},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function o(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0});var a=n(65),c=r(a),u=n(40),l=r(u),d=n(9),f=r(d),p=n(58),h=r(p),g=n(105),y=r(g),m=n(167),k=r(m),x=n(381),v=r(x),b=n(389),_=r(b),w=(0,l.default)("slate:node"),O=function(t){function e(t){o(this,e);var n=s(this,Object.getPrototypeOf(e).call(this,t));T.call(n);var r=t.node,i=t.schema;return n.state={},n.state.Component="text"==r.kind?null:r.getComponent(i),n}return i(e,t),e}(f.default.Component);O.propTypes={editor:f.default.PropTypes.object.isRequired,node:f.default.PropTypes.object.isRequired,schema:f.default.PropTypes.object.isRequired,state:f.default.PropTypes.object.isRequired};var T=function(){var t=this;this.debug=function(e){for(var n=arguments.length,r=Array(n>1?n-1:0),o=1;o<n;o++)r[o-1]=arguments[o];var s=t.props.node,i=s.key,a=s.kind,c=s.type,u="text"==a?i+" ("+a+")":i+" ("+c+")";w.apply(void 0,[e,""+u].concat(r))},this.componentWillReceiveProps=function(e){if("text"!=e.node.kind&&e.node!=t.props.node){var n=e.node.getComponent(e.schema);t.setState({Component:n})}},this.shouldComponentUpdate=function(e){var n=t.state.Component;if(n&&n.suppressShouldComponentUpdate)return!0;if(e.node!=t.props.node||e.state.isFocused&&e.state.selection.hasEdgeIn(e.node))return!0;if("text"!=t.props.node.kind&&t.props.state.isFocused&&t.props.state.selection.hasEdgeIn(t.props.node))return!0;if("text"==e.node.kind){var r=e.node,o=e.schema,s=e.state,i=s.document,a=i.getDescendantDecorators(r.key,o),c=r.getRanges(a),u=t.props.node,l=t.props.schema,d=t.props.state.document,f=d.getDescendantDecorators(u.key,l),p=u.getRanges(f);if(!c.equals(p))return!0}return!1},this.componentDidMount=function(){t.updateScroll()},this.componentDidUpdate=function(e,n){t.props.node!=e.node&&t.updateScroll()},this.updateScroll=function(){var e=t.props,n=e.node,r=e.state,o=r.selection;if("block"==n.kind&&"block"!=n.nodes.first().kind&&!o.isBlurred&&o.hasEndIn(n)){var s=h.default.findDOMNode(t);(0,_.default)(s),t.debug("updateScroll",s)}},this.onDragStart=function(e){var n=t.props.node,r=c.default.serializeNode(n),o=e.nativeEvent.dataTransfer;o.setData(y.default.NODE,r),t.debug("onDragStart",e)},this.render=function(){t.debug("render");var e=t.props.node;return"text"==e.kind?t.renderText():t.renderElement()},this.renderNode=function(e){return f.default.createElement(O,{key:e.key,node:e,editor:t.props.editor,schema:t.props.schema,state:t.props.state})},this.renderElement=function(){var e=t.props,n=e.editor,r=e.node,o=e.state,s=t.state.Component,i=r.nodes.map(function(e){return t.renderNode(e)}).toArray(),a={"data-key":r.key,onDragStart:t.onDragStart};if("block"==r.kind&&"block"!=r.nodes.first().kind){var c=r.getTextDirection();"rtl"==c&&(a.dir="rtl")}var u=f.default.createElement(s,{attributes:a,key:r.key,editor:n,node:r,state:o},i);return r.isVoid?f.default.createElement(v.default,t.props,u):u},this.renderText=function(){var e=t.props,n=e.node,r=e.schema,o=e.state,s=o.document,i=s.getDescendantDecorators(n.key,r),a=n.getRanges(i),c=0,u=a.map(function(e,n,r){var o=t.renderLeaf(a,e,n,c);return c+=e.text.length,o});return f.default.createElement("span",{"data-key":n.key},u)},this.renderLeaf=function(e,n,r,o){var s=t.props,i=s.node,a=s.schema,c=s.state,u=n.text,l=n.marks;return f.default.createElement(k.default,{key:i.key+"-"+r,index:r,marks:l,node:i,ranges:e,schema:a,state:c,text:u})}};e.default=O},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function o(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function i(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function a(){}Object.defineProperty(e,"__esModule",{value:!0});var c=n(167),u=r(c),l=n(17),d=r(l),f=n(108),p=r(f),h=n(9),g=r(h),y=n(58),m=(r(y),n(118)),k=(r(m),n(169)),x=function(t){function e(){var t,n,r,i;o(this,e);for(var c=arguments.length,l=Array(c),f=0;f<c;f++)l[f]=arguments[f];return n=r=s(this,(t=Object.getPrototypeOf(e)).call.apply(t,[this].concat(l))),r.onClick=function(t){t.preventDefault();var e=r.props,n=e.node,o=e.editor,s=o.getState().transform().collapseToStartOf(n).focus().apply();o.onChange(s)},r.render=function(){var t=r.props,e=t.children,n=t.node,o="block"==n.kind?"div":"span",s={position:"relative"};return g.default.createElement(o,{style:s,onClick:r.onClick},r.renderSpacer(),g.default.createElement(o,{contentEditable:!1},e))},r.renderSpacer=function(){var t=k.IS_FIREFOX?{pointerEvents:"none",width:"0px",height:"0px",lineHeight:"0px",visibility:"hidden"}:{position:"absolute",top:"0px",left:"-9999px",textIndent:"-9999px"};return g.default.createElement("span",{style:t},r.renderLeaf())},r.renderLeaf=function(){var t=r.props,e=t.node,n=t.schema,o=t.state,s=e.getTexts().first(),i=s.getRanges(),c="",l=d.default.createSet(),f=0,h=p.default.stringify({key:s.key,index:f});return g.default.createElement(u.default,{isVoid:!0,renderMark:a,key:h,schema:n,state:o,node:s,ranges:i,index:f,text:c,marks:l})},i=n,s(r,i)}return i(e,t),e}(g.default.Component);x.propTypes={children:g.default.PropTypes.any.isRequired,editor:g.default.PropTypes.object.isRequired,node:g.default.PropTypes.object.isRequired,schema:g.default.PropTypes.object.isRequired,state:g.default.PropTypes.object.isRequired},e.default=x},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,"__esModule",{value:!0}),e.findDOMNode=e.Text=e.State=e.Selection=e.Schema=e.Raw=e.Plain=e.Placeholder=e.Mark=e.Inline=e.Html=e.Editor=e.Document=e.Data=e.Character=e.Block=void 0;var o=n(379),s=r(o),i=n(168),a=r(i),c=n(21),u=r(c),l=n(35),d=r(l),f=n(36),p=r(f),h=n(16),g=r(h),y=n(27),m=r(y),k=n(17),x=r(k),v=n(170),b=r(v),_=n(49),w=r(_),O=n(50),T=r(O),E=n(22),S=r(E),C=n(386),A=r(C),R=n(387),D=r(R),I=n(107),M=r(I),K=n(388),P=r(K);e.Block=u.default,e.Character=d.default,e.Data=p.default,e.Document=g.default,e.Editor=s.default,e.Html=A.default,e.Inline=m.default,e.Mark=x.default,e.Placeholder=a.default,e.Plain=D.default,e.Raw=M.default,e.Schema=b.default,e.Selection=w.default,e.State=T.default,e.Text=S.default,e.findDOMNode=P.default,e.default={Block:u.default,Character:d.default,Data:p.default,Document:g.default,Editor:s.default,Html:A.default,Inline:m.default,Mark:x.default,Placeholder:a.default,Plain:D.default,Raw:M.default,Schema:b.default,Selection:w.default,State:T.default,Text:S.default,findDOMNode:P.default}},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function o(t){if(Array.isArray(t)){for(var e=0,n=Array(t.length);e<t.length;e++)n[e]=t[e];return n}return Array.from(t)}function s(t){return Array.isArray(t)?t:Array.from(t)}function i(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function a(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function c(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(e,"__esModule",{value:!0});var u=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),l=n(31),d=r(l),f=n(281),p=r(f),h=n(6),g=new h.Record({document:null,selection:null,steps:new h.List}),y=new h.Record({type:null,args:null}),m=["deleteAtRange","deleteBackwardAtRange","deleteForwardAtRange","insertBlockAtRange","insertFragmentAtRange","insertInlineAtRange","insertTextAtRange","addMarkAtRange","setBlockAtRange","setInlineAtRange","splitBlockAtRange","splitInlineAtRange","removeMarkAtRange","toggleMarkAtRange","unwrapBlockAtRange","unwrapInlineAtRange","wrapBlockAtRange","wrapInlineAtRange","wrapTextAtRange"],k=["removeNodeByKey","setNodeByKey"],x=["blur","collapseToAnchor","collapseToEnd","collapseToEndOf","collapseToFocus","collapseToStart","collapseToStartOf","extendBackward","extendForward","extendToEndOf","extendToStartOf","focus","moveBackward","moveForward","moveToOffsets","moveToRangeOf"],v=["delete","deleteBackward","deleteForward","insertBlock","insertFragment","insertInline","insertText","addMark","setBlock","setInline","splitBlock","splitInline","removeMark","toggleMark","unwrapBlock","unwrapInline","wrapBlock","wrapInline","wrapText"],b=["collapseToEndOfNextBlock","collapseToEndOfNextText","collapseToEndOfPreviousBlock","collapseToEndOfPreviousText","collapseToStartOfNextBlock","collapseToStartOfNextText","collapseToStartOfPreviousBlock","collapseToStartOfPreviousText","moveTo"],_=[].concat(v).concat(b),w=[].concat(m).concat(k).concat(x).concat(_),O={state:null,steps:new h.List},T=function(t){function e(){return i(this,e),a(this,Object.getPrototypeOf(e).apply(this,arguments))}return c(e,t),u(e,[{key:"apply",value:function(){var t=this,e=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],n=this,r=n.state,o=n.steps,s=r,i=s.cursorMarks,a=s.history,c=(s.selection,a),u=c.undos,l=c.redos,d=null==e.snapshot?this.shouldSnapshot():e.snapshot;if(d){var f=n.snapshot();u=u.push(f),u.size>100&&(u=u.take(100)),l=l.clear(),a=a.merge({undos:u,redos:l}),r=r.merge({history:a})}return r=o.reduce(function(e,n){return t.applyStep(e,n)},r),r.cursorMarks&&r.cursorMarks==i&&(r=r.merge({cursorMarks:null})),r=r.merge({isNative:!!e.isNative})}},{key:"applyStep",value:function(t,e){var n=e.type,r=e.args;if((0,d.default)(m,n)){var i,a=t,c=a.document,u=a.selection,l=s(r),f=l[0],p=l.slice(1);return f=f.normalize(c),c=(i=c)[n].apply(i,[f].concat(o(p))),u=u.normalize(c),t=t.merge({document:c,selection:u})}if((0,d.default)(k,n)){var h,g=t,y=g.document,v=g.selection;return y=(h=y)[n].apply(h,o(r)),v=v.normalize(y),t=t.merge({document:y,selection:v})}if((0,d.default)(x,n)){var b,w=t,O=w.document,T=w.selection;return T=(b=T)[n].apply(b,o(r)),T=T.normalize(O),t=t.merge({selection:T})}if((0,d.default)(_,n)){var E;return t=(E=t)[n].apply(E,o(r))}}},{key:"shouldSnapshot",value:function(){var t=this,e=t.state,n=t.steps,r=(e.cursorMarks,e.history),o=(e.selection,r.undos),s=(r.redos,o.peek()),i=n.every(function(t){return(0,d.default)(x,t.type)||(0,d.default)(b,t.type)});if(i)return!1;if(!s)return!0;var a=n.map(function(t){return t.type}),c=s.steps.map(function(t){return t.type}),u=(0,p.default)(a.toArray(),c.toArray());if(u.length)return!0;var l=n.every(function(t){return"insertText"==t.type})||n.every(function(t){return"deleteForward"==t.type})||n.every(function(t){return"deleteBackward"==t.type});return!l}},{key:"snapshot",value:function(){var t=this.state,e=this.steps,n=t.document,r=t.selection;return new g({document:n,selection:r,steps:e})}},{key:"undo",value:function(){var t=this,e=t.state,n=e,r=n.history,o=r,s=o.undos,i=o.redos,a=s.peek();if(!a)return e;s=s.pop();var c=t.snapshot();i=i.push(c);var u=a.document,l=a.selection;return r=r.merge({undos:s,redos:i}),e=e.merge({document:u,selection:l,history:r,isNative:!1})}},{key:"redo",value:function(){var t=this,e=t.state,n=e,r=n.history,o=r,s=o.undos,i=o.redos,a=i.peek();if(!a)return e;i=i.pop();var c=t.snapshot();s=s.push(c);var u=a.document,l=a.selection;return r=r.merge({undos:s,redos:i}),e=e.merge({document:u,selection:l,history:r,isNative:!1})}},{key:"kind",get:function(){return"transform"}}]),e}(new h.Record(O));w.forEach(function(t){T.prototype[t]=function(){for(var e=arguments.length,n=Array(e),r=0;r<e;r++)n[r]=arguments[r];var o=this,s=o,i=s.steps;return i=i.push(new y({type:t,args:n})),o=o.merge({steps:i})}}),e.default=T},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function o(t,e,n){var r=n.startKey,o=n.startOffset,s=n.endKey,i=n.endOffset;return e.key==r&&e.key==s?o<=t&&t<i:e.key==r?o<=t:e.key!=s||t<i}function s(t){if(t instanceof k.default)return t;var e=(0,O.default)(t);switch(e){case"string":case"object":return k.default.create(c(t));default:throw new Error('A `mark` argument must be a mark, an object or a string, but you passed: "'+e+'".')}}function i(t){if(t instanceof l.default)return t;var e=(0,O.default)(t);switch(e){case"string":case"object":return l.default.create(c(t));default:throw new Error('A `block` argument must be a block, an object or a string, but you passed: "'+e+'".')}}function a(t){if(t instanceof y.default)return t;var e=(0,O.default)(t);switch(e){case"string":case"object":return y.default.create(c(t));default:throw new Error('An `inline` argument must be an inline, an object or a string, but you passed: "'+e+'".')}}function c(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],e={},n=(0,O.default)(t);switch(n){case"string":e.type=t;break;case"object":for(var r in t)"data"==r?null!=t[r]&&(e[r]=p.default.create(t[r])):e[r]=t[r];break;default:throw new Error('A `properties` argument must be an object or a string, but you passed: "'+n+'".')}return e}Object.defineProperty(e,"__esModule",{value:!0});var u=n(21),l=r(u),d=n(35),f=(r(d),n(36)),p=r(f),h=n(16),g=(r(h),n(27)),y=r(g),m=n(17),k=r(m),x=n(49),v=r(x),b=n(22),_=r(b),w=n(66),O=r(w),T=n(37),E=r(T),S=n(6),C={addMarkAtRange:function(t,e){e=s(e);var n=this;if(t.isCollapsed)return n;var r=(t.startKey,t.startOffset,t.endKey,t.endOffset,n.getTextsAtRange(t));return r=r.map(function(n){var r=n.characters.map(function(r,s){if(!o(s,n,t))return r;var i=r.marks;return i=i.add(e),r.merge({marks:i})});return n.merge({characters:r})}),r.forEach(function(t){n=n.updateDescendant(t)}),n},deleteAtRange:function(t){if(t.isCollapsed)return this;var e=this,n=t.startKey,r=t.startOffset,o=t.endKey,s=t.endOffset;if(e.assertDescendant(n),e.assertDescendant(o),n==o){var i=e.getDescendant(n);return i=i.removeCharacters(r,s),e=e.updateDescendant(i),e.normalize()}var a=t.collapseToStart(),c=t.collapseToEnd(),u=e.getCommonAncestor(n,o),l=u==e;u=u.splitBlockAtRange(a,1/0),u=u.splitBlockAtRange(c,1/0);var d=u.getDescendant(n),f=u.getNextText(n),p=u.getNextText(o),h=u.getDescendant(o),g=u.getFurthestBlock(f),y=u.getFurthestBlock(h),m=u.nodes.takeUntil(function(t){return t==g}).concat(u.nodes.skipUntil(function(t){return t==y}).rest());u=u.merge({nodes:m});var k=u.getClosestBlock(d),x=u.getClosestBlock(p),v=k.nodes.concat(x.nodes);k=k.merge({nodes:v}),u=u.updateDescendant(k);for(var b=u.getClosestBlock(x);b&&1==b.nodes.size;)x=b,b=u.getClosestBlock(b);return u=u.removeDescendant(x),e=l?u:e.updateDescendant(u),e.normalize()},deleteBackwardAtRange:function(t){var e=arguments.length<=1||void 0===arguments[1]?1:arguments[1],n=this,r=t,o=r.startKey;r.startOffset;if(t.isExpanded)return n.deleteAtRange(t);if(t.isAtStartOf(n))return n;var s=n.getClosestBlock(o);if(s&&s.isVoid)return n.removeDescendant(s);var i=n.getClosestInline(o);if(i&&i.isVoid)return n.removeDescendant(i);var a=n.getDescendant(o);if(t.isAtStartOf(a)){var c=n.getPreviousText(a),u=n.getClosestBlock(c);if(u&&u.isVoid)return n.removeDescendant(u);var l=n.getClosestInline(c);return l&&l.isVoid?n.removeDescendant(l):(t=t.extendToEndOf(c),t=t.normalize(n),n.deleteAtRange(t))}return t=t.extendBackward(e),t=t.normalize(n),n.deleteAtRange(t)},deleteForwardAtRange:function(t){var e=arguments.length<=1||void 0===arguments[1]?1:arguments[1],n=this,r=t,o=r.startKey;if(t.isExpanded)return n.deleteAtRange(t);if(t.isAtEndOf(n))return n;var s=n.getClosestBlock(o);if(s&&s.isVoid)return n.removeDescendant(s);var i=n.getClosestInline(o);if(i&&i.isVoid)return n.removeDescendant(i);var a=n.getDescendant(o);if(t.isAtEndOf(a)){var c=n.getNextText(a);return t=t.extendToStartOf(c),t=t.normalize(n),n.deleteAtRange(t)}return t=t.extendForward(e),t=t.normalize(n),n.deleteAtRange(t)},insertBlockAtRange:function(t,e){e=i(e);var n=this;t.isExpanded&&(n=n.deleteAtRange(t),t=t.collapseToStart());var r=t,o=r.startKey,s=(r.startOffset,n.getClosestBlock(o)),a=n.getParent(s),c=l.default.createList([e]),u=a==n;return s.isVoid?a=a.insertChildrenAfter(s,c):s.isEmpty?(a=a.insertChildrenAfter(s,c),a=a.removeDescendant(s)):t.isAtStartOf(s)?a=a.insertChildrenBefore(s,c):t.isAtEndOf(s)?a=a.insertChildrenAfter(s,c):(n=n.splitBlockAtRange(t),a=n.getParent(s),s=n.getClosestBlock(o),c=a.nodes.takeUntil(function(t){return t==s}).push(s).push(e).concat(a.nodes.skipUntil(function(t){return t==s}).rest()),a=a.merge({nodes:c})),n=u?a:n.updateDescendant(a),n.normalize()},insertFragmentAtRange:function(t,e){t=t.normalize(this);var n=this;if(t.isExpanded&&(n=n.deleteAtRange(t),t=t.collapseToStart()),!e.length)return n;e=e.mapDescendants(function(t){return t.set("key",(0,E.default)())}),n.isInlineSplitAtRange(t)||(n=n.splitInlineAtRange(t));var r=t,o=r.startKey,s=(r.endKey,n.getClosestBlock(o)),i=n.getDescendant(o),a=void 0,c=void 0;t.isAtStartOf(n)&&(c=n.getClosestBlock(n.getTexts().first())),t.isAtStartOf(s)?c=s.getHighestChild(s.getTexts().first()):t.isAtStartOf(i)?(a=s.getHighestChild(s.getPreviousText(i)),c=s.getNextSibling(a)):(a=s.getHighestChild(i),c=s.getNextSibling(a));var u=e.getBlocks(),l=u.first(),d=u.last();if(0==s.length&&(s=s.merge({type:l.type,data:l.data})),s=a?s.insertChildrenAfter(a,l.nodes):s.insertChildrenBefore(c,l.nodes),n=n.updateDescendant(s),l==d)return n.normalize();var f=e.getHighestOnlyChildParent(l);return e=e.removeDescendant(f||l),c&&(d=d.concatChildren(s.getChildrenAfterIncluding(c)),e=e.updateDescendant(d),s=s.removeChildrenAfterIncluding(c),n=n.updateDescendant(s)),n=n.insertChildrenAfter(s,e.nodes),n.normalize()},insertInlineAtRange:function(t,e){e=a(e);var n=this;t.isExpanded&&(n=n.deleteAtRange(t),t=t.collapseToStart());var r=t,o=r.startKey,s=(r.endKey,r.startOffset,r.endOffset,n.getClosestBlock(o));if(s&&s.isVoid)return n;var i=n.getClosestInline(o);if(i&&i.isVoid)return n;n=n.splitTextAtRange(t);var c=n.getDescendant(o),u=n.getParent(o),l=u.nodes.takeUntil(function(t){return t==c}).push(c).push(e).concat(u.nodes.skipUntil(function(t){return t==c}).rest());return u=u.merge({nodes:l}),n=n.updateDescendant(u),n.normalize()},insertTextAtRange:function(t,e,n){var r=this,o=t,s=o.startKey,i=o.startOffset,a=r.hasVoidParent(s);if(a)return r;t.isExpanded&&(r=r.deleteAtRange(t),t=t.collapseToStart());var c=r.getDescendant(s);return c=c.insertText(i,e,n),r=r.updateDescendant(c)},removeMarkAtRange:function(t,e){e=s(e);var n=this;if(t.isCollapsed)return n;var r=n.getTextsAtRange(t);return r=r.map(function(n){var r=n.characters.map(function(r,s){if(!o(s,n,t))return r;var i=r.marks;return i=e?i.remove(e):i.clear(),r.merge({marks:i})});return n.merge({characters:r})}),r.forEach(function(t){n=n.updateDescendant(t)}),n},removeNodeByKey:function(t){return this.removeDescendant(t).normalize()},setBlockAtRange:function(t){var e=arguments.length<=1||void 0===arguments[1]?{}:arguments[1];e=c(e);var n=this,r=n.getBlocksAtRange(t);return r.forEach(function(t){
t=t.merge(e),n=n.updateDescendant(t)}),n.normalize()},setInlineAtRange:function(t){var e=arguments.length<=1||void 0===arguments[1]?{}:arguments[1];e=c(e);var n=this,r=n.getInlinesAtRange(t);return r.forEach(function(t){t=t.merge(e),n=n.updateDescendant(t)}),n.normalize()},setNodeByKey:function(t,e){e=c(e);var n=this,r=n.assertDescendant(t);return r=r.merge(e),n=n.updateDescendant(r)},splitBlockAtRange:function(t){var e=arguments.length<=1||void 0===arguments[1]?1:arguments[1],n=this;t.isExpanded&&(n=n.deleteAtRange(t),t=t.collapseToStart()),n=n.splitInlineAtRange(t);for(var r=t,o=r.startKey,s=n.getDescendant(o),i=n.getNextText(o),a=n.getFurthestInline(s)||s,c=n.getFurthestInline(i)||i,u=n.getClosestBlock(a),d=void 0,f=void 0,p=0;u&&p<e;){d=u.nodes.takeUntil(function(t){return t==a}).push(a),f=u.nodes.skipUntil(function(t){return t==c}),a=u.merge({nodes:d}),c=l.default.create({nodes:f,type:u.type,data:u.data});var h=n.getParent(u),g=h.nodes.takeUntil(function(t){return t.key==a.key}).push(a).push(c).concat(h.nodes.skipUntil(function(t){return t.key==a.key}).rest());n=h==n?n.merge({nodes:g}):n.updateDescendant(h.merge({nodes:g})),p++,u=n.getClosestBlock(a)}return n},splitInlineAtRange:function(t){var e=arguments.length<=1||void 0===arguments[1]?1/0:arguments[1],n=this;t.isExpanded&&(n=n.deleteAtRange(t),t=t.collapseToStart()),n=n.splitTextAtRange(t);for(var r=t,o=r.startKey,s=n.getDescendant(o),i=n.getNextText(s),a=n.getClosestInline(s),c=0;a&&c<e;){s=a.merge({nodes:y.default.createList([s])}),i=y.default.create({nodes:[i],type:a.type,data:a.data});var u=n.getParent(a),l=u.nodes.takeUntil(function(t){return t.key==s.key}).push(s).push(i).concat(u.nodes.skipUntil(function(t){return t.key==s.key}).rest());n=u==n?n.merge({nodes:l}):n.updateDescendant(u.merge({nodes:l})),c++,a=n.getClosestInline(s)}return n},splitTextAtRange:function(t){var e=this;t.isExpanded&&(e=e.deleteAtRange(t),t=t.collapseToStart());var n=t,r=n.startKey,o=n.startOffset,s=e.getDescendant(r),i=s.characters,a=i.take(o),c=i.skip(o),u=s.merge({characters:a}),l=_.default.create({characters:c}),d=e.getParent(s),f=d.nodes.takeUntil(function(t){return t.key==u.key}).push(u).push(l).concat(d.nodes.skipUntil(function(t){return t.key==u.key}).rest());return d=d.merge({nodes:f}),e=e.updateDescendant(d)},toggleMarkAtRange:function(t,e){e=s(e);var n=this;if(t.isCollapsed)return n;var r=n.getMarksAtRange(t),o=r.some(function(t){return t.equals(e)});return o?n.removeMarkAtRange(t,e):n.addMarkAtRange(t,e)},unwrapBlockAtRange:function(t,e){e=c(e);var n=this,r=n.getBlocksAtRange(t),o=r.reduce(function(t,r){var o=n.getClosest(r,function(t){return"block"==t.kind&&((!e.type||t.type==e.type)&&!(e.data&&!t.data.isSuperset(e.data)))});return o&&(t=t.add(o)),t},new S.Set);return o.forEach(function(t){var e=t.nodes.first(),o=t.nodes.last(),s=n.getParent(t),i=t.nodes.filter(function(t){return r.some(function(e){return t==e||t.hasDescendant(e)})}),a=i.first(),c=i.last(),u=void 0;if(e==a&&o==c)u=s.nodes.takeUntil(function(e){return e==t}).concat(t.nodes).concat(s.nodes.skipUntil(function(e){return e==t}).rest());else if(o==c){var l=t.nodes.takeUntil(function(t){return t==a}),d=t.merge({nodes:l});u=s.nodes.takeUntil(function(e){return e==t}).push(d).concat(i).concat(s.nodes.skipUntil(function(e){return e==t}).rest())}else if(e==a){var f=t.nodes.skipUntil(function(t){return t==c}).rest(),p=t.merge({nodes:f});u=s.nodes.takeUntil(function(e){return e==t}).concat(i).push(p).concat(s.nodes.skipUntil(function(e){return e==t}).rest())}else{var h=t.nodes.takeUntil(function(t){return t==a}),g=t.nodes.skipUntil(function(t){return t==c}).rest(),y=t.merge({nodes:h}),m=t.merge({nodes:g});u=s.nodes.takeUntil(function(e){return e==t}).push(y).concat(i).push(m).concat(s.nodes.skipUntil(function(e){return e==t}).rest())}n=s==n?n.merge({nodes:u}):n.updateDescendant(s.merge({nodes:u}))}),n.normalize()},unwrapInlineAtRange:function(t,e){e=c(e);var n=this,r=(n.getInlinesAtRange(t),this.getTexts()),o=r.reduce(function(t,r){var o=n.getClosest(r,function(t){return"inline"==t.kind&&((!e.type||t.type==e.type)&&!(e.data&&!t.data.isSuperset(e.data)))});return o&&(t=t.add(o)),t},new S.Set);return o.forEach(function(t){var e=n.getParent(t),r=e.nodes.takeUntil(function(e){return e==t}).concat(t.nodes).concat(e.nodes.skipUntil(function(e){return e==t}).rest());n=e==n?n.merge({nodes:r}):n.updateDescendant(e.merge({nodes:r}))}),n.normalize()},wrapBlockAtRange:function(t,e){e=c(e);var n=this,r=n.getBlocksAtRange(t),o=r.sort(function(t,e){var r=n.getDepth(t),o=n.getDepth(e);return r==o?0:r>o?-1:1}),s=o.first(),i=n.getDepth(s),a=r.reduce(function(t,e){var r=n.getDepth(e)==i?e:n.getClosest(e,function(t){return n.getDepth(t)==i});return t=t.push(r)},l.default.createList()),u=l.default.create({nodes:a,type:e.type,data:e.data}),d=a.first(),f=a.last(),p=n.getParent(s),h=p.nodes.takeUntil(function(t){return t==d}).push(u).concat(p.nodes.skipUntil(function(t){return t==f}).rest());return n=p==n?n.merge({nodes:h}):n.updateDescendant(p.merge({nodes:h}))},wrapInlineAtRange:function(t,e){e=c(e);var n=this;if(t.isCollapsed)return n;var r=t.collapseToStart();n=n.splitInlineAtRange(r);var o=t,s=o.startKey,i=o.startOffset,a=o.endKey,u=o.endOffset,l=(n.getDescendant(s),n.getNextText(s)),d=s!=a?t.collapseToEnd():v.default.create({anchorKey:l.key,anchorOffset:u-i,focusKey:l.key,focusOffset:u-i});n=n.splitInlineAtRange(d);var f=n.getDescendant(d.anchorKey);t=v.default.create({anchorKey:l.key,anchorOffset:0,focusKey:f.key,focusOffset:f.length});var p=n.getTextsAtRange(t),h=p.map(function(t){return n.getFurthestInline(t)||t});return h.forEach(function(t){var r=y.default.create({nodes:[t],type:e.type,data:e.data}),o=n.getParent(t),s=o.nodes.takeUntil(function(e){return e==t}).push(r).concat(o.nodes.skipUntil(function(e){return e==t}).rest());n=o==n?n.merge({nodes:s}):n.updateDescendant(o.merge({nodes:s}))}),n.normalize()},wrapTextAtRange:function(t,e){var n=arguments.length<=2||void 0===arguments[2]?e:arguments[2],r=this,o=t.startKey,s=t.endKey,i=t.collapseToStart();r=r.insertTextAtRange(i,e);var a=t.collapseToEnd();return o==s&&(a=a.moveForward(e.length)),r=r.insertTextAtRange(a,n)}};e.default=C},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function o(){function t(t,e){if(t.isNative)return t;var n=e.getSchema();return t.normalize(n)}function e(t,e,n,r){var o=n.document,s=n.startKey,i=n.startOffset,a=n.startText,c=r.getSchema(),l=o.getDescendantDecorators(s,c),d=a.getDecorations(l),f=d.get(i-1),p=u.default.create({text:t.data,marks:f&&f.marks}),h=d.slice(0,i).push(p).concat(d.slice(i)),g=n.transform().insertText(t.data).apply(),y=g.startText,m=y.getDecorations(l),k=n.isCollapsed&&""!=n.startText.text&&null==n.cursorMarks&&h.equals(m);return k&&(g=g.merge({isNative:k})),k||t.preventDefault(),v("onBeforeInput",{data:e,isNative:k}),g}function n(t,e,n){var r=!0;return v("onBlur",{data:e,isNative:r}),n.transform().blur().apply({isNative:r})}function r(t,e,n){v("onCopy",e),i(t,e,n)}function o(t,e,n,r){v("onCut",e),i(t,e,n);var o=(0,x.default)(t.target);o.requestAnimationFrame(function(){var t=r.getState().transform().delete().apply();r.onChange(t)})}function i(t,e,n){var r=(0,x.default)(t.target),o=r.getSelection();if(o.rangeCount){var s=e.fragment,i=a.default.serializeNode(s),c=o.getRangeAt(0),u=c.cloneContents(),l=r.document.createElement("span"),d=u.childNodes[0],f=d.textContent.slice(0,1),p=r.document.createTextNode(f),h=d.textContent.slice(1);d.textContent=h,l.appendChild(p),l.setAttribute("data-slate-fragment",i),u.insertBefore(l,d);var g=r.document.querySelector("body"),y=r.document.createElement("div");y.setAttribute("contenteditable",!0),y.style.position="absolute",y.style.left="-9999px",y.appendChild(u),g.appendChild(y);var m=r.document.createRange();m.selectNodeContents(y),o.removeAllRanges(),o.addRange(m),r.requestAnimationFrame(function(){g.removeChild(y),o.removeAllRanges(),o.addRange(c)})}}function c(t,e,n){switch(v("onDrop",{data:e}),e.type){case"text":case"html":return d(t,e,n);case"fragment":return l(t,e,n)}}function l(t,e,n){v("onDropFragment",{data:e});var r=n.selection,o=e.fragment,s=e.target,i=e.isInternal;i&&r.endKey==s.endKey&&r.endOffset<s.endOffset&&(s=s.moveBackward(r.startKey==r.endKey?r.endOffset-r.startOffset:r.endOffset));var a=n.transform();return i&&(a=a.delete()),a.moveTo(s).insertFragment(o).apply()}function d(t,e,n){v("onDropText",{data:e});var r=e.text,o=e.target,s=n.transform().moveTo(o);return r.split("\n").forEach(function(t,e){e>0&&(s=s.splitBlock()),s=s.insertText(t)}),s.apply()}function f(t,e,n){switch(v("onKeyDown",{data:e}),e.key){case"enter":return h(t,e,n);case"backspace":return y(t,e,n);case"delete":return k(t,e,n);case"y":return b(t,e,n);case"z":return _(t,e,n)}}function h(t,e,n){v("onKeyDownEnter",{data:e});var r=n.document,o=n.startKey,s=n.startBlock;if(s&&s.isVoid){var i=r.getNextText(o);if(!i)return;return n.transform().collapseToStartOf(i).apply()}return n.transform().splitBlock().apply()}function y(t,e,n){if(v("onKeyDownBackspace",{data:e}),n.isExpanded)return n.transform().delete().apply();var r=n.startOffset,o=n.startBlock,s=o.text,i=void 0;return i=e.isWord?m.default.getWordOffsetBackward(s,r):e.isLine?r:m.default.getCharOffsetBackward(s,r),n.transform().deleteBackward(i).apply()}function k(t,e,n){if(v("onKeyDownDelete",{data:e}),n.isExpanded)return n.transform().delete().apply();var r=n.startOffset,o=n.startBlock,s=o.text,i=void 0;return i=e.isWord?m.default.getWordOffsetForward(s,r):e.isLine?s.length-r:m.default.getCharOffsetForward(s,r),n.transform().deleteForward(i).apply()}function b(t,e,n){if(e.isMod)return v("onKeyDownY",{data:e}),n.transform().redo()}function _(t,e,n){if(e.isMod)return v("onKeyDownZ",{data:e}),n.transform()[e.isShift?"redo":"undo"]()}function w(t,e,n){switch(v("onPaste",{data:e}),e.type){case"fragment":return O(t,e,n);case"text":case"html":return T(t,e,n)}}function O(t,e,n){return v("onPasteFragment",{data:e}),n.transform().insertFragment(e.fragment).apply()}function T(t,e,n){v("onPasteText",{data:e});var r=n.transform();return e.text.split("\n").forEach(function(t,e){e>0&&(r=r.splitBlock()),r=r.insertText(t)}),r.apply()}function E(t,e,n){var r=e.selection;return v("onSelect",{data:e,selection:r.toJS()}),n.transform().moveTo(r).focus().apply()}var S=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],C=S.placeholder,A=S.placeholderClassName,R=S.placeholderStyle,D={match:function(t){return"block"==t.kind},render:function(t){return g.default.createElement("div",s({},t.attributes,{style:{position:"relative"}}),t.children,C?g.default.createElement(p.default,{className:A,node:t.node,parent:t.state.document,state:t.state,style:R},C):null)}},I={match:function(t){return"inline"==t.kind},render:function(t){return g.default.createElement("span",s({},t.attributes,{style:{position:"relative"}}),t.children)}},M={match:function(t){return"document"==t.kind},validate:function(t){var e=t.nodes,n=e.filter(function(t){return"block"!=t.kind});return n.size?n:null},normalize:function(t,e,n){return n.reduce(function(t,e){return t.removeNodeByKey(e.key)},t)}},K={match:function(t){return"block"==t.kind},validate:function(t){var e=t.nodes,n=e.filter(function(t){return"block"!=t.kind&&"inline"!=t.kind&&"text"!=t.kind});return n.size?n:null},normalize:function(t,e,n){return n.reduce(function(t,e){return t.removeNodeByKey(e.key)},t)}},P={match:function(t){return"inline"==t.kind},validate:function(t){var e=t.nodes,n=e.filter(function(t){return"inline"!=t.kind&&"text"!=t.kind});return n.size?n:null},normalize:function(t,e,n){return n.reduce(function(t,e){return t.removeNodeByKey(e.key)},t)}},N={rules:[D,I,M,K,P]};return{onBeforeChange:t,onBeforeInput:e,onBlur:n,onCopy:r,onCut:o,onDrop:c,onKeyDown:f,onPaste:w,onSelect:E,schema:N}}Object.defineProperty(e,"__esModule",{value:!0});var s=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},i=n(65),a=r(i),c=n(35),u=r(c),l=n(40),d=r(l),f=n(168),p=r(f),h=n(9),g=r(h),y=n(390),m=r(y),k=n(54),x=r(k),v=(0,d.default)("slate:core");e.default=o},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function o(t){if(Array.isArray(t)){for(var e=0,n=Array(t.length);e<t.length;e++)n[e]=t[e];return n}return Array.from(t)}function s(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function i(t){return h.default.cloneElement(t,{key:S++})}Object.defineProperty(e,"__esModule",{value:!0});var a=n(21),c=(r(a),n(16)),u=(r(c),n(27)),l=(r(u),n(17)),d=(r(l),n(107)),f=r(d),p=n(9),h=r(p),g=n(286),y=r(g),m=n(50),k=(r(m),n(22)),x=(r(k),n(172)),v=r(x),b=n(66),_=r(b),w=n(6),O=new w.Record({kind:"string",text:""}),T={deserialize:function(t){return"br"==t.tagName?{kind:"text",text:"\n"}:"text"==t.type?{kind:"text",text:t.data}:void 0},serialize:function(t,e){if("string"==t.kind)return e.split("\n").reduce(function(t,e,n){return 0!=n&&t.push(h.default.createElement("br",null)),t.push(e),t},[])}},E=function t(){var e=this,n=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];s(this,t),this.deserialize=function(t){var n=v.default.load(t).root(),r=n.children().toArray(),o=e.deserializeElements(r);o=o.reduce(function(t,e,n,r){if("block"==e.kind)return t.push(e),t;if(n>0&&"block"!=r[n-1].kind){var o=t[t.length-1];return o.nodes.push(e),t}var s={kind:"block",type:"paragraph",nodes:[e]};return t.push(s),t},[]);var s=f.default.deserialize({nodes:o},{terse:!0});return s},this.deserializeElements=function(){var t=arguments.length<=0||void 0===arguments[0]?[]:arguments[0],n=[];return t.forEach(function(t){var r=e.deserializeElement(t);switch((0,_.default)(r)){case"array":n=n.concat(r);break;case"object":n.push(r);break;case"null":case"undefined":return;default:throw new Error('A rule returned an invalid deserialized representation: "'+r+'".')}}),n},this.deserializeElement=function(t){var n=void 0,r=function(t){switch((0,_.default)(t)){case"array":return e.deserializeElements(t);case"object":return e.deserializeElement(t);case"null":case"undefined":return;default:throw new Error('The `next` argument was called with invalid children: "'+t+'".')}},o=!0,s=!1,i=void 0;try{for(var a,c=e.rules[Symbol.iterator]();!(o=(a=c.next()).done);o=!0){var u=a.value;if(u.deserialize){var l=u.deserialize(t,r);l&&(n="mark"==l.kind?e.deserializeMark(l):l)}}}catch(d){s=!0,i=d}finally{try{!o&&c.return&&c.return()}finally{if(s)throw i}}return n||r(t.children)},this.deserializeMark=function(t){var n=t.type,r=t.data,o=function t(o){return"mark"==o.kind?e.deserializeMark(o):("text"==o.kind?(o.ranges||(o.ranges=[{text:o.text}]),o.ranges=o.ranges.map(function(t){return t.marks=t.marks||[],t.marks.push({type:n,data:r}),t})):o.nodes=o.nodes.map(t),o)};return t.nodes.reduce(function(t,e){var n=o(e);return Array.isArray(n)?t.concat(n):(t.push(n),t)},[])},this.serialize=function(t){var n=t.document,r=n.nodes.map(e.serializeNode),o=y.default.renderToStaticMarkup(h.default.createElement("body",null,r)),s=o.slice(6,-7);return s},this.serializeNode=function(t){if("text"==t.kind){var n=t.getRanges();return n.map(e.serializeRange)}var r=t.nodes.map(e.serializeNode),o=!0,s=!1,a=void 0;try{for(var c,u=e.rules[Symbol.iterator]();!(o=(c=u.next()).done);o=!0){var l=c.value;if(l.serialize){var d=l.serialize(t,r);if(d)return i(d)}}}catch(f){s=!0,a=f}finally{try{!o&&u.return&&u.return()}finally{if(s)throw a}}throw new Error('No serializer defined for node of type "'+t.type+'".')},this.serializeRange=function(t){var n=new O({text:t.text}),r=e.serializeString(n);return t.marks.reduce(function(t,n){var r=!0,o=!1,s=void 0;try{for(var a,c=e.rules[Symbol.iterator]();!(r=(a=c.next()).done);r=!0){var u=a.value;if(u.serialize){var l=u.serialize(n,t);if(l)return i(l)}}}catch(d){o=!0,s=d}finally{try{!r&&c.return&&c.return()}finally{if(o)throw s}}throw new Error('No serializer defined for mark of type "'+n.type+'".')},r)},this.serializeString=function(t){var n=!0,r=!1,o=void 0;try{for(var s,i=e.rules[Symbol.iterator]();!(n=(s=i.next()).done);n=!0){var a=s.value;if(a.serialize){var c=a.serialize(t,t.text);if(c)return c}}}catch(u){r=!0,o=u}finally{try{!n&&i.return&&i.return()}finally{if(r)throw o}}},this.rules=[].concat(o(n.rules||[]),[T])},S=0;e.default=E},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function o(t){return p.default.create({document:d.default.create({nodes:t.split("\n").map(s)})})}function s(t){return u.default.create({type:"line",nodes:[g.default.create({characters:t.split("").map(i)})]})}function i(t){return{text:t}}function a(t){return t.document.nodes.map(function(t){return t.text}).join("\n")}Object.defineProperty(e,"__esModule",{value:!0});var c=n(21),u=r(c),l=n(16),d=r(l),f=n(50),p=r(f),h=n(22),g=r(h);e.default={deserialize:o,serialize:a}},function(t,e){"use strict";function n(t){var e=window.document.querySelector('[data-key="'+t.key+'"]');if(!e)throw new Error('Unable to find a dom node for "'+t.key+'". This is\noften because of forgetting to add `props.attributes` to a component\nreturned from `renderNode`.');return e}Object.defineProperty(e,"__esModule",{value:!0}),e.default=n},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function o(t,e){for(var n=(0,c.default)(t),r=t.getBoundingClientRect(),o=t.parentNode;o!=n.document.body;){var s=o.getBoundingClientRect(),i=e.margin,a=0,u=0;r.top<s.top+i?u=r.top-s.top-i:r.bottom>s.bottom-i&&(u=r.bottom-s.bottom+i),r.left<s.left+i?a=r.left-s.left-i:r.right>s.right-i&&(a=r.right-s.right+i),o.scrollTop+=u,o.scrollLeft+=a,o=o.parentNode}return r}function s(t,e,n){var r=(0,c.default)(t),o=e.margin,s=0,i=0;n.top<0+o?i=n.top-o:n.bottom>r.innerHeight-o&&(i=n.bottom-r.innerHeight+o),n.left<0+o?s=n.left-o:n.right>r.innerWidth-o&&(s=n.right-r.innerWidth+o),r.scrollBy(s,i)}function i(t,e){e=e||{},e.margin=e.margin||0;var n=o(t,e);s(t,e,n)}Object.defineProperty(e,"__esModule",{value:!0});var a=n(54),c=r(a);e.default=i},function(t,e,n){"use strict";function r(t){return p<=t&&t<=h}function o(t,e){if(g.test(t))return!1;if(y.test(t)){var n=e.charAt(0),r=s(n),i=e.slice(r);if(o(n,i))return!0}return!m.test(t)}function s(t){return r(t.charCodeAt(0))?2:1}function i(t){var e=t.charAt(0);return s(e)}function a(t,e){return t=t.slice(0,e),t=(0,f.reverse)(t),i(t)}function c(t,e){return t=t.slice(e),i(t)}function u(t){for(var e=0,n=0,r=!1,i=void 0;i=t.charAt(n);){var a=s(i),c=t.slice(n+a);if(o(i,c))r=!0,e++;else{if(r)break;e++}n+=a}return e}function l(t,e){return t=t.slice(0,e),t=(0,f.reverse)(t),u(t)}function d(t,e){return t=t.slice(e),u(t)}Object.defineProperty(e,"__esModule",{value:!0});var f=n(199),p=55296,h=57343,g=/\s/,y=/['\u2018\u2019]/,m=/[\u0021-\u0023\u0025-\u002A\u002C-\u002F\u003A\u003B\u003F\u0040\u005B-\u005D\u005F\u007B\u007D\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u0AF0\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166D\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E3B\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]/;e.default={getCharOffsetForward:c,getCharOffsetBackward:a,getWordOffsetBackward:l,getWordOffsetForward:d}},function(t,e,n){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function o(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(e,"__esModule",{value:!0});var s=function(){function t(t,e){var n=[],r=!0,o=!1,s=void 0;try{for(var i,a=t[Symbol.iterator]();!(r=(i=a.next()).done)&&(n.push(i.value),!e||n.length!==e);r=!0);}catch(c){o=!0,s=c}finally{try{!r&&a.return&&a.return()}finally{if(o)throw s}}return n}return function(e,n){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),i=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),a=n(65),c=r(a),u=n(105),l=r(u),d=/data-slate-fragment="([^\s]+)"/,f=function(){function t(e){o(this,t),this.data=e,this.cache={}}return i(t,[{key:"getData",value:function(){var t=this.getType(),e={};switch(e.type=t,t){case"files":e.files=this.getFiles();break;case"fragment":e.fragment=this.getFragment();break;case"html":e.html=this.getHtml(),e.text=this.getText();break;case"node":e.node=this.getNode();break;case"text":e.text=this.getText()}return e}},{key:"getFiles",value:function(){if("files"in this.cache)return this.cache.files;var t=this.data,e=void 0;if(t.items&&t.items.length){var n=Array.from(t.items).map(function(t){return"file"==t.kind?t.getAsFile():null}).filter(function(t){return t});n.length&&(e=n)}return t.files&&t.files.length&&(e=Array.from(t.files)),this.cache.files=e,e}},{key:"getFragment",value:function(){if("fragment"in this.cache)return this.cache.fragment;var t=this.getHtml(),e=this.data.getData(l.default.FRAGMENT),n=void 0;if(!e&&t&&~t.indexOf('<span data-slate-fragment="')){var r=d.exec(t),o=s(r,2),i=(o[0],o[1]);e=i}return e&&(n=c.default.deserializeNode(e)),this.cache.fragment=n,n}},{key:"getHtml",value:function(){if("html"in this.cache)return this.cache.html;var t=void 0,e=this.data.getData("text/html");return""!=e&&(t=e),this.cache.html=t,t}},{key:"getNode",value:function(){if("node"in this.cache)return this.cache.node;var t=this.data.getData(l.default.NODE),e=void 0;return t&&(e=c.default.deserializeNode(t)),this.cache.node=e,e}},{key:"getText",value:function(){if("text"in this.cache)return this.cache.text;var t=void 0,e=this.data.getData("text/plain");return""!=e&&(t=e),this.cache.text=t,t}},{key:"getType",value:function(){return this.hasFragment()?"fragment":this.hasNode()?"node":this.hasFiles()?"files":this.hasHtml()?"html":this.hasText()?"text":"unknown"}},{key:"hasFiles",value:function(){return null!=this.getFiles()}},{key:"hasHtml",value:function(){return null!=this.getHtml()}},{key:"hasText",value:function(){return null!=this.getText()}},{key:"hasFragment",value:function(){return null!=this.getFragment()}},{key:"hasNode",value:function(){return null!=this.getFragment()}}]),t}();e.default=f},function(t,e,n){var r;!function(o,s){"use strict";var i="0.7.10",a="",c="?",u="function",l="undefined",d="object",f="string",p="major",h="model",g="name",y="type",m="vendor",k="version",x="architecture",v="console",b="mobile",_="tablet",w="smarttv",O="wearable",T="embedded",E={extend:function(t,e){for(var n in e)"browser cpu device engine os".indexOf(n)!==-1&&e[n].length%2===0&&(t[n]=e[n].concat(t[n]));return t},has:function(t,e){return"string"==typeof t&&e.toLowerCase().indexOf(t.toLowerCase())!==-1},lowerize:function(t){return t.toLowerCase()},major:function(t){return typeof t===f?t.split(".")[0]:s}},S={rgx:function(){for(var t,e,n,r,o,i,a,c=0,f=arguments;c<f.length&&!i;){var p=f[c],h=f[c+1];if(typeof t===l){t={};for(r in h)h.hasOwnProperty(r)&&(o=h[r],typeof o===d?t[o[0]]=s:t[o]=s)}for(e=n=0;e<p.length&&!i;)if(i=p[e++].exec(this.getUA()))for(r=0;r<h.length;r++)a=i[++n],o=h[r],typeof o===d&&o.length>0?2==o.length?typeof o[1]==u?t[o[0]]=o[1].call(this,a):t[o[0]]=o[1]:3==o.length?typeof o[1]!==u||o[1].exec&&o[1].test?t[o[0]]=a?a.replace(o[1],o[2]):s:t[o[0]]=a?o[1].call(this,a,o[2]):s:4==o.length&&(t[o[0]]=a?o[3].call(this,a.replace(o[1],o[2])):s):t[o]=a?a:s;c+=2}return t},str:function(t,e){for(var n in e)if(typeof e[n]===d&&e[n].length>0){for(var r=0;r<e[n].length;r++)if(E.has(e[n][r],t))return n===c?s:n}else if(E.has(e[n],t))return n===c?s:n;return t}},C={browser:{oldsafari:{version:{"1.0":"/8",1.2:"/1",1.3:"/3","2.0":"/412","2.0.2":"/416","2.0.3":"/417","2.0.4":"/419","?":"/"}}},device:{amazon:{model:{"Fire Phone":["SD","KF"]}},sprint:{model:{"Evo Shift 4G":"7373KT"},vendor:{HTC:"APA",Sprint:"Sprint"}}},os:{windows:{version:{ME:"4.90","NT 3.11":"NT3.51","NT 4.0":"NT4.0",2000:"NT 5.0",XP:["NT 5.1","NT 5.2"],Vista:"NT 6.0",7:"NT 6.1",8:"NT 6.2",8.1:"NT 6.3",10:["NT 6.4","NT 10.0"],RT:"ARM"}}}},A={browser:[[/(opera\smini)\/([\w\.-]+)/i,/(opera\s[mobiletab]+).+version\/([\w\.-]+)/i,/(opera).+version\/([\w\.]+)/i,/(opera)[\/\s]+([\w\.]+)/i],[g,k],[/\s(opr)\/([\w\.]+)/i],[[g,"Opera"],k],[/(kindle)\/([\w\.]+)/i,/(lunascape|maxthon|netfront|jasmine|blazer)[\/\s]?([\w\.]+)*/i,/(avant\s|iemobile|slim|baidu)(?:browser)?[\/\s]?([\w\.]*)/i,/(?:ms|\()(ie)\s([\w\.]+)/i,/(rekonq)\/([\w\.]+)*/i,/(chromium|flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs)\/([\w\.-]+)/i],[g,k],[/(trident).+rv[:\s]([\w\.]+).+like\sgecko/i],[[g,"IE"],k],[/(edge)\/((\d+)?[\w\.]+)/i],[g,k],[/(yabrowser)\/([\w\.]+)/i],[[g,"Yandex"],k],[/(comodo_dragon)\/([\w\.]+)/i],[[g,/_/g," "],k],[/(chrome|omniweb|arora|[tizenoka]{5}\s?browser)\/v?([\w\.]+)/i,/(qqbrowser)[\/\s]?([\w\.]+)/i],[g,k],[/(uc\s?browser)[\/\s]?([\w\.]+)/i,/ucweb.+(ucbrowser)[\/\s]?([\w\.]+)/i,/JUC.+(ucweb)[\/\s]?([\w\.]+)/i],[[g,"UCBrowser"],k],[/(dolfin)\/([\w\.]+)/i],[[g,"Dolphin"],k],[/((?:android.+)crmo|crios)\/([\w\.]+)/i],[[g,"Chrome"],k],[/XiaoMi\/MiuiBrowser\/([\w\.]+)/i],[k,[g,"MIUI Browser"]],[/android.+version\/([\w\.]+)\s+(?:mobile\s?safari|safari)/i],[k,[g,"Android Browser"]],[/FBAV\/([\w\.]+);/i],[k,[g,"Facebook"]],[/fxios\/([\w\.-]+)/i],[k,[g,"Firefox"]],[/version\/([\w\.]+).+?mobile\/\w+\s(safari)/i],[k,[g,"Mobile Safari"]],[/version\/([\w\.]+).+?(mobile\s?safari|safari)/i],[k,g],[/webkit.+?(mobile\s?safari|safari)(\/[\w\.]+)/i],[g,[k,S.str,C.browser.oldsafari.version]],[/(konqueror)\/([\w\.]+)/i,/(webkit|khtml)\/([\w\.]+)/i],[g,k],[/(navigator|netscape)\/([\w\.-]+)/i],[[g,"Netscape"],k],[/(swiftfox)/i,/(icedragon|iceweasel|camino|chimera|fennec|maemo\sbrowser|minimo|conkeror)[\/\s]?([\w\.\+]+)/i,/(firefox|seamonkey|k-meleon|icecat|iceape|firebird|phoenix)\/([\w\.-]+)/i,/(mozilla)\/([\w\.]+).+rv\:.+gecko\/\d+/i,/(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir)[\/\s]?([\w\.]+)/i,/(links)\s\(([\w\.]+)/i,/(gobrowser)\/?([\w\.]+)*/i,/(ice\s?browser)\/v?([\w\._]+)/i,/(mosaic)[\/\s]([\w\.]+)/i],[g,k]],cpu:[[/(?:(amd|x(?:(?:86|64)[_-])?|wow|win)64)[;\)]/i],[[x,"amd64"]],[/(ia32(?=;))/i],[[x,E.lowerize]],[/((?:i[346]|x)86)[;\)]/i],[[x,"ia32"]],[/windows\s(ce|mobile);\sppc;/i],[[x,"arm"]],[/((?:ppc|powerpc)(?:64)?)(?:\smac|;|\))/i],[[x,/ower/,"",E.lowerize]],[/(sun4\w)[;\)]/i],[[x,"sparc"]],[/((?:avr32|ia64(?=;))|68k(?=\))|arm(?:64|(?=v\d+;))|(?=atmel\s)avr|(?:irix|mips|sparc)(?:64)?(?=;)|pa-risc)/i],[[x,E.lowerize]]],device:[[/\((ipad|playbook);[\w\s\);-]+(rim|apple)/i],[h,m,[y,_]],[/applecoremedia\/[\w\.]+ \((ipad)/],[h,[m,"Apple"],[y,_]],[/(apple\s{0,1}tv)/i],[[h,"Apple TV"],[m,"Apple"]],[/(archos)\s(gamepad2?)/i,/(hp).+(touchpad)/i,/(kindle)\/([\w\.]+)/i,/\s(nook)[\w\s]+build\/(\w+)/i,/(dell)\s(strea[kpr\s\d]*[\dko])/i],[m,h,[y,_]],[/(kf[A-z]+)\sbuild\/[\w\.]+.*silk\//i],[h,[m,"Amazon"],[y,_]],[/(sd|kf)[0349hijorstuw]+\sbuild\/[\w\.]+.*silk\//i],[[h,S.str,C.device.amazon.model],[m,"Amazon"],[y,b]],[/\((ip[honed|\s\w*]+);.+(apple)/i],[h,m,[y,b]],[/\((ip[honed|\s\w*]+);/i],[h,[m,"Apple"],[y,b]],[/(blackberry)[\s-]?(\w+)/i,/(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|huawei|meizu|motorola|polytron)[\s_-]?([\w-]+)*/i,/(hp)\s([\w\s]+\w)/i,/(asus)-?(\w+)/i],[m,h,[y,b]],[/\(bb10;\s(\w+)/i],[h,[m,"BlackBerry"],[y,b]],[/android.+(transfo[prime\s]{4,10}\s\w+|eeepc|slider\s\w+|nexus 7)/i],[h,[m,"Asus"],[y,_]],[/(sony)\s(tablet\s[ps])\sbuild\//i,/(sony)?(?:sgp.+)\sbuild\//i],[[m,"Sony"],[h,"Xperia Tablet"],[y,_]],[/(?:sony)?(?:(?:(?:c|d)\d{4})|(?:so[-l].+))\sbuild\//i],[[m,"Sony"],[h,"Xperia Phone"],[y,b]],[/\s(ouya)\s/i,/(nintendo)\s([wids3u]+)/i],[m,h,[y,v]],[/android.+;\s(shield)\sbuild/i],[h,[m,"Nvidia"],[y,v]],[/(playstation\s[34portablevi]+)/i],[h,[m,"Sony"],[y,v]],[/(sprint\s(\w+))/i],[[m,S.str,C.device.sprint.vendor],[h,S.str,C.device.sprint.model],[y,b]],[/(lenovo)\s?(S(?:5000|6000)+(?:[-][\w+]))/i],[m,h,[y,_]],[/(htc)[;_\s-]+([\w\s]+(?=\))|\w+)*/i,/(zte)-(\w+)*/i,/(alcatel|geeksphone|huawei|lenovo|nexian|panasonic|(?=;\s)sony)[_\s-]?([\w-]+)*/i],[m,[h,/_/g," "],[y,b]],[/(nexus\s9)/i],[h,[m,"HTC"],[y,_]],[/[\s\(;](xbox(?:\sone)?)[\s\);]/i],[h,[m,"Microsoft"],[y,v]],[/(kin\.[onetw]{3})/i],[[h,/\./g," "],[m,"Microsoft"],[y,b]],[/\s(milestone|droid(?:[2-4x]|\s(?:bionic|x2|pro|razr))?(:?\s4g)?)[\w\s]+build\//i,/mot[\s-]?(\w+)*/i,/(XT\d{3,4}) build\//i,/(nexus\s[6])/i],[h,[m,"Motorola"],[y,b]],[/android.+\s(mz60\d|xoom[\s2]{0,2})\sbuild\//i],[h,[m,"Motorola"],[y,_]],[/android.+((sch-i[89]0\d|shw-m380s|gt-p\d{4}|gt-n8000|sgh-t8[56]9|nexus 10))/i,/((SM-T\w+))/i],[[m,"Samsung"],h,[y,_]],[/((s[cgp]h-\w+|gt-\w+|galaxy\snexus|sm-n900))/i,/(sam[sung]*)[\s-]*(\w+-?[\w-]*)*/i,/sec-((sgh\w+))/i],[[m,"Samsung"],h,[y,b]],[/(samsung);smarttv/i],[m,h,[y,w]],[/\(dtv[\);].+(aquos)/i],[h,[m,"Sharp"],[y,w]],[/sie-(\w+)*/i],[h,[m,"Siemens"],[y,b]],[/(maemo|nokia).*(n900|lumia\s\d+)/i,/(nokia)[\s_-]?([\w-]+)*/i],[[m,"Nokia"],h,[y,b]],[/android\s3\.[\s\w;-]{10}(a\d{3})/i],[h,[m,"Acer"],[y,_]],[/android\s3\.[\s\w;-]{10}(lg?)-([06cv9]{3,4})/i],[[m,"LG"],h,[y,_]],[/(lg) netcast\.tv/i],[m,h,[y,w]],[/(nexus\s[45])/i,/lg[e;\s\/-]+(\w+)*/i],[h,[m,"LG"],[y,b]],[/android.+(ideatab[a-z0-9\-\s]+)/i],[h,[m,"Lenovo"],[y,_]],[/linux;.+((jolla));/i],[m,h,[y,b]],[/((pebble))app\/[\d\.]+\s/i],[m,h,[y,O]],[/android.+;\s(glass)\s\d/i],[h,[m,"Google"],[y,O]],[/android.+(\w+)\s+build\/hm\1/i,/android.+(hm[\s\-_]*note?[\s_]*(?:\d\w)?)\s+build/i,/android.+(mi[\s\-_]*(?:one|one[\s_]plus)?[\s_]*(?:\d\w)?)\s+build/i],[[h,/_/g," "],[m,"Xiaomi"],[y,b]],[/\s(tablet)[;\/\s]/i,/\s(mobile)[;\/\s]/i],[[y,E.lowerize],m,h]],engine:[[/windows.+\sedge\/([\w\.]+)/i],[k,[g,"EdgeHTML"]],[/(presto)\/([\w\.]+)/i,/(webkit|trident|netfront|netsurf|amaya|lynx|w3m)\/([\w\.]+)/i,/(khtml|tasman|links)[\/\s]\(?([\w\.]+)/i,/(icab)[\/\s]([23]\.[\d\.]+)/i],[g,k],[/rv\:([\w\.]+).*(gecko)/i],[k,g]],os:[[/microsoft\s(windows)\s(vista|xp)/i],[g,k],[/(windows)\snt\s6\.2;\s(arm)/i,/(windows\sphone(?:\sos)*|windows\smobile|windows)[\s\/]?([ntce\d\.\s]+\w)/i],[g,[k,S.str,C.os.windows.version]],[/(win(?=3|9|n)|win\s9x\s)([nt\d\.]+)/i],[[g,"Windows"],[k,S.str,C.os.windows.version]],[/\((bb)(10);/i],[[g,"BlackBerry"],k],[/(blackberry)\w*\/?([\w\.]+)*/i,/(tizen)[\/\s]([\w\.]+)/i,/(android|webos|palm\sos|qnx|bada|rim\stablet\sos|meego|contiki)[\/\s-]?([\w\.]+)*/i,/linux;.+(sailfish);/i],[g,k],[/(symbian\s?os|symbos|s60(?=;))[\/\s-]?([\w\.]+)*/i],[[g,"Symbian"],k],[/\((series40);/i],[g],[/mozilla.+\(mobile;.+gecko.+firefox/i],[[g,"Firefox OS"],k],[/(nintendo|playstation)\s([wids34portablevu]+)/i,/(mint)[\/\s\(]?(\w+)*/i,/(mageia|vectorlinux)[;\s]/i,/(joli|[kxln]?ubuntu|debian|[open]*suse|gentoo|(?=\s)arch|slackware|fedora|mandriva|centos|pclinuxos|redhat|zenwalk|linpus)[\/\s-]?([\w\.-]+)*/i,/(hurd|linux)\s?([\w\.]+)*/i,/(gnu)\s?([\w\.]+)*/i],[g,k],[/(cros)\s[\w]+\s([\w\.]+\w)/i],[[g,"Chromium OS"],k],[/(sunos)\s?([\w\.]+\d)*/i],[[g,"Solaris"],k],[/\s([frentopc-]{0,4}bsd|dragonfly)\s?([\w\.]+)*/i],[g,k],[/(ip[honead]+)(?:.*os\s([\w]+)*\slike\smac|;\sopera)/i],[[g,"iOS"],[k,/_/g,"."]],[/(mac\sos\sx)\s?([\w\s\.]+\w)*/i,/(macintosh|mac(?=_powerpc)\s)/i],[[g,"Mac OS"],[k,/_/g,"."]],[/((?:open)?solaris)[\/\s-]?([\w\.]+)*/i,/(haiku)\s(\w+)/i,/(aix)\s((\d)(?=\.|\)|\s)[\w\.]*)*/i,/(plan\s9|minix|beos|os\/2|amigaos|morphos|risc\sos|openvms)/i,/(unix)\s?([\w\.]+)*/i],[g,k]]
},R=function(t,e){if(!(this instanceof R))return new R(t,e).getResult();var n=t||(o&&o.navigator&&o.navigator.userAgent?o.navigator.userAgent:a),r=e?E.extend(A,e):A;return this.getBrowser=function(){var t=S.rgx.apply(this,r.browser);return t.major=E.major(t.version),t},this.getCPU=function(){return S.rgx.apply(this,r.cpu)},this.getDevice=function(){return S.rgx.apply(this,r.device)},this.getEngine=function(){return S.rgx.apply(this,r.engine)},this.getOS=function(){return S.rgx.apply(this,r.os)},this.getResult=function(){return{ua:this.getUA(),browser:this.getBrowser(),engine:this.getEngine(),os:this.getOS(),device:this.getDevice(),cpu:this.getCPU()}},this.getUA=function(){return n},this.setUA=function(t){return n=t,this},this.setUA(n),this};R.VERSION=i,R.BROWSER={NAME:g,MAJOR:p,VERSION:k},R.CPU={ARCHITECTURE:x},R.DEVICE={MODEL:h,VENDOR:m,TYPE:y,CONSOLE:v,MOBILE:b,SMARTTV:w,TABLET:_,WEARABLE:O,EMBEDDED:T},R.ENGINE={NAME:g,VERSION:k},R.OS={NAME:g,VERSION:k},typeof e!==l?(typeof t!==l&&t.exports&&(e=t.exports=R),e.UAParser=R):"function"===u&&n(314)?(r=function(){return R}.call(e,n,e,t),!(r!==s&&(t.exports=r))):o.UAParser=R;var D=o.jQuery||o.Zepto;if(typeof D!==l){var I=new R;D.ua=I.getResult(),D.ua.get=function(){return I.getUA()},D.ua.set=function(t){I.setUA(t);var e=I.getResult();for(var n in e)D.ua[n]=e[n]}}}("object"==typeof window?window:this)},function(t,e){function n(t){return t=t||7,Math.random().toString(35).substr(2,t)}t.exports=n},function(t,e){},394,function(t,e,n,r){function o(t){if(t>=55296&&t<=57343||t>1114111)return"�";t in s&&(t=s[t]);var e="";return t>65535&&(t-=65536,e+=String.fromCharCode(t>>>10&1023|55296),t=56320|1023&t),e+=String.fromCharCode(t)}var s=n(r);t.exports=o}]));
//# sourceMappingURL=main.e7963744.js.map